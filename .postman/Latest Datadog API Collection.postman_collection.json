{
	"info": {
		"_postman_id": "152ffa1f-2c7e-4521-9676-c91e5999c0d2",
		"name": "Latest Datadog API Collection",
		"description": "The Datadog API is an HTTP REST API. The API uses resource-oriented URLs to call the API, uses status codes to indicate the success or failure of requests, returns JSON from all requests, and uses standard HTTP response codes. Use the Datadog API to access the Datadog platform programmatically.\n\nFor the official documentation, see https://docs.datadoghq.com/api/\n\nThis API collection was last updated on September 22, 2021.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Validate API key",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"validate"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Check if the API key (not the APP key) is valid. If invalid, a 403 is returned."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"valid\": true\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "All requests to Datadog’s API must be authenticated.\nRequests that write data require reporting access and require an `API key`.\nRequests that read data require full access and also require an `application key`.\n\n**Note:** All Datadog API clients are configured by default to consume Datadog US site APIs.\nIf you are on the Datadog EU site, set the environment variable `DATADOG_HOST` to\n`https://api.datadoghq.eu` or override this value directly when creating your client.\n\n[Manage your account’s API and application keys](https://app.datadoghq.com/account/settings#api)."
		},
		{
			"name": "AWS Integration",
			"item": [
				{
					"name": "Delete an AWS integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_key_id\": \"exercitation nostrud do sunt\",\n    \"account_id\": \"1234567\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a Datadog-AWS integration matching the specified `account_id` and `role_name parameters`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"exercitation nostrud do sunt\",\n    \"account_id\": \"1234567\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"exercitation nostrud do sunt\",\n    \"account_id\": \"1234567\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"exercitation nostrud do sunt\",\n    \"account_id\": \"1234567\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"exercitation nostrud do sunt\",\n    \"account_id\": \"1234567\",\n    \"role_name\": \"DatadogAWSIntegrationRole\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List all AWS integrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"query": [
								{
									"key": "account_id",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that matches this `account_id`."
								},
								{
									"key": "role_name",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that matches this role_name."
								},
								{
									"key": "access_key_id",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that matches this `access_key_id`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all Datadog-AWS integrations available in your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"accounts\": [\n  {\n   \"access_key_id\": \"in minim dolore tempor\",\n   \"account_id\": \"1234567\",\n   \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n   },\n   \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n   ],\n   \"filter_tags\": [\n    \"<KEY>:<VALUE>\"\n   ],\n   \"host_tags\": [\n    \"<KEY>:<VALUE>\"\n   ],\n   \"role_name\": \"DatadogAWSIntegrationRole\",\n   \"secret_access_key\": \"ex anim\"\n  },\n  {\n   \"access_key_id\": \"in ex mollit\",\n   \"account_id\": \"1234567\",\n   \"account_specific_namespace_rules\": {\n    \"auto_scaling\": false,\n    \"opswork\": false\n   },\n   \"excluded_regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n   ],\n   \"filter_tags\": [\n    \"<KEY>:<VALUE>\"\n   ],\n   \"host_tags\": [\n    \"<KEY>:<VALUE>\"\n   ],\n   \"role_name\": \"DatadogAWSIntegrationRole\",\n   \"secret_access_key\": \"minim eu\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an AWS integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_key_id\": \"dolore amet fugiat et\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"irure sed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Datadog-Amazon Web Services integration.\nUsing the `POST` method updates your integration configuration\nby adding your new configuration to the existing one in your Datadog organization.\nA unique AWS Account ID for role based authentication."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"external_id\": \"d\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an AWS integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_key_id\": \"dolore amet fugiat et\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"irure sed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws"
							],
							"query": [
								{
									"key": "account_id",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that matches this `account_id`."
								},
								{
									"key": "role_name",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that match this `role_name`.\nRequired if `account_id` is specified."
								},
								{
									"key": "access_key_id",
									"value": "dolor nostrud irure",
									"description": "Only return AWS accounts that matches this `access_key_id`.\nRequired if none of the other two options are specified."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update a Datadog-Amazon Web Services integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws?account_id=dolor nostrud irure&role_name=dolor nostrud irure&access_key_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										},
										{
											"key": "role_name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "access_key_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List namespace rules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"available_namespace_rules"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all namespace rules for a given Datadog-AWS integration. This endpoint takes no arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"officia\",\n \"anim occaecat esse\"\n]"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/available_namespace_rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"available_namespace_rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a tag filtering entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n    \"namespace\": \"elb\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a tag filtering entry."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n    \"namespace\": \"elb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n    \"namespace\": \"elb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"FAKEAC0FAKEAC2FAKEAC\",\n    \"namespace\": \"elb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all AWS tag filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							],
							"query": [
								{
									"key": "account_id",
									"value": "dolor nostrud irure",
									"description": "(Required) Only return AWS filters that matches this `account_id`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all AWS tag filters."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"filters\": [\n  {\n   \"namespace\": \"sqs\",\n   \"tag_filter_str\": \"prod*\"\n  },\n  {\n   \"namespace\": \"rds\",\n   \"tag_filter_str\": \"prod*\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering?account_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									],
									"query": [
										{
											"key": "account_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Set an AWS tag filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"namespace\": \"elb\",\n    \"tag_filter_str\": \"prod*\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"filtering"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Set an AWS tag filter."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"namespace\": \"elb\",\n    \"tag_filter_str\": \"prod*\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"namespace\": \"elb\",\n    \"tag_filter_str\": \"prod*\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"namespace\": \"elb\",\n    \"tag_filter_str\": \"prod*\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/filtering",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"filtering"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Generate a new external ID",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_key_id\": \"dolore amet fugiat et\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"irure sed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"generate_new_external_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Generate a new AWS external ID for a given AWS account ID and role name pair."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"external_id\": \"d\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_key_id\": \"adipisicing sint dolore\",\n    \"account_id\": \"1234567\",\n    \"account_specific_namespace_rules\": {\n        \"auto_scaling\": false,\n        \"opswork\": false\n    },\n    \"excluded_regions\": [\n        \"us-east-1\",\n        \"us-west-2\"\n    ],\n    \"filter_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"host_tags\": [\n        \"<KEY>:<VALUE>\"\n    ],\n    \"role_name\": \"DatadogAWSIntegrationRole\",\n    \"secret_access_key\": \"dolor aliquip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/generate_new_external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"generate_new_external_id"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-AWS integration directly through the Datadog API.\nFor more information, see the [AWS integration page](https://docs.datadoghq.com/integrations/amazon_web_services)."
		},
		{
			"name": "AWS Logs Integration",
			"item": [
				{
					"name": "Delete an AWS Logs integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a Datadog-AWS logs configuration by removing the specific Lambda ARN associated with a given AWS account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List all AWS Logs integrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all Datadog-AWS Logs integrations configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"account_id\": \"1234567\",\n  \"lambdas\": [\n   {\n    \"arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n   }\n  ],\n  \"services\": [\n   \"s3\",\n   \"elb\",\n   \"elbv2\",\n   \"cloudfront\",\n   \"redshift\",\n   \"lambda\"\n  ]\n },\n {\n  \"account_id\": \"1234567\",\n  \"lambdas\": [\n   {\n    \"arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n   }\n  ],\n  \"services\": [\n   \"s3\",\n   \"elb\",\n   \"elbv2\",\n   \"cloudfront\",\n   \"redshift\",\n   \"lambda\"\n  ]\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Add AWS Log Lambda ARN",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Attach the Lambda ARN of the Lambda created for the Datadog-AWS log collection to your AWS account ID to enable log collection."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Check that an AWS Lambda Function exists",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"check_async"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Test if permissions are present to add a log-forwarding triggers for the given services and AWS account. The input\nis the same as for Enable an AWS service log collection. Subsequent requests will always repeat the above, so this\nendpoint can be polled intermittently instead of blocking.\n\n- Returns a status of 'created' when it's checking if the Lambda exists in the account.\n- Returns a status of 'waiting' while checking.\n- Returns a status of 'checked and ok' if the Lambda exists.\n- Returns a status of 'error' if the Lambda does not exist."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"code\": \"no_such_config\",\n   \"message\": \"AWS account 12345 has no lambda config to update\"\n  },\n  {\n   \"code\": \"no_such_config\",\n   \"message\": \"AWS account 12345 has no lambda config to update\"\n  }\n ],\n \"status\": \"created\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"lambda_arn\": \"arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/check_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"check_async"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get list of AWS log ready services",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of current AWS services that Datadog offers automatic log collection. Use returned service IDs with the services parameter for the Enable an AWS service log collection API endpoint."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"label\": \"S3 Access Logs\"\n },\n {\n  \"label\": \"Classic ELB Access Logs\"\n },\n {\n  \"label\": \"Application ELB Access Logs\"\n },\n {\n  \"label\": \"CloudFront Access Logs\"\n },\n {\n  \"label\": \"Redshift Logs\"\n },\n {\n  \"label\": \"Lambda Cloudwatch Logs\"\n }\n]"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Enable an AWS Logs integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Enable automatic log collection for a list of services. This should be run after running `CreateAWSLambdaARN` to save the configuration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Check permissions for log services",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"aws",
								"logs",
								"services_async"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Test if permissions are present to add log-forwarding triggers for the\ngiven services and AWS account. Input is the same as for `EnableAWSLogServices`.\nDone async, so can be repeatedly polled in a non-blocking fashion until\nthe async request completes.\n\n- Returns a status of `created` when it's checking if the permissions exists\n  in the AWS account.\n- Returns a status of `waiting` while checking.\n- Returns a status of `checked and ok` if the Lambda exists.\n- Returns a status of `error` if the Lambda does not exist."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"code\": \"no_such_config\",\n   \"message\": \"AWS account 12345 has no lambda config to update\"\n  },\n  {\n   \"code\": \"no_such_config\",\n   \"message\": \"AWS account 12345 has no lambda config to update\"\n  }\n ],\n \"status\": \"created\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"1234567\",\n    \"services\": [\n        \"s3\",\n        \"elb\",\n        \"elbv2\",\n        \"cloudfront\",\n        \"redshift\",\n        \"lambda\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/aws/logs/services_async",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"aws",
										"logs",
										"services_async"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-AWS-Logs integration directly through Datadog API.\nFor more information, see the [AWS integration page](https://docs.datadoghq.com/api/?lang=bash#integration-aws-logs)."
		},
		{
			"name": "Azure Integration",
			"item": [
				{
					"name": "Delete an Azure integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a given Datadog-Azure integration from your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List all Azure integrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all Datadog-Azure integrations configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"errors\": [\n   \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n },\n {\n  \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n  \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n  \"errors\": [\n   \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n  \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n  \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an Azure integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Datadog-Azure integration.\n\nUsing the `POST` method updates your integration configuration by adding your new\nconfiguration to the existing one in your Datadog organization.\n\nUsing the `PUT` method updates your integration configuration by replacing your\ncurrent configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an Azure integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update a Datadog-Azure integration. Requires an existing `tenant_name` and `client_id`.\nAny other fields supplied will overwrite existing values. To overwrite `tenant_name` or `client_id`,\nuse `new_tenant_name` and `new_client_id`. To leave a field unchanged, do not supply that field in the payload."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update Azure integration host filters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"azure",
								"host_filters"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update the defined list of host filters for a given Datadog-Azure integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"testc7f6-1234-5678-9101-3fcbf464test\",\n    \"client_secret\": \"testingx./Sw*g/Y33t..R1cH+hScMDt\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"new_client_id\": \"new1c7f6-1234-5678-9101-3fcbf464test\",\n    \"new_tenant_name\": \"new1c44-1234-5678-9101-cc00736ftest\",\n    \"tenant_name\": \"testc44-1234-5678-9101-cc00736ftest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/azure/host_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"azure",
										"host_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Azure integration directly through the Datadog API.\nFor more information, see the [Datadog-Azure integration page](https://docs.datadoghq.com/integrations/azure)."
		},
		{
			"name": "Cloud Workload Security",
			"item": [
				{
					"name": "Get the latest Cloud Workload Security policy",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security",
								"cloud_workload",
								"policy",
								"download"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The download endpoint generates a Cloud Workload Security policy file from your currently active\nCloud Workload Security rules, and downloads them as a .policy file. This file can then be deployed to\nyour agents to update the policy running in your environment."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security",
										"cloud_workload",
										"policy",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/yaml"
								}
							],
							"cookie": [],
							"body": "deserunt do dolor veniam"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security/cloud_workload/policy/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security",
										"cloud_workload",
										"policy",
										"download"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Security signals generated based file and process activity in workloads."
		},
		{
			"name": "Dashboard Lists",
			"item": [
				{
					"name": "Get all dashboard lists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Fetch all of your existing dashboard list definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboard_lists\": [\n  {\n   \"name\": \"My Dashboard\",\n   \"author\": {\n    \"email\": \"cillum\",\n    \"handle\": \"id et incididunt\",\n    \"name\": \"irure in esse\"\n   },\n   \"created\": \"1954-08-14T09:42:44.511Z\",\n   \"dashboard_count\": -69033516,\n   \"id\": -23455059,\n   \"is_favorite\": true,\n   \"modified\": \"1992-02-08T11:20:46.892Z\",\n   \"type\": \"manual_dashboard_list\"\n  },\n  {\n   \"name\": \"My Dashboard\",\n   \"author\": {\n    \"email\": \"minim irure\",\n    \"handle\": \"Excepteur non deserunt occaecat\",\n    \"name\": \"velit laboris dolor tempor in\"\n   },\n   \"created\": \"1978-04-05T21:46:21.719Z\",\n   \"dashboard_count\": 95855950,\n   \"id\": 22574020,\n   \"is_favorite\": false,\n   \"modified\": \"1959-04-06T09:16:59.515Z\",\n   \"type\": \"manual_dashboard_list\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a dashboard list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Dashboard\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an empty dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"My Dashboard\",\n \"author\": {\n  \"email\": \"eiusmod labore ad\",\n  \"handle\": \"consectetur sit commodo nulla Ut\",\n  \"name\": \"mollit dolore consequat aliquip\"\n },\n \"created\": \"1953-07-15T02:25:07.162Z\",\n \"dashboard_count\": 73859082,\n \"id\": 24192427,\n \"is_favorite\": true,\n \"modified\": \"1978-02-02T02:36:34.851Z\",\n \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a dashboard list",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "34312785",
									"description": "(Required) ID of the dashboard list to delete."
								}
							]
						},
						"description": "Delete a dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_dashboard_list_id\": 5476516\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a dashboard list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "34312785",
									"description": "(Required) ID of the dashboard list to fetch."
								}
							]
						},
						"description": "Fetch an existing dashboard list's definition."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"My Dashboard\",\n \"author\": {\n  \"email\": \"eiusmod labore ad\",\n  \"handle\": \"consectetur sit commodo nulla Ut\",\n  \"name\": \"mollit dolore consequat aliquip\"\n },\n \"created\": \"1953-07-15T02:25:07.162Z\",\n \"dashboard_count\": 73859082,\n \"id\": 24192427,\n \"is_favorite\": true,\n \"modified\": \"1978-02-02T02:36:34.851Z\",\n \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a dashboard list",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Dashboard\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"lists",
								"manual",
								":list_id"
							],
							"variable": [
								{
									"key": "list_id",
									"value": "34312785",
									"description": "(Required) ID of the dashboard list to update."
								}
							]
						},
						"description": "Update the name of a dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"My Dashboard\",\n \"author\": {\n  \"email\": \"eiusmod labore ad\",\n  \"handle\": \"consectetur sit commodo nulla Ut\",\n  \"name\": \"mollit dolore consequat aliquip\"\n },\n \"created\": \"1953-07-15T02:25:07.162Z\",\n \"dashboard_count\": 73859082,\n \"id\": 24192427,\n \"is_favorite\": true,\n \"modified\": \"1978-02-02T02:36:34.851Z\",\n \"type\": \"manual_dashboard_list\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My Dashboard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/lists/manual/:list_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"lists",
										"manual",
										":list_id"
									],
									"variable": [
										{
											"key": "list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete items from a dashboard list",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        },\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "dashboard_list_id",
									"value": "<long>",
									"description": "(Required) ID of the dashboard list to delete items from."
								}
							]
						},
						"description": "Delete dashboards from an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_dashboards_from_list\": [\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  },\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get items of a Dashboard List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "dashboard_list_id",
									"value": "<long>",
									"description": "(Required) ID of the dashboard list to get items from."
								}
							]
						},
						"description": "Fetch the dashboard list’s dashboard definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboards\": [],\n \"total\": 46921809\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Add Items to a Dashboard List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        },\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "dashboard_list_id",
									"value": "<long>",
									"description": "(Required) ID of the dashboard list to add items to."
								}
							]
						},
						"description": "Add dashboards to an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"added_dashboards_to_list\": [\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  },\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update items of a dashboard list",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        },\n        {\n            \"type\": \"<string>\",\n            \"id\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"dashboard",
								"lists",
								"manual",
								":dashboard_list_id",
								"dashboards"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "dashboard_list_id",
									"value": "<long>",
									"description": "(Required) ID of the dashboard list to update items from."
								}
							]
						},
						"description": "Update dashboards of an existing dashboard list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboards\": [\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  },\n  {\n   \"type\": \"host_timeboard\",\n   \"id\": \"q5j-nti-fv6\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboards\": [\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        },\n        {\n            \"type\": \"host_timeboard\",\n            \"id\": \"q5j-nti-fv6\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/dashboard/lists/manual/:dashboard_list_id/dashboards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"dashboard",
										"lists",
										"manual",
										":dashboard_list_id",
										"dashboards"
									],
									"variable": [
										{
											"key": "dashboard_list_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Interact with your dashboard lists through the API to\norganize, find, and share all of your dashboards with your team and\norganization."
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Delete dashboards",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete dashboards using the specified IDs. If there are any failures, no dashboards will be deleted (partial success is not allowed)."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all dashboards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"query": [
								{
									"key": "filter[shared]",
									"value": "true",
									"description": "When `true`, this query only returns shared custom created\nor cloned dashboards."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all dashboards.\n\n**Note**: This query will only return custom created or cloned dashboards.\nThis query will not return preset dashboards."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "filter[shared]",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboards\": [\n  {\n   \"author_handle\": \"voluptate cupidatat consequat\",\n   \"created_at\": \"1995-02-07T19:39:48.045Z\",\n   \"description\": \"in\",\n   \"id\": \"velit labore occaecat\",\n   \"is_read_only\": false,\n   \"layout_type\": \"ordered\",\n   \"modified_at\": \"1998-01-16T04:48:58.041Z\",\n   \"title\": \"aute consectetur tempor commodo\",\n   \"url\": \"ullamco magna consequat laborum adipisicing\"\n  },\n  {\n   \"author_handle\": \"minim\",\n   \"created_at\": \"1972-10-10T03:54:48.569Z\",\n   \"description\": \"cillum in exercitation\",\n   \"id\": \"reprehenderit elit sit\",\n   \"is_read_only\": true,\n   \"layout_type\": \"ordered\",\n   \"modified_at\": \"1968-04-06T18:54:02.270Z\",\n   \"title\": \"occaecat esse\",\n   \"url\": \"aliqua labore amet\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard?filter[shared]=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									],
									"query": [
										{
											"key": "filter[shared]",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Restore deleted dashboards",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Restore dashboards using the specified IDs. If there are any failures, no dashboards will be restored (partial success is not allowed)."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"id\": \"123-abc-456\",\n            \"type\": \"dashboard\"\n        },\n        {\n            \"id\": \"789-def-101\",\n            \"type\": \"dashboard\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a new dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"occa\",\n                \"title_align\": \"left\",\n                \"title_size\": \"in aliqua elit nisi\"\n            },\n            \"id\": 16755777,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"adipisicing Lorem aliqua\",\n                \"title_align\": \"left\",\n                \"title_size\": \"minim elit enim\"\n            },\n            \"id\": -86468305,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        }\n    ],\n    \"description\": \"esse in sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"qui velit labore quis\",\n        \"consequa\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"quis occaecat veniam la\",\n        \"sit esse incididunt laboris labore\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"ad veniam esse\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ipsum enim fugiat\",\n                    \"value\": \"sit proident ullamco sunt\"\n                },\n                {\n                    \"name\": \"nisi\",\n                    \"value\": \"sint enim\"\n                }\n            ]\n        },\n        {\n            \"name\": \"nisi sunt\",\n            \"template_variables\": [\n                {\n                    \"name\": \"qui dolo\",\n                    \"value\": \"ut occaecat\"\n                },\n                {\n                    \"name\": \"deserunt proi\",\n                    \"value\": \"laboris in m\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a dashboard using the specified options. When defining queries in your widgets, take note of which queries should have the `as_count()` or `as_rate()` modifiers appended.\nRefer to the following [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab=count#in-application-modifiers) for more information on these modifiers."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"title\": \"\",\n \"layout_type\": \"ordered\",\n \"widgets\": [\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"sint\",\n    \"title_align\": \"left\",\n    \"title_size\": \"labore consectetur commodo cillum proident\"\n   },\n   \"id\": -31436565,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  },\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"ea mollit commodo nostrud incididunt\",\n    \"title_align\": \"right\",\n    \"title_size\": \"cupidatat\"\n   },\n   \"id\": -35818512,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  }\n ],\n \"author_handle\": \"test@datadoghq.com\",\n \"created_at\": \"1998-11-16T15:58:43.332Z\",\n \"description\": \"dolor dolore\",\n \"id\": \"123-abc-456\",\n \"is_read_only\": false,\n \"modified_at\": \"1967-02-12T23:42:55.469Z\",\n \"notify_list\": [\n  \"dolor consectetur ipsum tempor in\",\n  \"dolore sit pariatur u\"\n ],\n \"reflow_type\": \"auto\",\n \"restricted_roles\": [\n  \"mollit tempor esse \",\n  \"quis in sed\"\n ],\n \"template_variable_presets\": [\n  {\n   \"name\": \"enim\",\n   \"template_variables\": [\n    {\n     \"name\": \"ut\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"name\": \"deserunt laborum id\",\n     \"value\": \"adipisicing\"\n    }\n   ]\n  },\n  {\n   \"name\": \"in non e\",\n   \"template_variables\": [\n    {\n     \"name\": \"non incididunt in dolor\",\n     \"value\": \"labore tempor aliquip consectetur\"\n    },\n    {\n     \"name\": \"commodo magna do\",\n     \"value\": \"consequat\"\n    }\n   ]\n  }\n ],\n \"template_variables\": [\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  },\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  }\n ],\n \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a shared dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dashboard_id\": \"123-abc-456\",\n    \"dashboard_type\": \"custom_timeboard\",\n    \"share_type\": \"open\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Share a specified private dashboard, generating a URL at which it can be publicly viewed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboard_id\": \"123-abc-456\",\n    \"dashboard_type\": \"custom_timeboard\",\n    \"share_type\": \"open\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboard_id\": \"123-abc-456\",\n \"dashboard_type\": \"custom_timeboard\",\n \"author\": {\n  \"handle\": \"test@datadoghq.com\",\n  \"name\": \"enim pariatur quis\"\n },\n \"created_at\": \"2015-01-31T00:17:45.300Z\",\n \"global_time\": {\n  \"live_span\": \"1h\"\n },\n \"global_time_selectable_enabled\": false,\n \"public_url\": \"Duis sit sed ut\",\n \"selectable_template_vars\": [\n  {\n   \"default_value\": \"*\",\n   \"name\": \"exampleVar\",\n   \"prefix\": \"test\",\n   \"visible_tags\": [\n    \"selectableValue1\",\n    \"selectableValue2\"\n   ]\n  }\n ],\n \"share_list\": [\n  \"test@datadoghq.com\",\n  \"test2@email.com\"\n ],\n \"share_type\": \"invite\",\n \"token\": \"consequat in eu mollit\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboard_id\": \"123-abc-456\",\n    \"dashboard_type\": \"custom_timeboard\",\n    \"share_type\": \"open\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboard_id\": \"123-abc-456\",\n    \"dashboard_type\": \"custom_timeboard\",\n    \"share_type\": \"open\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Dashboard Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dashboard_id\": \"123-abc-456\",\n    \"dashboard_type\": \"custom_timeboard\",\n    \"share_type\": \"open\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke a shared dashboard URL",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) The token of the shared dashboard."
								}
							]
						},
						"description": "Revoke the public URL for a dashboard (rendering it private) associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_public_dashboard_token\": \"aliquip eiusmod qui labore\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Shared Dashboard Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a shared dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) The token of the shared dashboard. Generated when a dashboard is shared."
								}
							]
						},
						"description": "Fetch an existing shared dashboard's sharing metadata associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboard_id\": \"123-abc-456\",\n \"dashboard_type\": \"custom_timeboard\",\n \"author\": {\n  \"handle\": \"test@datadoghq.com\",\n  \"name\": \"enim pariatur quis\"\n },\n \"created_at\": \"2015-01-31T00:17:45.300Z\",\n \"global_time\": {\n  \"live_span\": \"1h\"\n },\n \"global_time_selectable_enabled\": false,\n \"public_url\": \"Duis sit sed ut\",\n \"selectable_template_vars\": [\n  {\n   \"default_value\": \"*\",\n   \"name\": \"exampleVar\",\n   \"prefix\": \"test\",\n   \"visible_tags\": [\n    \"selectableValue1\",\n    \"selectableValue2\"\n   ]\n  }\n ],\n \"share_list\": [\n  \"test@datadoghq.com\",\n  \"test2@email.com\"\n ],\n \"share_type\": \"invite\",\n \"token\": \"consequat in eu mollit\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Shared Dashboard Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a shared dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"global_time\": {\n        \"live_span\": \"1h\"\n    },\n    \"selectable_template_vars\": [\n        {\n            \"default_value\": \"*\",\n            \"name\": \"exampleVar\",\n            \"prefix\": \"test\",\n            \"visible_tags\": [\n                \"selectableValue1\",\n                \"selectableValue2\"\n            ]\n        }\n    ],\n    \"share_list\": [\n        \"test@datadoghq.com\",\n        \"test2@datadoghq.com\"\n    ],\n    \"share_type\": \"invite\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) The token of the shared dashboard."
								}
							]
						},
						"description": "Update a shared dashboard associated with the specified token."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"global_time\": {\n        \"live_span\": \"1h\"\n    },\n    \"selectable_template_vars\": [\n        {\n            \"default_value\": \"*\",\n            \"name\": \"exampleVar\",\n            \"prefix\": \"test\",\n            \"visible_tags\": [\n                \"selectableValue1\",\n                \"selectableValue2\"\n            ]\n        }\n    ],\n    \"share_list\": [\n        \"test@datadoghq.com\",\n        \"test2@datadoghq.com\"\n    ],\n    \"share_type\": \"invite\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dashboard_id\": \"123-abc-456\",\n \"dashboard_type\": \"custom_timeboard\",\n \"author\": {\n  \"handle\": \"test@datadoghq.com\",\n  \"name\": \"enim pariatur quis\"\n },\n \"created_at\": \"2015-01-31T00:17:45.300Z\",\n \"global_time\": {\n  \"live_span\": \"1h\"\n },\n \"global_time_selectable_enabled\": false,\n \"public_url\": \"Duis sit sed ut\",\n \"selectable_template_vars\": [\n  {\n   \"default_value\": \"*\",\n   \"name\": \"exampleVar\",\n   \"prefix\": \"test\",\n   \"visible_tags\": [\n    \"selectableValue1\",\n    \"selectableValue2\"\n   ]\n  }\n ],\n \"share_list\": [\n  \"test@datadoghq.com\",\n  \"test2@email.com\"\n ],\n \"share_type\": \"invite\",\n \"token\": \"consequat in eu mollit\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"global_time\": {\n        \"live_span\": \"1h\"\n    },\n    \"selectable_template_vars\": [\n        {\n            \"default_value\": \"*\",\n            \"name\": \"exampleVar\",\n            \"prefix\": \"test\",\n            \"visible_tags\": [\n                \"selectableValue1\",\n                \"selectableValue2\"\n            ]\n        }\n    ],\n    \"share_list\": [\n        \"test@datadoghq.com\",\n        \"test2@datadoghq.com\"\n    ],\n    \"share_type\": \"invite\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"global_time\": {\n        \"live_span\": \"1h\"\n    },\n    \"selectable_template_vars\": [\n        {\n            \"default_value\": \"*\",\n            \"name\": \"exampleVar\",\n            \"prefix\": \"test\",\n            \"visible_tags\": [\n                \"selectableValue1\",\n                \"selectableValue2\"\n            ]\n        }\n    ],\n    \"share_list\": [\n        \"test@datadoghq.com\",\n        \"test2@datadoghq.com\"\n    ],\n    \"share_type\": \"invite\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"global_time\": {\n        \"live_span\": \"1h\"\n    },\n    \"selectable_template_vars\": [\n        {\n            \"default_value\": \"*\",\n            \"name\": \"exampleVar\",\n            \"prefix\": \"test\",\n            \"visible_tags\": [\n                \"selectableValue1\",\n                \"selectableValue2\"\n            ]\n        }\n    ],\n    \"share_list\": [\n        \"test@datadoghq.com\",\n        \"test2@datadoghq.com\"\n    ],\n    \"share_type\": \"invite\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke shared dashboard invitations",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) The token of the shared dashboard."
								}
							]
						},
						"description": "Revoke previously sent invitation emails and active sessions used to access a given shared dashboard for specific email addresses."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all invitations for a shared dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=34312785&page_number=34312785",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"query": [
								{
									"key": "page_size",
									"value": "34312785",
									"description": "The number of records to return in a single request."
								},
								{
									"key": "page_number",
									"value": "34312785",
									"description": "The page to access (base 0)."
								}
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) Token of the shared dashboard for which to fetch invitations."
								}
							]
						},
						"description": "Describe the invitations that exist for the given shared dashboard (paginated)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=34312785&page_number=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "34312785"
										},
										{
											"key": "page_number",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-12-07T20:16:27.846985+00:00\",\n   \"email\": \"test@datadoghq.com\",\n   \"has_session\": false,\n   \"invitation_expiry\": \"2020-12-07T21:16:27.840542+00:00\",\n   \"session_expiry\": null,\n   \"share_token\": \"XXXXXX-123456abcedfg7890hijklmnopqrstuv\"\n  },\n  \"type\": \"public_dashboard_invitation\"\n },\n \"meta\": {\n  \"page\": {\n   \"total_count\": 15784509\n  }\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=34312785&page_number=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "34312785"
										},
										{
											"key": "page_number",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation?page_size=34312785&page_number=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"query": [
										{
											"key": "page_size",
											"value": "34312785"
										},
										{
											"key": "page_number",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Send shared dashboard invitation email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								"public",
								":token",
								"invitation"
							],
							"variable": [
								{
									"key": "token",
									"value": "dolor nostrud irure",
									"description": "(Required) The token of the shared dashboard."
								}
							]
						},
						"description": "Send emails to specified email addresses containing links to access a given authenticated shared dashboard. Email addresses must already belong to the authenticated shared dashboard's share_list."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-12-07T20:16:27.846985+00:00\",\n   \"email\": \"test@datadoghq.com\",\n   \"has_session\": false,\n   \"invitation_expiry\": \"2020-12-07T21:16:27.840542+00:00\",\n   \"session_expiry\": null,\n   \"share_token\": \"XXXXXX-123456abcedfg7890hijklmnopqrstuv\"\n  },\n  \"type\": \"public_dashboard_invitation\"\n },\n \"meta\": {\n  \"page\": {\n   \"total_count\": 15784509\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": [\n        {\n            \"attributes\": {\n                \"email\": \"test@datadoghq.com\"\n            },\n            \"type\": \"public_dashboard_invitation\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/public/:token/invitation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										"public",
										":token",
										"invitation"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a dashboard",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the dashboard."
								}
							]
						},
						"description": "Delete a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_dashboard_id\": \"aute\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Dashboards Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a dashboard",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the dashboard."
								}
							]
						},
						"description": "Get a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"title\": \"\",\n \"layout_type\": \"ordered\",\n \"widgets\": [\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"sint\",\n    \"title_align\": \"left\",\n    \"title_size\": \"labore consectetur commodo cillum proident\"\n   },\n   \"id\": -31436565,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  },\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"ea mollit commodo nostrud incididunt\",\n    \"title_align\": \"right\",\n    \"title_size\": \"cupidatat\"\n   },\n   \"id\": -35818512,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  }\n ],\n \"author_handle\": \"test@datadoghq.com\",\n \"created_at\": \"1998-11-16T15:58:43.332Z\",\n \"description\": \"dolor dolore\",\n \"id\": \"123-abc-456\",\n \"is_read_only\": false,\n \"modified_at\": \"1967-02-12T23:42:55.469Z\",\n \"notify_list\": [\n  \"dolor consectetur ipsum tempor in\",\n  \"dolore sit pariatur u\"\n ],\n \"reflow_type\": \"auto\",\n \"restricted_roles\": [\n  \"mollit tempor esse \",\n  \"quis in sed\"\n ],\n \"template_variable_presets\": [\n  {\n   \"name\": \"enim\",\n   \"template_variables\": [\n    {\n     \"name\": \"ut\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"name\": \"deserunt laborum id\",\n     \"value\": \"adipisicing\"\n    }\n   ]\n  },\n  {\n   \"name\": \"in non e\",\n   \"template_variables\": [\n    {\n     \"name\": \"non incididunt in dolor\",\n     \"value\": \"labore tempor aliquip consectetur\"\n    },\n    {\n     \"name\": \"commodo magna do\",\n     \"value\": \"consequat\"\n    }\n   ]\n  }\n ],\n \"template_variables\": [\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  },\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  }\n ],\n \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"occa\",\n                \"title_align\": \"left\",\n                \"title_size\": \"in aliqua elit nisi\"\n            },\n            \"id\": 16755777,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"adipisicing Lorem aliqua\",\n                \"title_align\": \"left\",\n                \"title_size\": \"minim elit enim\"\n            },\n            \"id\": -86468305,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        }\n    ],\n    \"description\": \"esse in sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"qui velit labore quis\",\n        \"consequa\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"quis occaecat veniam la\",\n        \"sit esse incididunt laboris labore\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"ad veniam esse\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ipsum enim fugiat\",\n                    \"value\": \"sit proident ullamco sunt\"\n                },\n                {\n                    \"name\": \"nisi\",\n                    \"value\": \"sint enim\"\n                }\n            ]\n        },\n        {\n            \"name\": \"nisi sunt\",\n            \"template_variables\": [\n                {\n                    \"name\": \"qui dolo\",\n                    \"value\": \"ut occaecat\"\n                },\n                {\n                    \"name\": \"deserunt proi\",\n                    \"value\": \"laboris in m\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboard",
								":dashboard_id"
							],
							"variable": [
								{
									"key": "dashboard_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the dashboard."
								}
							]
						},
						"description": "Update a dashboard using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"title\": \"\",\n \"layout_type\": \"ordered\",\n \"widgets\": [\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"sint\",\n    \"title_align\": \"left\",\n    \"title_size\": \"labore consectetur commodo cillum proident\"\n   },\n   \"id\": -31436565,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  },\n  {\n   \"definition\": {\n    \"type\": \"alert_graph\",\n    \"alert_id\": \"\",\n    \"viz_type\": \"timeseries\",\n    \"time\": {\n     \"live_span\": \"5m\"\n    },\n    \"title\": \"ea mollit commodo nostrud incididunt\",\n    \"title_align\": \"right\",\n    \"title_size\": \"cupidatat\"\n   },\n   \"id\": -35818512,\n   \"layout\": {\n    \"x\": 0,\n    \"y\": 0,\n    \"width\": 0,\n    \"height\": 0,\n    \"is_column_break\": true\n   }\n  }\n ],\n \"author_handle\": \"test@datadoghq.com\",\n \"created_at\": \"1998-11-16T15:58:43.332Z\",\n \"description\": \"dolor dolore\",\n \"id\": \"123-abc-456\",\n \"is_read_only\": false,\n \"modified_at\": \"1967-02-12T23:42:55.469Z\",\n \"notify_list\": [\n  \"dolor consectetur ipsum tempor in\",\n  \"dolore sit pariatur u\"\n ],\n \"reflow_type\": \"auto\",\n \"restricted_roles\": [\n  \"mollit tempor esse \",\n  \"quis in sed\"\n ],\n \"template_variable_presets\": [\n  {\n   \"name\": \"enim\",\n   \"template_variables\": [\n    {\n     \"name\": \"ut\",\n     \"value\": \"dolore\"\n    },\n    {\n     \"name\": \"deserunt laborum id\",\n     \"value\": \"adipisicing\"\n    }\n   ]\n  },\n  {\n   \"name\": \"in non e\",\n   \"template_variables\": [\n    {\n     \"name\": \"non incididunt in dolor\",\n     \"value\": \"labore tempor aliquip consectetur\"\n    },\n    {\n     \"name\": \"commodo magna do\",\n     \"value\": \"consequat\"\n    }\n   ]\n  }\n ],\n \"template_variables\": [\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  },\n  {\n   \"name\": \"host1\",\n   \"available_values\": [\n    \"my-host\",\n    \"host1\",\n    \"host2\"\n   ],\n   \"default\": \"my-host\",\n   \"prefix\": \"host\"\n  }\n ],\n \"url\": \"/dashboard/123-abc-456/example-dashboard-title\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"\",\n    \"layout_type\": \"ordered\",\n    \"widgets\": [\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"minim sunt occaecat\",\n                \"title_align\": \"right\",\n                \"title_size\": \"consequat Excepteur proident voluptate elit\"\n            },\n            \"id\": -44874453,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": true\n            }\n        },\n        {\n            \"definition\": {\n                \"type\": \"alert_graph\",\n                \"alert_id\": \"\",\n                \"viz_type\": \"timeseries\",\n                \"time\": {\n                    \"live_span\": \"5m\"\n                },\n                \"title\": \"reprehenderit Lorem\",\n                \"title_align\": \"right\",\n                \"title_size\": \"ullamco in fugiat deserunt\"\n            },\n            \"id\": 19462235,\n            \"layout\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"width\": 0,\n                \"height\": 0,\n                \"is_column_break\": false\n            }\n        }\n    ],\n    \"description\": \"reprehenderit voluptate sed\",\n    \"is_read_only\": false,\n    \"notify_list\": [\n        \"ex\",\n        \"magna ex labore\"\n    ],\n    \"reflow_type\": \"auto\",\n    \"restricted_roles\": [\n        \"sed velit reprehenderit sunt\",\n        \"eu sint ut amet\"\n    ],\n    \"template_variable_presets\": [\n        {\n            \"name\": \"sunt id consequat nulla\",\n            \"template_variables\": [\n                {\n                    \"name\": \"consequat\",\n                    \"value\": \"sit anim deserunt ex\"\n                },\n                {\n                    \"name\": \"tempor qui do consequat magna\",\n                    \"value\": \"magna in aliqua incididunt\"\n                }\n            ]\n        },\n        {\n            \"name\": \"dolore magna Duis\",\n            \"template_variables\": [\n                {\n                    \"name\": \"ut fugiat amet occaecat\",\n                    \"value\": \"pr\"\n                },\n                {\n                    \"name\": \"cupidatat ad\",\n                    \"value\": \"sunt consequat reprehenderit ea\"\n                }\n            ]\n        }\n    ],\n    \"template_variables\": [\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        },\n        {\n            \"name\": \"host1\",\n            \"available_values\": [\n                \"my-host\",\n                \"host1\",\n                \"host2\"\n            ],\n            \"default\": \"my-host\",\n            \"prefix\": \"host\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/dashboard/:dashboard_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"dashboard",
										":dashboard_id"
									],
									"variable": [
										{
											"key": "dashboard_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Interact with your dashboard lists through the API to make it easier to organize,\nfind, and share all of your dashboards with your team and organization."
		},
		{
			"name": "Downtimes",
			"item": [
				{
					"name": "Get all downtimes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime?current_only=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"query": [
								{
									"key": "current_only",
									"value": "true",
									"description": "Only return downtimes that are active when the request is made."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all scheduled downtimes."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime?current_only=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									],
									"query": [
										{
											"key": "current_only",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"active\": true,\n  \"active_child\": {\n   \"active\": true,\n   \"canceled\": 1412799983,\n   \"creator_id\": 123456,\n   \"disabled\": false,\n   \"downtime_type\": 2,\n   \"end\": 1412793983,\n   \"id\": 1626,\n   \"message\": \"Message on the downtime\",\n   \"monitor_id\": 123456,\n   \"monitor_tags\": [\n    \"*\"\n   ],\n   \"parent_id\": 123,\n   \"recurrence\": {\n    \"period\": 1,\n    \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n    \"type\": \"weeks\",\n    \"until_date\": 1447786293,\n    \"until_occurrences\": 2,\n    \"week_days\": [\n     \"Mon\",\n     \"Tue\"\n    ]\n   },\n   \"scope\": [\n    \"env:staging\"\n   ],\n   \"start\": 1412792983,\n   \"timezone\": \"America/New_York\",\n   \"updater_id\": 123456\n  },\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1625,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n },\n {\n  \"active\": true,\n  \"active_child\": {\n   \"active\": true,\n   \"canceled\": 1412799983,\n   \"creator_id\": 123456,\n   \"disabled\": false,\n   \"downtime_type\": 2,\n   \"end\": 1412793983,\n   \"id\": 1626,\n   \"message\": \"Message on the downtime\",\n   \"monitor_id\": 123456,\n   \"monitor_tags\": [\n    \"*\"\n   ],\n   \"parent_id\": 123,\n   \"recurrence\": {\n    \"period\": 1,\n    \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n    \"type\": \"weeks\",\n    \"until_date\": 1447786293,\n    \"until_occurrences\": 2,\n    \"week_days\": [\n     \"Mon\",\n     \"Tue\"\n    ]\n   },\n   \"scope\": [\n    \"env:staging\"\n   ],\n   \"start\": 1412792983,\n   \"timezone\": \"America/New_York\",\n   \"updater_id\": 123456\n  },\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1625,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime?current_only=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									],
									"query": [
										{
											"key": "current_only",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Schedule a downtime",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Schedule a downtime."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": true,\n \"active_child\": {\n  \"active\": true,\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1626,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n },\n \"canceled\": 1412799983,\n \"creator_id\": 123456,\n \"disabled\": false,\n \"downtime_type\": 2,\n \"end\": 1412793983,\n \"id\": 1625,\n \"message\": \"Message on the downtime\",\n \"monitor_id\": 123456,\n \"monitor_tags\": [\n  \"*\"\n ],\n \"parent_id\": 123,\n \"recurrence\": {\n  \"period\": 1,\n  \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n  \"type\": \"weeks\",\n  \"until_date\": 1447786293,\n  \"until_occurrences\": 2,\n  \"week_days\": [\n   \"Mon\",\n   \"Tue\"\n  ]\n },\n \"scope\": [\n  \"env:staging\"\n ],\n \"start\": 1412792983,\n \"timezone\": \"America/New_York\",\n \"updater_id\": 123456\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Cancel downtimes by scope",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scope\": \"host:myserver\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								"cancel",
								"by_scope"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete all downtimes that match the scope of `X`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"host:myserver\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"cancelled_ids\": [\n  123456789,\n  123456790\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"host:myserver\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"host:myserver\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Downtimes not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"host:myserver\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/cancel/by_scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										"cancel",
										"by_scope"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Cancel a downtime",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":downtime_id"
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "123456",
									"description": "(Required) ID of the downtime to cancel."
								}
							]
						},
						"description": "Cancel a downtime."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Downtime not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a downtime",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":downtime_id"
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "123456",
									"description": "(Required) ID of the downtime to fetch."
								}
							]
						},
						"description": "Get downtime detail by `downtime_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": true,\n \"active_child\": {\n  \"active\": true,\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1626,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n },\n \"canceled\": 1412799983,\n \"creator_id\": 123456,\n \"disabled\": false,\n \"downtime_type\": 2,\n \"end\": 1412793983,\n \"id\": 1625,\n \"message\": \"Message on the downtime\",\n \"monitor_id\": 123456,\n \"monitor_tags\": [\n  \"*\"\n ],\n \"parent_id\": 123,\n \"recurrence\": {\n  \"period\": 1,\n  \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n  \"type\": \"weeks\",\n  \"until_date\": 1447786293,\n  \"until_occurrences\": 2,\n  \"week_days\": [\n   \"Mon\",\n   \"Tue\"\n  ]\n },\n \"scope\": [\n  \"env:staging\"\n ],\n \"start\": 1412792983,\n \"timezone\": \"America/New_York\",\n \"updater_id\": 123456\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Downtime not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a downtime",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"downtime",
								":downtime_id"
							],
							"variable": [
								{
									"key": "downtime_id",
									"value": "123456",
									"description": "(Required) ID of the downtime to update."
								}
							]
						},
						"description": "Update a single downtime by `downtime_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"active\": true,\n \"active_child\": {\n  \"active\": true,\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1626,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n },\n \"canceled\": 1412799983,\n \"creator_id\": 123456,\n \"disabled\": false,\n \"downtime_type\": 2,\n \"end\": 1412793983,\n \"id\": 1625,\n \"message\": \"Message on the downtime\",\n \"monitor_id\": 123456,\n \"monitor_tags\": [\n  \"*\"\n ],\n \"parent_id\": 123,\n \"recurrence\": {\n  \"period\": 1,\n  \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n  \"type\": \"weeks\",\n  \"until_date\": 1447786293,\n  \"until_occurrences\": 2,\n  \"week_days\": [\n   \"Mon\",\n   \"Tue\"\n  ]\n },\n \"scope\": [\n  \"env:staging\"\n ],\n \"start\": 1412792983,\n \"timezone\": \"America/New_York\",\n \"updater_id\": 123456\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Downtime not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"disabled\": false,\n    \"end\": 1412793983,\n    \"message\": \"Message on the downtime\",\n    \"monitor_id\": 123456,\n    \"monitor_tags\": [\n        \"*\"\n    ],\n    \"parent_id\": 123,\n    \"recurrence\": {\n        \"period\": 1,\n        \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n        \"type\": \"weeks\",\n        \"until_date\": 1447786293,\n        \"until_occurrences\": 2,\n        \"week_days\": [\n            \"Mon\",\n            \"Tue\"\n        ]\n    },\n    \"scope\": [\n        \"env:staging\"\n    ],\n    \"start\": 1412792983,\n    \"timezone\": \"America/New_York\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/downtime/:downtime_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"downtime",
										":downtime_id"
									],
									"variable": [
										{
											"key": "downtime_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all downtimes for a monitor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/downtimes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"downtimes"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The id of the monitor"
								}
							]
						},
						"description": "Get all downtimes for the specified monitor"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/downtimes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"downtimes"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"active\": true,\n  \"active_child\": {\n   \"active\": true,\n   \"canceled\": 1412799983,\n   \"creator_id\": 123456,\n   \"disabled\": false,\n   \"downtime_type\": 2,\n   \"end\": 1412793983,\n   \"id\": 1626,\n   \"message\": \"Message on the downtime\",\n   \"monitor_id\": 123456,\n   \"monitor_tags\": [\n    \"*\"\n   ],\n   \"parent_id\": 123,\n   \"recurrence\": {\n    \"period\": 1,\n    \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n    \"type\": \"weeks\",\n    \"until_date\": 1447786293,\n    \"until_occurrences\": 2,\n    \"week_days\": [\n     \"Mon\",\n     \"Tue\"\n    ]\n   },\n   \"scope\": [\n    \"env:staging\"\n   ],\n   \"start\": 1412792983,\n   \"timezone\": \"America/New_York\",\n   \"updater_id\": 123456\n  },\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1625,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n },\n {\n  \"active\": true,\n  \"active_child\": {\n   \"active\": true,\n   \"canceled\": 1412799983,\n   \"creator_id\": 123456,\n   \"disabled\": false,\n   \"downtime_type\": 2,\n   \"end\": 1412793983,\n   \"id\": 1626,\n   \"message\": \"Message on the downtime\",\n   \"monitor_id\": 123456,\n   \"monitor_tags\": [\n    \"*\"\n   ],\n   \"parent_id\": 123,\n   \"recurrence\": {\n    \"period\": 1,\n    \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n    \"type\": \"weeks\",\n    \"until_date\": 1447786293,\n    \"until_occurrences\": 2,\n    \"week_days\": [\n     \"Mon\",\n     \"Tue\"\n    ]\n   },\n   \"scope\": [\n    \"env:staging\"\n   ],\n   \"start\": 1412792983,\n   \"timezone\": \"America/New_York\",\n   \"updater_id\": 123456\n  },\n  \"canceled\": 1412799983,\n  \"creator_id\": 123456,\n  \"disabled\": false,\n  \"downtime_type\": 2,\n  \"end\": 1412793983,\n  \"id\": 1625,\n  \"message\": \"Message on the downtime\",\n  \"monitor_id\": 123456,\n  \"monitor_tags\": [\n   \"*\"\n  ],\n  \"parent_id\": 123,\n  \"recurrence\": {\n   \"period\": 1,\n   \"rrule\": \"FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1\",\n   \"type\": \"weeks\",\n   \"until_date\": 1447786293,\n   \"until_occurrences\": 2,\n   \"week_days\": [\n    \"Mon\",\n    \"Tue\"\n   ]\n  },\n  \"scope\": [\n   \"env:staging\"\n  ],\n  \"start\": 1412792983,\n  \"timezone\": \"America/New_York\",\n  \"updater_id\": 123456\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/downtimes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"downtimes"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/downtimes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"downtimes"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "[Downtiming](https://docs.datadoghq.com/monitors/downtimes) gives\nyou greater control over monitor notifications by allowing you to globally exclude\nscopes from alerting. Downtime settings, which can be scheduled with start and\nend times, prevent all alerting related to specified Datadog tags."
		},
		{
			"name": "Embeddable Graphs",
			"item": [
				{
					"name": "Get all embeds",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Gets a list of previously created embeddable graphs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"embedded_graphs\": [\n  {\n   \"dash_name\": \"qui et in reprehenderit \",\n   \"dash_url\": \"sint\",\n   \"embed_id\": \"ex pariatu\",\n   \"graph_title\": \"sit amet ipsum\",\n   \"html\": \"nostrud Lorem ut\",\n   \"revoked\": true,\n   \"shared_by\": -84178270\n  },\n  {\n   \"dash_name\": \"velit nisi\",\n   \"dash_url\": \"sit ipsum pariatur consectetur id\",\n   \"embed_id\": \"culpa\",\n   \"graph_title\": \"dolor dolore veniam ad qui\",\n   \"html\": \"velit laboris ad\",\n   \"revoked\": true,\n   \"shared_by\": -39956049\n  }\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create embed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"graph_json\": \"\",\n    \"legend\": \"no\",\n    \"size\": \"medium\",\n    \"timeframe\": \"1_hour\",\n    \"title\": \"Embed created through API\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates a new embeddable graph.\n\nNote: If an embed already exists for the exact same query in a given organization,\nthe older embed is returned instead of creating a new embed.\n\nIf you are interested in using template variables, see\n[Embeddable Graphs with Template Variables](https://docs.datadoghq.com/dashboards/faq/embeddable-graphs-with-template-variables)."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"graph_json\": \"\",\n    \"legend\": \"no\",\n    \"size\": \"medium\",\n    \"timeframe\": \"1_hour\",\n    \"title\": \"Embed created through API\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dash_name\": \"Ut mollit et aliqua\",\n \"dash_url\": \"anim cillum labore eu\",\n \"embed_id\": \"ad deserunt minim consequat\",\n \"graph_title\": \"la\",\n \"html\": \"ea qui offic\",\n \"revoked\": false,\n \"shared_by\": -86881549\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"graph_json\": \"\",\n    \"legend\": \"no\",\n    \"size\": \"medium\",\n    \"timeframe\": \"1_hour\",\n    \"title\": \"Embed created through API\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"graph_json\": \"\",\n    \"legend\": \"no\",\n    \"size\": \"medium\",\n    \"timeframe\": \"1_hour\",\n    \"title\": \"Embed created through API\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get specific embed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id"
							],
							"variable": [
								{
									"key": "embed_id",
									"value": "dolor nostrud irure",
									"description": "(Required) Token of the embed."
								}
							]
						},
						"description": "Get the HTML fragment for a previously generated embed with `embed_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"dash_name\": \"Ut mollit et aliqua\",\n \"dash_url\": \"anim cillum labore eu\",\n \"embed_id\": \"ad deserunt minim consequat\",\n \"graph_title\": \"la\",\n \"html\": \"ea qui offic\",\n \"revoked\": false,\n \"shared_by\": -86881549\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Enable embed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id",
								"enable"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "embed_id",
									"value": "dolor nostrud irure",
									"description": "(Required) ID of the embed."
								}
							]
						},
						"description": "Enable a specified embed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": \"Embed 00000000000 successfully enabled.\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"enable"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke embed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"embed",
								":embed_id",
								"revoke"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "embed_id",
									"value": "dolor nostrud irure",
									"description": "(Required) ID of the embed."
								}
							]
						},
						"description": "Revoke a specified embed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": \"Embed 0000000000000 successfully revoked.\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/embed/:embed_id/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"embed",
										":embed_id",
										"revoke"
									],
									"variable": [
										{
											"key": "embed_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Interact with embeddable graphs through the API."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Query the event stream",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events?start=34312785&end=34312785&priority=normal&sources=dolor nostrud irure&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=923448871",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "start",
									"value": "34312785",
									"description": "(Required) POSIX timestamp."
								},
								{
									"key": "end",
									"value": "34312785",
									"description": "(Required) POSIX timestamp."
								},
								{
									"key": "priority",
									"value": "normal",
									"description": "Priority of your events, either `low` or `normal`."
								},
								{
									"key": "sources",
									"value": "dolor nostrud irure",
									"description": "A comma separated string of sources."
								},
								{
									"key": "tags",
									"value": "host:host0",
									"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope."
								},
								{
									"key": "unaggregated",
									"value": "true",
									"description": "Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.\nOtherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,\nit won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`"
								},
								{
									"key": "exclude_aggregate",
									"value": "true",
									"description": "Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,\nthen the unaggregated parameter is ignored and will be `true` by default."
								},
								{
									"key": "page",
									"value": "923448871",
									"description": "By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used\nwhen either unaggregated or exclude_aggregate is set to `true.`"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The event stream can be queried and filtered by time, priority, sources and tags.\n\n**Notes**:\n- If the event you’re querying contains markdown formatting of any kind,\nyou may see characters such as `%`,`\\`,`n` in your output.\n\n- This endpoint returns a maximum of `1000` most recent results. To return additional results,\nidentify the last timestamp of the last result and set that as the `end` query time to\npaginate the results. You can also use the page parameter to specify which set of `1000` results to return."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=34312785&end=34312785&priority=normal&sources=dolor nostrud irure&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=923448871",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "priority",
											"value": "normal"
										},
										{
											"key": "sources",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "unaggregated",
											"value": "true"
										},
										{
											"key": "exclude_aggregate",
											"value": "true"
										},
										{
											"key": "page",
											"value": "923448871"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"events\": [\n  {\n   \"alert_type\": \"info\",\n   \"date_happened\": -62399324,\n   \"device_name\": \"ut consequat eiusmod\",\n   \"host\": \"adipisicing et enim ad\",\n   \"id\": -29667551,\n   \"id_str\": \"dolor aliquip et Excepteur ut\",\n   \"payload\": \"{}\",\n   \"priority\": \"normal\",\n   \"source_type_name\": \"consectetur aute\",\n   \"tags\": [\n    \"environment:test\"\n   ],\n   \"text\": \"Oh boy!\",\n   \"title\": \"Did you hear the news today?\",\n   \"url\": \"et mollit velit aliquip\"\n  },\n  {\n   \"alert_type\": \"info\",\n   \"date_happened\": -7091736,\n   \"device_name\": \"id cupidatat sint\",\n   \"host\": \"labore\",\n   \"id\": -2089925,\n   \"id_str\": \"sit ea ipsum in commodo\",\n   \"payload\": \"{}\",\n   \"priority\": \"normal\",\n   \"source_type_name\": \"in dolore ea\",\n   \"tags\": [\n    \"environment:test\"\n   ],\n   \"text\": \"Oh boy!\",\n   \"title\": \"Did you hear the news today?\",\n   \"url\": \"enim in eu deserunt\"\n  }\n ],\n \"status\": \"ut qui dolore\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=34312785&end=34312785&priority=normal&sources=dolor nostrud irure&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=923448871",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "priority",
											"value": "normal"
										},
										{
											"key": "sources",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "unaggregated",
											"value": "true"
										},
										{
											"key": "exclude_aggregate",
											"value": "true"
										},
										{
											"key": "page",
											"value": "923448871"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?start=34312785&end=34312785&priority=normal&sources=dolor nostrud irure&tags=host:host0&unaggregated=true&exclude_aggregate=true&page=923448871",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "priority",
											"value": "normal"
										},
										{
											"key": "sources",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "unaggregated",
											"value": "true"
										},
										{
											"key": "exclude_aggregate",
											"value": "true"
										},
										{
											"key": "page",
											"value": "923448871"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Post an event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Did you hear the news today?\",\n    \"text\": \"Oh boy!\",\n    \"aggregation_key\": \"adip\",\n    \"alert_type\": \"info\",\n    \"device_name\": \"ut cillum occaecat amet eu\",\n    \"host\": \"do ani\",\n    \"priority\": \"normal\",\n    \"related_event_id\": -20896850,\n    \"source_type_name\": \"in in sit\",\n    \"tags\": [\n        \"environment:test\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "This endpoint allows you to post events to the stream.\nTag them, set priority and event aggregate them with other events."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Did you hear the news today?\",\n    \"text\": \"Oh boy!\",\n    \"aggregation_key\": \"Duis quis dolor pariatur\",\n    \"alert_type\": \"info\",\n    \"date_happened\": -16710819,\n    \"device_name\": \"Duis velit\",\n    \"host\": \"aliqua consequat dolor\",\n    \"priority\": \"normal\",\n    \"related_event_id\": 77158996,\n    \"source_type_name\": \"incididunt non\",\n    \"tags\": [\n        \"environment:test\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"alert_type\": \"info\",\n \"date_happened\": 53310603,\n \"device_name\": \"sint consequat officia\",\n \"host\": \"incididunt\",\n \"id\": 49849387,\n \"payload\": \"{}\",\n \"priority\": \"normal\",\n \"related_event_id\": -85776872,\n \"source_type_name\": \"ea culpa dolore voluptate\",\n \"status\": \"in ex\",\n \"tags\": [\n  \"environment:test\"\n ],\n \"text\": \"Oh boy!\",\n \"title\": \"Did you hear the news today?\",\n \"url\": \"sint sed fugiat pariatur ut\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Did you hear the news today?\",\n    \"text\": \"Oh boy!\",\n    \"aggregation_key\": \"Duis quis dolor pariatur\",\n    \"alert_type\": \"info\",\n    \"date_happened\": -16710819,\n    \"device_name\": \"Duis velit\",\n    \"host\": \"aliqua consequat dolor\",\n    \"priority\": \"normal\",\n    \"related_event_id\": 77158996,\n    \"source_type_name\": \"incididunt non\",\n    \"tags\": [\n        \"environment:test\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an event",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								":event_id"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "34312785",
									"description": "(Required) The ID of the event."
								}
							]
						},
						"description": "This endpoint allows you to query for event details.\n\n**Note**: If the event you’re querying contains markdown formatting of any kind,\nyou may see characters such as `%`,`\\`,`n` in your output."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"event\": {\n  \"alert_type\": \"info\",\n  \"date_happened\": -56745414,\n  \"device_name\": \"qui\",\n  \"host\": \"officia incididunt consequat esse\",\n  \"id\": -74439217,\n  \"id_str\": \"velit\",\n  \"payload\": \"{}\",\n  \"priority\": \"normal\",\n  \"source_type_name\": \"sed ex eu\",\n  \"tags\": [\n   \"environment:test\"\n  ],\n  \"text\": \"Oh boy!\",\n  \"title\": \"Did you hear the news today?\",\n  \"url\": \"ex sed ut qui\"\n },\n \"status\": \"officia tempor\"\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The events service allows you to programmatically post events to the event stream\nand fetch events from the event stream. Events are limited to 4000 characters. If an event is sent out with a message\ncontaining more than 4000 characters only the 4000 first characters are displayed."
		},
		{
			"name": "GCP Integration",
			"item": [
				{
					"name": "Delete a GCP integration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": true,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/gcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"gcp"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a given Datadog-GCP integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List all GCP integrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/gcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"gcp"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all Datadog-GCP integrations configured in your Datadog account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"automute\": false,\n  \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n  \"client_id\": \"123456712345671234567\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n  \"errors\": [\n   \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"private_key\": \"private_key\",\n  \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n  \"project_id\": \"datadog-apitest\",\n  \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n  \"type\": \"service_account\"\n },\n {\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"automute\": false,\n  \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n  \"client_id\": \"123456712345671234567\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n  \"errors\": [\n   \"*\"\n  ],\n  \"host_filters\": \"key:value,filter:example\",\n  \"private_key\": \"private_key\",\n  \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n  \"project_id\": \"datadog-apitest\",\n  \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n  \"type\": \"service_account\"\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a GCP integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": true,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/gcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"gcp"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Datadog-GCP integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a GCP integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": true,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/gcp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"gcp"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update a Datadog-GCP integrations host_filters and/or auto-mute.\nRequires a `project_id` and `client_email`, however these fields cannot be updated.\nIf you need to update these fields, delete and use the create (`POST`) endpoint.\nThe unspecified fields will keep their original values."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"automute\": false,\n    \"client_email\": \"api-dev@datadog-sandbox.iam.gserviceaccount.com\",\n    \"client_id\": \"123456712345671234567\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>\",\n    \"errors\": [\n        \"*\"\n    ],\n    \"host_filters\": \"key:value,filter:example\",\n    \"private_key\": \"private_key\",\n    \"private_key_id\": \"123456789abcdefghi123456789abcdefghijklm\",\n    \"project_id\": \"datadog-apitest\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"type\": \"service_account\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/gcp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"gcp"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Google Cloud Platform (GCP) integration directly\nthrough the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform)."
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Mute a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"end\": 1579098130,\n    \"message\": \"Muting this host for a test!\",\n    \"override\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":host_name",
								"mute"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the host to mute."
								}
							]
						},
						"description": "Mute a host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"end\": 1579098130,\n    \"message\": \"Muting this host for a test!\",\n    \"override\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"action\": \"Muted\",\n \"end\": 1579098130,\n \"hostname\": \"test.host\",\n \"message\": \"Muting this host for a test!\"\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"end\": 1579098130,\n    \"message\": \"Muting this host for a test!\",\n    \"override\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"end\": 1579098130,\n    \"message\": \"Muting this host for a test!\",\n    \"override\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/mute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"mute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Unmute a host",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"host",
								":host_name",
								"unmute"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the host to unmute."
								}
							]
						},
						"description": "Unmutes a host. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"action\": \"Muted\",\n \"end\": 1579098130,\n \"hostname\": \"test.host\",\n \"message\": \"Muting this host for a test!\"\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/host/:host_name/unmute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"host",
										":host_name",
										"unmute"
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all hosts for your organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hosts?filter=dolor nostrud irure&sort_field=dolor nostrud irure&sort_dir=dolor nostrud irure&start=34312785&count=34312785&from=34312785&include_muted_hosts_data=true&include_hosts_metadata=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hosts"
							],
							"query": [
								{
									"key": "filter",
									"value": "dolor nostrud irure",
									"description": "String to filter search results."
								},
								{
									"key": "sort_field",
									"value": "dolor nostrud irure",
									"description": "Sort hosts by this field."
								},
								{
									"key": "sort_dir",
									"value": "dolor nostrud irure",
									"description": "Direction of sort. Options include `asc` and `desc`."
								},
								{
									"key": "start",
									"value": "34312785",
									"description": "Host result to start search from."
								},
								{
									"key": "count",
									"value": "34312785",
									"description": "Number of hosts to return. Max 1000."
								},
								{
									"key": "from",
									"value": "34312785",
									"description": "Number of seconds since UNIX epoch from which you want to search your hosts."
								},
								{
									"key": "include_muted_hosts_data",
									"value": "true",
									"description": "Include information on the muted status of hosts and when the mute expires."
								},
								{
									"key": "include_hosts_metadata",
									"value": "true",
									"description": "Include additional metadata about the hosts (agent_version, machine, platform, processor, etc.)."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "This endpoint allows searching for hosts by name, alias, or tag.\nHosts live within the past 3 hours are included by default.\nRetention is 7 days.\nResults are paginated with a max of 1000 results at a time."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=dolor nostrud irure&sort_field=dolor nostrud irure&sort_dir=dolor nostrud irure&start=34312785&count=34312785&from=34312785&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_field",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_dir",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "count",
											"value": "34312785"
										},
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true"
										},
										{
											"key": "include_hosts_metadata",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"host_list\": [\n  {\n   \"aliases\": [\n    \"mycoolhost-1\",\n    \"mycoolhost-1\"\n   ],\n   \"apps\": [\n    \"agent\",\n    \"agent\"\n   ],\n   \"aws_name\": \"mycoolhost-1\",\n   \"host_name\": \"i-deadbeef\",\n   \"id\": 123456,\n   \"is_muted\": false,\n   \"last_reported_time\": 1565000000,\n   \"meta\": {\n    \"nixV\": [\n     \"Ubuntu\",\n     \"Ubuntu\"\n    ]\n   },\n   \"metrics\": {\n    \"cpu\": 99,\n    \"iowait\": 3.2,\n    \"load\": 0.5\n   },\n   \"mute_timeout\": -16704096,\n   \"name\": \"i-hostname\",\n   \"sources\": [\n    \"aws\",\n    \"aws\"\n   ],\n   \"tags_by_source\": {},\n   \"up\": true\n  },\n  {\n   \"aliases\": [\n    \"mycoolhost-1\",\n    \"mycoolhost-1\"\n   ],\n   \"apps\": [\n    \"agent\",\n    \"agent\"\n   ],\n   \"aws_name\": \"mycoolhost-1\",\n   \"host_name\": \"i-deadbeef\",\n   \"id\": 123456,\n   \"is_muted\": false,\n   \"last_reported_time\": 1565000000,\n   \"meta\": {\n    \"nixV\": [\n     \"Ubuntu\",\n     \"Ubuntu\"\n    ]\n   },\n   \"metrics\": {\n    \"cpu\": 99,\n    \"iowait\": 3.2,\n    \"load\": 0.5\n   },\n   \"mute_timeout\": -68890806,\n   \"name\": \"i-hostname\",\n   \"sources\": [\n    \"aws\",\n    \"aws\"\n   ],\n   \"tags_by_source\": {},\n   \"up\": true\n  }\n ],\n \"total_matching\": 1,\n \"total_returned\": 1\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=dolor nostrud irure&sort_field=dolor nostrud irure&sort_dir=dolor nostrud irure&start=34312785&count=34312785&from=34312785&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_field",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_dir",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "count",
											"value": "34312785"
										},
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true"
										},
										{
											"key": "include_hosts_metadata",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts?filter=dolor nostrud irure&sort_field=dolor nostrud irure&sort_dir=dolor nostrud irure&start=34312785&count=34312785&from=34312785&include_muted_hosts_data=true&include_hosts_metadata=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts"
									],
									"query": [
										{
											"key": "filter",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_field",
											"value": "dolor nostrud irure"
										},
										{
											"key": "sort_dir",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "count",
											"value": "34312785"
										},
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "include_muted_hosts_data",
											"value": "true"
										},
										{
											"key": "include_hosts_metadata",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get the total number of active hosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hosts/totals?from=34312785",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hosts",
								"totals"
							],
							"query": [
								{
									"key": "from",
									"value": "34312785",
									"description": "Number of seconds from which you want to get total number of active hosts."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "This endpoint returns the total number of active and up hosts in your Datadog account.\nActive means the host has reported in the past hour, and up means it has reported in the past two hours."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_active\": -24928020,\n \"total_up\": -18386192\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hosts/totals?from=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hosts",
										"totals"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Get information about your live hosts in Datadog."
		},
		{
			"name": "Incidents",
			"item": [
				{
					"name": "Get a list of incidents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"incidents"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>,<string>",
									"description": "Specifies which types of related objects should be included in the response."
								},
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[offset]",
									"value": "0",
									"description": "Specific offset to use as the beginning of the returned page."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all incidents for the user's organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"00000000-0000-0000-0000-000000000000\",\n   \"type\": \"incidents\",\n   \"attributes\": {\n    \"title\": \"A test incident title\",\n    \"created\": \"1960-06-21T05:10:17.750Z\",\n    \"customer_impact_duration\": 26382278,\n    \"customer_impact_end\": \"1987-04-14T14:11:29.345Z\",\n    \"customer_impact_scope\": \"An example customer impact scope\",\n    \"customer_impact_start\": \"1991-11-02T15:03:33.997Z\",\n    \"customer_impacted\": false,\n    \"detected\": \"2016-06-24T17:54:38.320Z\",\n    \"fields\": {\n     \"severity\": {\n      \"type\": \"dropdown\",\n      \"value\": \"SEV-5\"\n     }\n    },\n    \"modified\": \"1994-11-11T10:29:58.506Z\",\n    \"notification_handles\": [\n     {\n      \"display_name\": \"Jane Doe\",\n      \"handle\": \"@test.user@test.com\"\n     },\n     {\n      \"display_name\": \"Jane Doe\",\n      \"handle\": \"@test.user@test.com\"\n     }\n    ],\n    \"postmortem_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"public_id\": 1,\n    \"resolved\": \"1980-02-04T15:18:17.176Z\",\n    \"time_to_detect\": -68865584,\n    \"time_to_internal_response\": 39528734,\n    \"time_to_repair\": 10687639,\n    \"time_to_resolve\": 52433106\n   },\n   \"relationships\": {\n    \"commander_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"created_by_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"integrations\": {\n     \"data\": [\n      {\n       \"id\": \"00000000-0000-0000-0000-000000000000\",\n       \"type\": \"incident_integrations\"\n      },\n      {\n       \"id\": \"00000000-0000-0000-0000-000000000000\",\n       \"type\": \"incident_integrations\"\n      }\n     ]\n    },\n    \"last_modified_by_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"postmortem\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_postmortems\"\n     }\n    }\n   }\n  },\n  {\n   \"id\": \"00000000-0000-0000-0000-000000000000\",\n   \"type\": \"incidents\",\n   \"attributes\": {\n    \"title\": \"A test incident title\",\n    \"created\": \"2005-10-31T21:06:34.210Z\",\n    \"customer_impact_duration\": -30427810,\n    \"customer_impact_end\": \"1992-05-13T01:31:35.892Z\",\n    \"customer_impact_scope\": \"An example customer impact scope\",\n    \"customer_impact_start\": \"1949-04-10T13:39:40.691Z\",\n    \"customer_impacted\": false,\n    \"detected\": \"1956-08-12T10:09:59.813Z\",\n    \"fields\": {\n     \"severity\": {\n      \"type\": \"dropdown\",\n      \"value\": \"SEV-5\"\n     }\n    },\n    \"modified\": \"1973-05-18T23:09:51.150Z\",\n    \"notification_handles\": [\n     {\n      \"display_name\": \"Jane Doe\",\n      \"handle\": \"@test.user@test.com\"\n     },\n     {\n      \"display_name\": \"Jane Doe\",\n      \"handle\": \"@test.user@test.com\"\n     }\n    ],\n    \"postmortem_id\": \"00000000-0000-0000-0000-000000000000\",\n    \"public_id\": 1,\n    \"resolved\": \"1961-08-16T17:20:01.190Z\",\n    \"time_to_detect\": -13942422,\n    \"time_to_internal_response\": -98389127,\n    \"time_to_repair\": 65143531,\n    \"time_to_resolve\": -85094998\n   },\n   \"relationships\": {\n    \"commander_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"created_by_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"integrations\": {\n     \"data\": [\n      {\n       \"id\": \"00000000-0000-0000-0000-000000000000\",\n       \"type\": \"incident_integrations\"\n      },\n      {\n       \"id\": \"00000000-0000-0000-0000-000000000000\",\n       \"type\": \"incident_integrations\"\n      }\n     ]\n    },\n    \"last_modified_by_user\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"postmortem\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_postmortems\"\n     }\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1964-08-27T15:38:15.643Z\",\n    \"disabled\": false,\n    \"email\": \"in nostrud deserunt Ut\",\n    \"handle\": \"culpa in et\",\n    \"icon\": \"sed tempor irure Ut in\",\n    \"modified_at\": \"1943-05-10T18:07:36.014Z\",\n    \"name\": \"fugiat occaecat\",\n    \"service_account\": true,\n    \"status\": \"ullamco quis commodo aliqua\",\n    \"title\": \"dolor exercitation velit in\",\n    \"verified\": true\n   },\n   \"id\": \"minim officia\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2017-02-20T15:57:21.538Z\",\n    \"disabled\": true,\n    \"email\": \"eu culpa\",\n    \"handle\": \"dolor amet occaecat ut\",\n    \"icon\": \"sunt\",\n    \"modified_at\": \"1961-08-27T05:57:11.275Z\",\n    \"name\": \"sit reprehenderit officia sint\",\n    \"service_account\": false,\n    \"status\": \"Excepteur\",\n    \"title\": \"commodo ullamco et ut\",\n    \"verified\": true\n   },\n   \"id\": \"nulla cupidatat incididunt laborum\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"meta\": {\n  \"pagination\": {\n   \"next_offset\": 1000,\n   \"offset\": 10,\n   \"size\": 1000\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents?include=<string>,<string>&page[size]=10&page[offset]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an incident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"<string>\",\n            \"customer_impacted\": \"<boolean>\",\n            \"fields\": \"<object>\",\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"<string>\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"<string>\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"<string>\",\n                    \"handle\": \"<string>\"\n                },\n                {\n                    \"display_name\": \"<string>\",\n                    \"handle\": \"<string>\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/incidents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"incidents"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an incident."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"A test incident title\",\n            \"customer_impacted\": false,\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"incidents\",\n  \"attributes\": {\n   \"title\": \"A test incident title\",\n   \"created\": \"1974-06-30T22:50:42.808Z\",\n   \"customer_impact_duration\": 79559097,\n   \"customer_impact_end\": \"1969-05-02T17:24:54.500Z\",\n   \"customer_impact_scope\": \"An example customer impact scope\",\n   \"customer_impact_start\": \"1951-08-28T00:48:11.629Z\",\n   \"customer_impacted\": false,\n   \"detected\": \"2021-06-15T15:39:44.072Z\",\n   \"fields\": {\n    \"severity\": {\n     \"type\": \"dropdown\",\n     \"value\": \"SEV-5\"\n    }\n   },\n   \"modified\": \"2018-08-18T21:51:05.688Z\",\n   \"notification_handles\": [\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    },\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    }\n   ],\n   \"postmortem_id\": \"00000000-0000-0000-0000-000000000000\",\n   \"public_id\": 1,\n   \"resolved\": \"2009-02-10T12:10:33.245Z\",\n   \"time_to_detect\": 98441798,\n   \"time_to_internal_response\": -91337629,\n   \"time_to_repair\": -58664716,\n   \"time_to_resolve\": -23500898\n  },\n  \"relationships\": {\n   \"commander_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"created_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"integrations\": {\n    \"data\": [\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     },\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     }\n    ]\n   },\n   \"last_modified_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"postmortem\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"incident_postmortems\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2018-08-29T04:21:37.249Z\",\n    \"disabled\": false,\n    \"email\": \"qui ullamco aliqua sunt\",\n    \"handle\": \"Duis reprehenderit\",\n    \"icon\": \"exercitation officia\",\n    \"modified_at\": \"1955-01-14T08:55:04.974Z\",\n    \"name\": \"eiusmod eu minim\",\n    \"service_account\": true,\n    \"status\": \"ea eiusmod non\",\n    \"title\": \"mag\",\n    \"verified\": false\n   },\n   \"id\": \"dolor enim minim\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1972-08-31T02:00:18.954Z\",\n    \"disabled\": false,\n    \"email\": \"ea\",\n    \"handle\": \"Duis pariatur culpa in ex\",\n    \"icon\": \"ut elit eiusmod enim quis\",\n    \"modified_at\": \"1990-04-12T11:34:10.150Z\",\n    \"name\": \"aute officia\",\n    \"service_account\": true,\n    \"status\": \"ad pariatur quis exercitation\",\n    \"title\": \"occaecat ad incididunt nisi consectetur\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"A test incident title\",\n            \"customer_impacted\": false,\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"A test incident title\",\n            \"customer_impacted\": false,\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"A test incident title\",\n            \"customer_impacted\": false,\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"title\": \"A test incident title\",\n            \"customer_impacted\": false,\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"initial_cells\": [\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                },\n                {\n                    \"content\": {\n                        \"content\": \"An example timeline cell message.\"\n                    },\n                    \"cell_type\": \"markdown\",\n                    \"important\": false\n                }\n            ],\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ]\n        },\n        \"relationships\": {\n            \"commander\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing incident",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"incidents",
								":incident_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "incident_id",
									"value": "<string>",
									"description": "(Required) The UUID the incident."
								}
							]
						},
						"description": "Deletes an existing incident from the users organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get the details of an incident",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"incidents",
								":incident_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>,<string>",
									"description": "Specifies which types of related objects should be included in the response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "incident_id",
									"value": "<string>",
									"description": "(Required) The UUID the incident."
								}
							]
						},
						"description": "Get the details of an incident by `incident_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										}
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"incidents\",\n  \"attributes\": {\n   \"title\": \"A test incident title\",\n   \"created\": \"1974-06-30T22:50:42.808Z\",\n   \"customer_impact_duration\": 79559097,\n   \"customer_impact_end\": \"1969-05-02T17:24:54.500Z\",\n   \"customer_impact_scope\": \"An example customer impact scope\",\n   \"customer_impact_start\": \"1951-08-28T00:48:11.629Z\",\n   \"customer_impacted\": false,\n   \"detected\": \"2021-06-15T15:39:44.072Z\",\n   \"fields\": {\n    \"severity\": {\n     \"type\": \"dropdown\",\n     \"value\": \"SEV-5\"\n    }\n   },\n   \"modified\": \"2018-08-18T21:51:05.688Z\",\n   \"notification_handles\": [\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    },\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    }\n   ],\n   \"postmortem_id\": \"00000000-0000-0000-0000-000000000000\",\n   \"public_id\": 1,\n   \"resolved\": \"2009-02-10T12:10:33.245Z\",\n   \"time_to_detect\": 98441798,\n   \"time_to_internal_response\": -91337629,\n   \"time_to_repair\": -58664716,\n   \"time_to_resolve\": -23500898\n  },\n  \"relationships\": {\n   \"commander_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"created_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"integrations\": {\n    \"data\": [\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     },\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     }\n    ]\n   },\n   \"last_modified_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"postmortem\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"incident_postmortems\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2018-08-29T04:21:37.249Z\",\n    \"disabled\": false,\n    \"email\": \"qui ullamco aliqua sunt\",\n    \"handle\": \"Duis reprehenderit\",\n    \"icon\": \"exercitation officia\",\n    \"modified_at\": \"1955-01-14T08:55:04.974Z\",\n    \"name\": \"eiusmod eu minim\",\n    \"service_account\": true,\n    \"status\": \"ea eiusmod non\",\n    \"title\": \"mag\",\n    \"verified\": false\n   },\n   \"id\": \"dolor enim minim\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1972-08-31T02:00:18.954Z\",\n    \"disabled\": false,\n    \"email\": \"ea\",\n    \"handle\": \"Duis pariatur culpa in ex\",\n    \"icon\": \"ut elit eiusmod enim quis\",\n    \"modified_at\": \"1990-04-12T11:34:10.150Z\",\n    \"name\": \"aute officia\",\n    \"service_account\": true,\n    \"status\": \"ad pariatur quis exercitation\",\n    \"title\": \"occaecat ad incididunt nisi consectetur\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										}
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										}
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										}
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id?include=<string>,<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>,<string>"
										}
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an existing incident",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"<string>\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": \"<boolean>\",\n            \"detected\": \"<dateTime>\",\n            \"fields\": \"<object>\",\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"<string>\",\n                    \"handle\": \"<string>\"\n                },\n                {\n                    \"display_name\": \"<string>\",\n                    \"handle\": \"<string>\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"<string>\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"<string>\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"incidents",
								":incident_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "incident_id",
									"value": "<string>",
									"description": "(Required) The UUID the incident."
								}
							]
						},
						"description": "Updates an incident. Provide only the attributes that should be updated as this request is a partial update."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"Example customer impact scope\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": false,\n            \"detected\": \"<dateTime>\",\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"A test incident title\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"incidents\",\n  \"attributes\": {\n   \"title\": \"A test incident title\",\n   \"created\": \"1974-06-30T22:50:42.808Z\",\n   \"customer_impact_duration\": 79559097,\n   \"customer_impact_end\": \"1969-05-02T17:24:54.500Z\",\n   \"customer_impact_scope\": \"An example customer impact scope\",\n   \"customer_impact_start\": \"1951-08-28T00:48:11.629Z\",\n   \"customer_impacted\": false,\n   \"detected\": \"2021-06-15T15:39:44.072Z\",\n   \"fields\": {\n    \"severity\": {\n     \"type\": \"dropdown\",\n     \"value\": \"SEV-5\"\n    }\n   },\n   \"modified\": \"2018-08-18T21:51:05.688Z\",\n   \"notification_handles\": [\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    },\n    {\n     \"display_name\": \"Jane Doe\",\n     \"handle\": \"@test.user@test.com\"\n    }\n   ],\n   \"postmortem_id\": \"00000000-0000-0000-0000-000000000000\",\n   \"public_id\": 1,\n   \"resolved\": \"2009-02-10T12:10:33.245Z\",\n   \"time_to_detect\": 98441798,\n   \"time_to_internal_response\": -91337629,\n   \"time_to_repair\": -58664716,\n   \"time_to_resolve\": -23500898\n  },\n  \"relationships\": {\n   \"commander_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"created_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"integrations\": {\n    \"data\": [\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     },\n     {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"incident_integrations\"\n     }\n    ]\n   },\n   \"last_modified_by_user\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"postmortem\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"incident_postmortems\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2018-08-29T04:21:37.249Z\",\n    \"disabled\": false,\n    \"email\": \"qui ullamco aliqua sunt\",\n    \"handle\": \"Duis reprehenderit\",\n    \"icon\": \"exercitation officia\",\n    \"modified_at\": \"1955-01-14T08:55:04.974Z\",\n    \"name\": \"eiusmod eu minim\",\n    \"service_account\": true,\n    \"status\": \"ea eiusmod non\",\n    \"title\": \"mag\",\n    \"verified\": false\n   },\n   \"id\": \"dolor enim minim\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1972-08-31T02:00:18.954Z\",\n    \"disabled\": false,\n    \"email\": \"ea\",\n    \"handle\": \"Duis pariatur culpa in ex\",\n    \"icon\": \"ut elit eiusmod enim quis\",\n    \"modified_at\": \"1990-04-12T11:34:10.150Z\",\n    \"name\": \"aute officia\",\n    \"service_account\": true,\n    \"status\": \"ad pariatur quis exercitation\",\n    \"title\": \"occaecat ad incididunt nisi consectetur\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"Example customer impact scope\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": false,\n            \"detected\": \"<dateTime>\",\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"A test incident title\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"Example customer impact scope\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": false,\n            \"detected\": \"<dateTime>\",\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"A test incident title\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"Example customer impact scope\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": false,\n            \"detected\": \"<dateTime>\",\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"A test incident title\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"incidents\",\n        \"attributes\": {\n            \"customer_impact_end\": \"<dateTime>\",\n            \"customer_impact_scope\": \"Example customer impact scope\",\n            \"customer_impact_start\": \"<dateTime>\",\n            \"customer_impacted\": false,\n            \"detected\": \"<dateTime>\",\n            \"fields\": {\n                \"severity\": {\n                    \"type\": \"dropdown\",\n                    \"value\": \"SEV-5\"\n                }\n            },\n            \"notification_handles\": [\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                },\n                {\n                    \"display_name\": \"Jane Doe\",\n                    \"handle\": \"@test.user@test.com\"\n                }\n            ],\n            \"resolved\": \"<dateTime>\",\n            \"title\": \"A test incident title\"\n        },\n        \"relationships\": {\n            \"commander_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"created_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"integrations\": {\n                \"data\": [\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    },\n                    {\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\n                        \"type\": \"incident_integrations\"\n                    }\n                ]\n            },\n            \"last_modified_by_user\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"users\"\n                }\n            },\n            \"postmortem\": {\n                \"data\": {\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\n                    \"type\": \"incident_postmortems\"\n                }\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/incidents/:incident_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"incidents",
										":incident_id"
									],
									"variable": [
										{
											"key": "incident_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Manage incident response."
		},
		{
			"name": "Incident Services",
			"item": [
				{
					"name": "Get a list of all incident services",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Specifies which types of related objects should be included in the response."
								},
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[offset]",
									"value": "0",
									"description": "Specific offset to use as the beginning of the returned page."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "A search query that filters services by name."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all incident services uploaded for the requesting user's organization. If the `include[users]` query parameter is provided, the included attribute will contain the users related to these incident services."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=ExampleServiceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleServiceName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"00000000-0000-0000-0000-000000000000\",\n   \"type\": \"services\",\n   \"attributes\": {\n    \"created\": \"1972-03-08T05:40:53.181Z\",\n    \"modified\": \"1995-02-14T02:43:49.705Z\",\n    \"name\": \"service name\"\n   },\n   \"relationships\": {\n    \"created_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"last_modified_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   }\n  },\n  {\n   \"id\": \"00000000-0000-0000-0000-000000000000\",\n   \"type\": \"services\",\n   \"attributes\": {\n    \"created\": \"1966-06-26T18:52:36.098Z\",\n    \"modified\": \"2000-09-13T08:05:28.154Z\",\n    \"name\": \"service name\"\n   },\n   \"relationships\": {\n    \"created_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"last_modified_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   }\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1978-01-27T16:47:06.415Z\",\n    \"disabled\": true,\n    \"email\": \"dolor aliquip eiusmod irure\",\n    \"handle\": \"aliqua pari\",\n    \"icon\": \"ut est qui sunt veni\",\n    \"modified_at\": \"1975-07-02T02:31:43.167Z\",\n    \"name\": \"mollit velit est\",\n    \"service_account\": false,\n    \"status\": \"adipisicing dolore qui ut\",\n    \"title\": \"elit in cupidatat sunt\",\n    \"verified\": true\n   },\n   \"id\": \"Lorem pariatur\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1947-03-24T12:53:55.797Z\",\n    \"disabled\": false,\n    \"email\": \"deserunt dolor\",\n    \"handle\": \"deserunt dolore\",\n    \"icon\": \"Lorem enim quis\",\n    \"modified_at\": \"1983-11-12T13:11:39.676Z\",\n    \"name\": \"consectetur\",\n    \"service_account\": false,\n    \"status\": \"deserunt anim nisi ullamco qui\",\n    \"title\": \"consequat in\",\n    \"verified\": false\n   },\n   \"id\": \"adipisicing esse labore ut ut\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"meta\": {\n  \"pagination\": {\n   \"next_offset\": 1000,\n   \"offset\": 10,\n   \"size\": 1000\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=ExampleServiceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleServiceName"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=ExampleServiceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleServiceName"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=ExampleServiceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleServiceName"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services?include=<string>&page[size]=10&page[offset]=0&filter=ExampleServiceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleServiceName"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a new incident service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates a new incident service."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"services\",\n  \"attributes\": {\n   \"created\": \"1985-11-26T21:25:29.943Z\",\n   \"modified\": \"2015-09-24T15:00:49.017Z\",\n   \"name\": \"service name\"\n  },\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2015-03-05T13:25:09.469Z\",\n    \"disabled\": true,\n    \"email\": \"irure\",\n    \"handle\": \"ipsum laborum\",\n    \"icon\": \"incididunt qui\",\n    \"modified_at\": \"1987-08-27T20:43:33.637Z\",\n    \"name\": \"exercitation proident\",\n    \"service_account\": true,\n    \"status\": \"nisi culpa officia\",\n    \"title\": \"elit qui est nostrud deserunt\",\n    \"verified\": true\n   },\n   \"id\": \"deserunt\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1992-08-28T15:19:23.366Z\",\n    \"disabled\": false,\n    \"email\": \"est\",\n    \"handle\": \"commodo amet Ut ullamco\",\n    \"icon\": \"occaecat\",\n    \"modified_at\": \"1953-12-23T01:27:36.585Z\",\n    \"name\": \"non culpa ali\",\n    \"service_account\": true,\n    \"status\": \"cillum labore proident\",\n    \"title\": \"tempor aliquip non adipisicing\",\n    \"verified\": false\n   },\n   \"id\": \"labore minim consequat\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing incident service",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident service."
								}
							]
						},
						"description": "Deletes an existing incident service."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get details of an incident service",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								":service_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Specifies which types of related objects should be included in the response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident service."
								}
							]
						},
						"description": "Get details of an incident service. If the `include[users]` query parameter is provided,\nthe included attribute will contain the users related to these incident services."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"services\",\n  \"attributes\": {\n   \"created\": \"1985-11-26T21:25:29.943Z\",\n   \"modified\": \"2015-09-24T15:00:49.017Z\",\n   \"name\": \"service name\"\n  },\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2015-03-05T13:25:09.469Z\",\n    \"disabled\": true,\n    \"email\": \"irure\",\n    \"handle\": \"ipsum laborum\",\n    \"icon\": \"incididunt qui\",\n    \"modified_at\": \"1987-08-27T20:43:33.637Z\",\n    \"name\": \"exercitation proident\",\n    \"service_account\": true,\n    \"status\": \"nisi culpa officia\",\n    \"title\": \"elit qui est nostrud deserunt\",\n    \"verified\": true\n   },\n   \"id\": \"deserunt\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1992-08-28T15:19:23.366Z\",\n    \"disabled\": false,\n    \"email\": \"est\",\n    \"handle\": \"commodo amet Ut ullamco\",\n    \"icon\": \"occaecat\",\n    \"modified_at\": \"1953-12-23T01:27:36.585Z\",\n    \"name\": \"non culpa ali\",\n    \"service_account\": true,\n    \"status\": \"cillum labore proident\",\n    \"title\": \"tempor aliquip non adipisicing\",\n    \"verified\": false\n   },\n   \"id\": \"labore minim consequat\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an existing incident service",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/services/:service_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"services",
								":service_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident service."
								}
							]
						},
						"description": "Updates an existing incident service. Only provide the attributes which should be updated as this request is a partial update."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"type\": \"services\",\n  \"attributes\": {\n   \"created\": \"1985-11-26T21:25:29.943Z\",\n   \"modified\": \"2015-09-24T15:00:49.017Z\",\n   \"name\": \"service name\"\n  },\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  }\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2015-03-05T13:25:09.469Z\",\n    \"disabled\": true,\n    \"email\": \"irure\",\n    \"handle\": \"ipsum laborum\",\n    \"icon\": \"incididunt qui\",\n    \"modified_at\": \"1987-08-27T20:43:33.637Z\",\n    \"name\": \"exercitation proident\",\n    \"service_account\": true,\n    \"status\": \"nisi culpa officia\",\n    \"title\": \"elit qui est nostrud deserunt\",\n    \"verified\": true\n   },\n   \"id\": \"deserunt\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1992-08-28T15:19:23.366Z\",\n    \"disabled\": false,\n    \"email\": \"est\",\n    \"handle\": \"commodo amet Ut ullamco\",\n    \"icon\": \"occaecat\",\n    \"modified_at\": \"1953-12-23T01:27:36.585Z\",\n    \"name\": \"non culpa ali\",\n    \"service_account\": true,\n    \"status\": \"cillum labore proident\",\n    \"title\": \"tempor aliquip non adipisicing\",\n    \"verified\": false\n   },\n   \"id\": \"labore minim consequat\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"services\",\n        \"attributes\": {\n            \"name\": \"an example service name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/services/:service_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"services",
										":service_id"
									],
									"variable": [
										{
											"key": "service_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Create, update, delete, and retrieve services which can be associated with incidents."
		},
		{
			"name": "Incident Teams",
			"item": [
				{
					"name": "Get a list of all incident teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"teams"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Specifies which types of related objects should be included in the response."
								},
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[offset]",
									"value": "0",
									"description": "Specific offset to use as the beginning of the returned page."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "A search query that filters teams by name."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all incident teams for the requesting user's organization. If the `include[users]` query parameter is provided, the included attribute will contain the users related to these incident teams."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=ExampleTeamName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleTeamName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"name\": \"team name\"\n   },\n   \"type\": \"teams\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1949-06-12T12:27:41.569Z\",\n    \"disabled\": false,\n    \"email\": \"ea\",\n    \"handle\": \"ea\",\n    \"icon\": \"eiusmod deserunt veniam\",\n    \"modified_at\": \"2018-08-24T16:29:26.140Z\",\n    \"name\": \"pariatur et ea ad\",\n    \"service_account\": false,\n    \"status\": \"id dolor ex\",\n    \"title\": \"fugiat in dolor do officia\",\n    \"verified\": false\n   },\n   \"id\": \"eu culpa\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1962-05-26T06:51:03.900Z\",\n    \"disabled\": false,\n    \"email\": \"dolor reprehenderit\",\n    \"handle\": \"occaecat incididunt\",\n    \"icon\": \"nisi in eiusmod nostrud\",\n    \"modified_at\": \"1943-01-28T17:33:04.502Z\",\n    \"name\": \"culpa\",\n    \"service_account\": false,\n    \"status\": \"laboris culpa cillum n\",\n    \"title\": \"minim Excepteur Ut\",\n    \"verified\": false\n   },\n   \"id\": \"Ut ad laborum o\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"meta\": {\n  \"pagination\": {\n   \"next_offset\": 1000,\n   \"offset\": 10,\n   \"size\": 1000\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=ExampleTeamName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleTeamName"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=ExampleTeamName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleTeamName"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=ExampleTeamName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleTeamName"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams?include=<string>&page[size]=10&page[offset]=0&filter=ExampleTeamName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										},
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[offset]",
											"value": "0"
										},
										{
											"key": "filter",
											"value": "ExampleTeamName"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a new incident team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"<string>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"teams"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates a new incident team."
					},
					"response": [
						{
							"name": "CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created\": \"1996-04-06T08:42:13.457Z\",\n   \"modified\": \"1989-08-19T21:17:23.617Z\",\n   \"name\": \"team name\"\n  },\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"teams\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1969-09-09T21:05:48.657Z\",\n    \"disabled\": false,\n    \"email\": \"aliquip Lorem\",\n    \"handle\": \"pariatur\",\n    \"icon\": \"officia aliqua reprehenderit\",\n    \"modified_at\": \"1946-05-28T06:42:58.938Z\",\n    \"name\": \"ut aliquip pariatur veniam anim\",\n    \"service_account\": false,\n    \"status\": \"ea ullamco in irure\",\n    \"title\": \"deserunt\",\n    \"verified\": false\n   },\n   \"id\": \"dolore ex\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2006-10-30T07:07:37.723Z\",\n    \"disabled\": false,\n    \"email\": \"dolor consequat\",\n    \"handle\": \"dolore consequat ut\",\n    \"icon\": \"qui incididunt adipisicing\",\n    \"modified_at\": \"1969-10-25T06:48:36.089Z\",\n    \"name\": \"ullamco esse sint\",\n    \"service_account\": false,\n    \"status\": \"Duis in voluptate\",\n    \"title\": \"aute anim\",\n    \"verified\": true\n   },\n   \"id\": \"ut dolore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing incident team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "team_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident team."
								}
							]
						},
						"description": "Deletes an existing incident team."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get details of an incident team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"teams",
								":team_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Specifies which types of related objects should be included in the response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "team_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident team."
								}
							]
						},
						"description": "Get details of an incident team. If the `include[users]` query parameter is provided,\nthe included attribute will contain the users related to these incident teams."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created\": \"1996-04-06T08:42:13.457Z\",\n   \"modified\": \"1989-08-19T21:17:23.617Z\",\n   \"name\": \"team name\"\n  },\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"teams\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1969-09-09T21:05:48.657Z\",\n    \"disabled\": false,\n    \"email\": \"aliquip Lorem\",\n    \"handle\": \"pariatur\",\n    \"icon\": \"officia aliqua reprehenderit\",\n    \"modified_at\": \"1946-05-28T06:42:58.938Z\",\n    \"name\": \"ut aliquip pariatur veniam anim\",\n    \"service_account\": false,\n    \"status\": \"ea ullamco in irure\",\n    \"title\": \"deserunt\",\n    \"verified\": false\n   },\n   \"id\": \"dolore ex\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2006-10-30T07:07:37.723Z\",\n    \"disabled\": false,\n    \"email\": \"dolor consequat\",\n    \"handle\": \"dolore consequat ut\",\n    \"icon\": \"qui incididunt adipisicing\",\n    \"modified_at\": \"1969-10-25T06:48:36.089Z\",\n    \"name\": \"ullamco esse sint\",\n    \"service_account\": false,\n    \"status\": \"Duis in voluptate\",\n    \"title\": \"aute anim\",\n    \"verified\": true\n   },\n   \"id\": \"ut dolore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id?include=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"query": [
										{
											"key": "include",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an existing incident team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "team_id",
									"value": "<string>",
									"description": "(Required) The ID of the incident team."
								}
							]
						},
						"description": "Updates an existing incident team. Only provide the attributes which should be updated as this request is a partial update."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created\": \"1996-04-06T08:42:13.457Z\",\n   \"modified\": \"1989-08-19T21:17:23.617Z\",\n   \"name\": \"team name\"\n  },\n  \"id\": \"00000000-0000-0000-0000-000000000000\",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"last_modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"teams\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1969-09-09T21:05:48.657Z\",\n    \"disabled\": false,\n    \"email\": \"aliquip Lorem\",\n    \"handle\": \"pariatur\",\n    \"icon\": \"officia aliqua reprehenderit\",\n    \"modified_at\": \"1946-05-28T06:42:58.938Z\",\n    \"name\": \"ut aliquip pariatur veniam anim\",\n    \"service_account\": false,\n    \"status\": \"ea ullamco in irure\",\n    \"title\": \"deserunt\",\n    \"verified\": false\n   },\n   \"id\": \"dolore ex\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2006-10-30T07:07:37.723Z\",\n    \"disabled\": false,\n    \"email\": \"dolor consequat\",\n    \"handle\": \"dolore consequat ut\",\n    \"icon\": \"qui incididunt adipisicing\",\n    \"modified_at\": \"1969-10-25T06:48:36.089Z\",\n    \"name\": \"ullamco esse sint\",\n    \"service_account\": false,\n    \"status\": \"Duis in voluptate\",\n    \"title\": \"aute anim\",\n    \"verified\": true\n   },\n   \"id\": \"ut dolore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"teams\",\n        \"attributes\": {\n            \"name\": \"team name\"\n        },\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Create, update, delete and retrieve teams which can be associated with incidents."
		},
		{
			"name": "IP Ranges",
			"item": [
				{
					"name": "List IP Ranges",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{subdomain}}.{{site}}/",
							"protocol": "https",
							"host": [
								"{{subdomain}}",
								"{{site}}"
							],
							"path": [
								""
							]
						},
						"description": "Get information about Datadog IP ranges."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"agents\": {\n  \"prefixes_ipv4\": [\n   \"in enim magna Ut\",\n   \"sit velit\"\n  ],\n  \"prefixes_ipv6\": [\n   \"laboris\",\n   \"consectetur\"\n  ]\n },\n \"api\": {\n  \"prefixes_ipv4\": [\n   \"enim nisi Ut quis\",\n   \"in ipsum commodo\"\n  ],\n  \"prefixes_ipv6\": [\n   \"eiusmod ut do amet aliqua\",\n   \"proident aute Excepteur dolor\"\n  ]\n },\n \"apm\": {\n  \"prefixes_ipv4\": [\n   \"quis pariatur commodo ex\",\n   \"sed sunt amet tempor\"\n  ],\n  \"prefixes_ipv6\": [\n   \"nostrud laboris dolor pariatu\",\n   \"enim ipsum deserunt aute\"\n  ]\n },\n \"logs\": {\n  \"prefixes_ipv4\": [\n   \"dolore eiusmod deserunt anim\",\n   \"ut nostrud ipsum adipisicing\"\n  ],\n  \"prefixes_ipv6\": [\n   \"consequat reprehenderit cillum\",\n   \"aute et\"\n  ]\n },\n \"modified\": \"2019-10-31-20-00-00\",\n \"process\": {\n  \"prefixes_ipv4\": [\n   \"ea Ut\",\n   \"dolor aliqua ex exercitation\"\n  ],\n  \"prefixes_ipv6\": [\n   \"aliqua ipsum et\",\n   \"consequat ipsum nulla culpa\"\n  ]\n },\n \"synthetics\": {\n  \"prefixes_ipv4\": [\n   \"laborum laboris eu ut\",\n   \"dolore aute fugiat\"\n  ],\n  \"prefixes_ipv4_by_location\": {},\n  \"prefixes_ipv6\": [\n   \"aliqua sunt\",\n   \"dolor\"\n  ],\n  \"prefixes_ipv6_by_location\": {}\n },\n \"version\": 11,\n \"webhooks\": {\n  \"prefixes_ipv4\": [\n   \"proident elit\",\n   \"non irure ad labore nisi\"\n  ],\n  \"prefixes_ipv6\": [\n   \"reprehenderit aute est laboris\",\n   \"c\"\n  ]\n }\n}"
						}
					]
				}
			],
			"description": "Get a list of IP prefixes belonging to Datadog."
		},
		{
			"name": "Key Management",
			"item": [
				{
					"name": "Get all API keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>&filter[modified_at][start]=<string>&filter[modified_at][end]=<string>&include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "API key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter API keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include API keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include API keys created on or before the specified date."
								},
								{
									"key": "filter[modified_at][start]",
									"value": "<string>",
									"description": "Only include API keys modified on or after the specified date."
								},
								{
									"key": "filter[modified_at][end]",
									"value": "<string>",
									"description": "Only include API keys modified on or before the specified date."
								},
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all API keys available for your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00&filter[modified_at][start]=2020-11-24T18:46:21+00:00&filter[modified_at][end]=2020-11-24T18:46:21+00:00&include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"modified_at\": \"2020-11-23T10:00:00.000Z\",\n    \"name\": \"API Key for submitting metrics\"\n   },\n   \"id\": \"officia est magna ipsum id\",\n   \"relationships\": {\n    \"created_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"modified_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"api_keys\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"modified_at\": \"2020-11-23T10:00:00.000Z\",\n    \"name\": \"API Key for submitting metrics\"\n   },\n   \"id\": \"deserunt minim ut irure\",\n   \"relationships\": {\n    \"created_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    },\n    \"modified_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"api_keys\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1981-04-27T16:05:22.428Z\",\n    \"disabled\": false,\n    \"email\": \"mollit cupi\",\n    \"handle\": \"laborum non\",\n    \"icon\": \"aute irur\",\n    \"modified_at\": \"2004-04-26T09:08:58.894Z\",\n    \"name\": \"dolor in\",\n    \"service_account\": false,\n    \"status\": \"aliquip aliqu\",\n    \"title\": \"laborum Duis\",\n    \"verified\": true\n   },\n   \"id\": \"cillum fugiat laborum eiusmod ut\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1977-12-25T21:21:09.972Z\",\n    \"disabled\": true,\n    \"email\": \"elit ea sed\",\n    \"handle\": \"consequat ullamco velit sed\",\n    \"icon\": \"sed Lorem Excepteur\",\n    \"modified_at\": \"1981-06-17T12:00:41.471Z\",\n    \"name\": \"cillum ut cupidatat ei\",\n    \"service_account\": true,\n    \"status\": \"non consequat officia esse magna\",\n    \"title\": \"esse Lorem reprehenderit ullamco sint\",\n    \"verified\": false\n   },\n   \"id\": \"aliquip\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00&filter[modified_at][start]=2020-11-24T18:46:21+00:00&filter[modified_at][end]=2020-11-24T18:46:21+00:00&include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00&filter[modified_at][start]=2020-11-24T18:46:21+00:00&filter[modified_at][end]=2020-11-24T18:46:21+00:00&include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[modified_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an API key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"api_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an API key."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"Ut sit labore tempor\",\n   \"last4\": \"abcd\",\n   \"modified_at\": \"2020-11-23T10:00:00.000Z\",\n   \"name\": \"API Key for submitting metrics\"\n  },\n  \"id\": \"in \",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"api_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1944-09-03T06:53:10.937Z\",\n    \"disabled\": false,\n    \"email\": \"eiusmod fu\",\n    \"handle\": \"ad officia\",\n    \"icon\": \"amet velit\",\n    \"modified_at\": \"1968-12-10T11:37:25.296Z\",\n    \"name\": \"in\",\n    \"service_account\": true,\n    \"status\": \"mollit veniam ex ullamco\",\n    \"title\": \"veniam magna\",\n    \"verified\": false\n   },\n   \"id\": \"deserunt minim ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1984-05-24T06:42:51.048Z\",\n    \"disabled\": false,\n    \"email\": \"in \",\n    \"handle\": \"cillum Duis enim\",\n    \"icon\": \"magna\",\n    \"modified_at\": \"1981-12-15T23:08:10.509Z\",\n    \"name\": \"Ut laborum\",\n    \"service_account\": false,\n    \"status\": \"Excepteur laboris\",\n    \"title\": \"reprehenderit\",\n    \"verified\": false\n   },\n   \"id\": \"elit mollit proident voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an API key",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "api_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the API key."
								}
							]
						},
						"description": "Delete an API key."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get API key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "api_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the API key."
								}
							]
						},
						"description": "Get an API key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"Ut sit labore tempor\",\n   \"last4\": \"abcd\",\n   \"modified_at\": \"2020-11-23T10:00:00.000Z\",\n   \"name\": \"API Key for submitting metrics\"\n  },\n  \"id\": \"in \",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"api_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1944-09-03T06:53:10.937Z\",\n    \"disabled\": false,\n    \"email\": \"eiusmod fu\",\n    \"handle\": \"ad officia\",\n    \"icon\": \"amet velit\",\n    \"modified_at\": \"1968-12-10T11:37:25.296Z\",\n    \"name\": \"in\",\n    \"service_account\": true,\n    \"status\": \"mollit veniam ex ullamco\",\n    \"title\": \"veniam magna\",\n    \"verified\": false\n   },\n   \"id\": \"deserunt minim ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1984-05-24T06:42:51.048Z\",\n    \"disabled\": false,\n    \"email\": \"in \",\n    \"handle\": \"cillum Duis enim\",\n    \"icon\": \"magna\",\n    \"modified_at\": \"1981-12-15T23:08:10.509Z\",\n    \"name\": \"Ut laborum\",\n    \"service_account\": false,\n    \"status\": \"Excepteur laboris\",\n    \"title\": \"reprehenderit\",\n    \"verified\": false\n   },\n   \"id\": \"elit mollit proident voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id?include=created_by,modified_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "created_by,modified_by"
										}
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit an API key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\",\n        \"type\": \"api_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"api_keys",
								":api_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "api_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the API key."
								}
							]
						},
						"description": "Update an API key."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"Ut sit labore tempor\",\n   \"last4\": \"abcd\",\n   \"modified_at\": \"2020-11-23T10:00:00.000Z\",\n   \"name\": \"API Key for submitting metrics\"\n  },\n  \"id\": \"in \",\n  \"relationships\": {\n   \"created_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   },\n   \"modified_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"api_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1944-09-03T06:53:10.937Z\",\n    \"disabled\": false,\n    \"email\": \"eiusmod fu\",\n    \"handle\": \"ad officia\",\n    \"icon\": \"amet velit\",\n    \"modified_at\": \"1968-12-10T11:37:25.296Z\",\n    \"name\": \"in\",\n    \"service_account\": true,\n    \"status\": \"mollit veniam ex ullamco\",\n    \"title\": \"veniam magna\",\n    \"verified\": false\n   },\n   \"id\": \"deserunt minim ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1984-05-24T06:42:51.048Z\",\n    \"disabled\": false,\n    \"email\": \"in \",\n    \"handle\": \"cillum Duis enim\",\n    \"icon\": \"magna\",\n    \"modified_at\": \"1981-12-15T23:08:10.509Z\",\n    \"name\": \"Ut laborum\",\n    \"service_account\": false,\n    \"status\": \"Excepteur laboris\",\n    \"title\": \"reprehenderit\",\n    \"verified\": false\n   },\n   \"id\": \"elit mollit proident voluptate\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"API Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"api_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/api_keys/:api_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"api_keys",
										":api_key_id"
									],
									"variable": [
										{
											"key": "api_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all application keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all application keys available for your org"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"minim veniam nisi qui\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"dolor elit dolor\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1991-01-04T04:30:24.554Z\",\n    \"disabled\": true,\n    \"email\": \"pariatur irure consequat adipisicing\",\n    \"handle\": \"esse minim anim Duis\",\n    \"icon\": \"eu\",\n    \"modified_at\": \"1971-02-03T11:36:41.813Z\",\n    \"name\": \"eu dolore voluptate\",\n    \"service_account\": false,\n    \"status\": \"ea\",\n    \"title\": \"non amet reprehenderit\",\n    \"verified\": true\n   },\n   \"id\": \"ex id\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1966-08-28T01:02:35.771Z\",\n    \"disabled\": true,\n    \"email\": \"minim est\",\n    \"handle\": \"ullamco tempor consectetur anim\",\n    \"icon\": \"sit nisi Ut adipisicing\",\n    \"modified_at\": \"1958-11-13T03:34:56.858Z\",\n    \"name\": \"aliqua dolore nostrud est exercitation\",\n    \"service_account\": false,\n    \"status\": \"magna incididunt fugiat sit\",\n    \"title\": \"tempor do\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate nisi nulla aliquip\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Delete an application key"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an application key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>",
									"description": "Resource path for related resources to include in the response. Only `owned_by` is supported."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Get an application key for your org."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=owned_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "owned_by"
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=owned_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "owned_by"
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=owned_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "owned_by"
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id?include=owned_by",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"query": [
										{
											"key": "include",
											"value": "owned_by"
										}
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\",\n        \"type\": \"application_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Edit an application key"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all application keys owned by current user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List all application keys available for current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"minim veniam nisi qui\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"dolor elit dolor\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1991-01-04T04:30:24.554Z\",\n    \"disabled\": true,\n    \"email\": \"pariatur irure consequat adipisicing\",\n    \"handle\": \"esse minim anim Duis\",\n    \"icon\": \"eu\",\n    \"modified_at\": \"1971-02-03T11:36:41.813Z\",\n    \"name\": \"eu dolore voluptate\",\n    \"service_account\": false,\n    \"status\": \"ea\",\n    \"title\": \"non amet reprehenderit\",\n    \"verified\": true\n   },\n   \"id\": \"ex id\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1966-08-28T01:02:35.771Z\",\n    \"disabled\": true,\n    \"email\": \"minim est\",\n    \"handle\": \"ullamco tempor consectetur anim\",\n    \"icon\": \"sit nisi Ut adipisicing\",\n    \"modified_at\": \"1958-11-13T03:34:56.858Z\",\n    \"name\": \"aliqua dolore nostrud est exercitation\",\n    \"service_account\": false,\n    \"status\": \"magna incididunt fugiat sit\",\n    \"title\": \"tempor do\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate nisi nulla aliquip\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an application key for current user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an application key for current user"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key owned by current user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Delete an application key owned by current user"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get one application key owned by current user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Get an application key owned by current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key owned by current user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\",\n        \"type\": \"application_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"current_user",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Edit an application key owned by current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/current_user/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"current_user",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Manage your Datadog API and application keys. You need an API key and\nan application key for a user with the required permissions to interact\nwith these endpoints. The full list of API and application keys can be\nseen on your [Datadog API page](https://app.datadoghq.com/account/settings#api)."
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Aggregate events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"compute\": [\n        {\n            \"aggregation\": \"<string>\",\n            \"interval\": \"<string>\",\n            \"metric\": \"<string>\",\n            \"type\": \"total\"\n        },\n        {\n            \"aggregation\": \"<string>\",\n            \"interval\": \"<string>\",\n            \"metric\": \"<string>\",\n            \"type\": \"total\"\n        }\n    ],\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"*\"\n        ],\n        \"query\": \"*\",\n        \"to\": \"now\"\n    },\n    \"group_by\": [\n        {\n            \"facet\": \"<string>\",\n            \"histogram\": {\n                \"interval\": \"<double>\",\n                \"min\": \"<double>\",\n                \"max\": \"<double>\"\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"<string>\",\n                \"metric\": \"<string>\",\n                \"order\": \"<string>\",\n                \"type\": \"alphabetical\"\n            },\n            \"total\": \"<boolean>\"\n        },\n        {\n            \"facet\": \"<string>\",\n            \"histogram\": {\n                \"interval\": \"<double>\",\n                \"min\": \"<double>\",\n                \"max\": \"<double>\"\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"<string>\",\n                \"metric\": \"<string>\",\n                \"order\": \"<string>\",\n                \"type\": \"alphabetical\"\n            },\n            \"total\": \"<boolean>\"\n        }\n    ],\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n    },\n    \"page\": {\n        \"cursor\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"analytics",
								"aggregate"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The API endpoint to aggregate events into buckets and compute metrics and timeseries."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"compute\": [\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        },\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        }\n    ],\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"group_by\": [\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        },\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        }\n    ],\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"buckets\": [\n   {\n    \"by\": {\n     \"@state\": \"success\",\n     \"@version\": \"abc\"\n    },\n    \"computes\": {}\n   },\n   {\n    \"by\": {\n     \"@state\": \"success\",\n     \"@version\": \"abc\"\n    },\n    \"computes\": {}\n   }\n  ]\n },\n \"meta\": {\n  \"elapsed\": 132,\n  \"page\": {\n   \"after\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n  },\n  \"request_id\": \"MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\",\n  \"status\": \"done\",\n  \"warnings\": [\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   },\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   }\n  ]\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"compute\": [\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        },\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        }\n    ],\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"group_by\": [\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        },\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        }\n    ],\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"compute\": [\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        },\n        {\n            \"aggregation\": \"pc90\",\n            \"interval\": \"5m\",\n            \"metric\": \"@duration\",\n            \"type\": \"total\"\n        }\n    ],\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"group_by\": [\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        },\n        {\n            \"facet\": \"host\",\n            \"histogram\": {\n                \"interval\": 10,\n                \"min\": 50,\n                \"max\": 100\n            },\n            \"limit\": 10,\n            \"missing\": \"<string>\",\n            \"sort\": {\n                \"aggregation\": \"count\",\n                \"order\": \"asc\"\n            },\n            \"total\": \"<boolean>\"\n        }\n    ],\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/analytics/aggregate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"analytics",
										"aggregate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a list of logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=<string>&filter[index]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=<string>&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"events"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "Search query following logs syntax."
								},
								{
									"key": "filter[index]",
									"value": "<string>",
									"description": "For customers with multiple indexes, the indexes to search\nDefaults to '*' which means all indexes"
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "Minimum timestamp for requested logs."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "Maximum timestamp for requested logs."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Order of logs in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "List following results with a cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "Maximum number of logs in the response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List endpoint returns logs that match a log search query.\n[Results are paginated][1].\n\nUse this endpoint to see your latest logs.\n\n**If you are considering archiving logs for your organization,\nconsider use of the Datadog archive capabilities instead of the log list API.\nSee [Datadog Logs Archive documentation][2].**\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination\n[2]: https://docs.datadoghq.com/logs/archives"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=@datacenter:us @role:db&filter[index]=main&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "@datacenter:us @role:db"
										},
										{
											"key": "filter[index]",
											"value": "main"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"customAttribute\": 123,\n     \"duration\": 2345\n    },\n    \"host\": \"i-0123\",\n    \"message\": \"Host connected to remote\",\n    \"service\": \"agent\",\n    \"status\": \"INFO\",\n    \"tags\": [\n     \"team:A\"\n    ],\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"log\"\n  },\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"customAttribute\": 123,\n     \"duration\": 2345\n    },\n    \"host\": \"i-0123\",\n    \"message\": \"Host connected to remote\",\n    \"service\": \"agent\",\n    \"status\": \"INFO\",\n    \"tags\": [\n     \"team:A\"\n    ],\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"log\"\n  }\n ],\n \"links\": {\n  \"next\": \"https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n },\n \"meta\": {\n  \"elapsed\": 132,\n  \"page\": {\n   \"after\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n  },\n  \"request_id\": \"MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\",\n  \"status\": \"done\",\n  \"warnings\": [\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   },\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   }\n  ]\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=@datacenter:us @role:db&filter[index]=main&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "@datacenter:us @role:db"
										},
										{
											"key": "filter[index]",
											"value": "main"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events?filter[query]=@datacenter:us @role:db&filter[index]=main&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "@datacenter:us @role:db"
										},
										{
											"key": "filter[index]",
											"value": "main"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Search logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"*\"\n        ],\n        \"query\": \"*\",\n        \"to\": \"now\"\n    },\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"UTC\"\n    },\n    \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n    },\n    \"sort\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"events",
								"search"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List endpoint returns logs that match a log search query.\n[Results are paginated][1].\n\nUse this endpoint to build complex logs filtering and search.\n\n**If you are considering archiving logs for your organization,\nconsider use of the Datadog archive capabilities instead of the log list API.\nSee [Datadog Logs Archive documentation][2].**\n\n[1]: /logs/guide/collect-multiple-logs-with-pagination\n[2]: https://docs.datadoghq.com/logs/archives"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"customAttribute\": 123,\n     \"duration\": 2345\n    },\n    \"host\": \"i-0123\",\n    \"message\": \"Host connected to remote\",\n    \"service\": \"agent\",\n    \"status\": \"INFO\",\n    \"tags\": [\n     \"team:A\"\n    ],\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"log\"\n  },\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"customAttribute\": 123,\n     \"duration\": 2345\n    },\n    \"host\": \"i-0123\",\n    \"message\": \"Host connected to remote\",\n    \"service\": \"agent\",\n    \"status\": \"INFO\",\n    \"tags\": [\n     \"team:A\"\n    ],\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"log\"\n  }\n ],\n \"links\": {\n  \"next\": \"https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n },\n \"meta\": {\n  \"elapsed\": 132,\n  \"page\": {\n   \"after\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n  },\n  \"request_id\": \"MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR\",\n  \"status\": \"done\",\n  \"warnings\": [\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   },\n   {\n    \"code\": \"unknown_index\",\n    \"detail\": \"indexes: foo, bar\",\n    \"title\": \"One or several indexes are missing or invalid, results hold data from the other indexes\"\n   }\n  ]\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"now-15m\",\n        \"indexes\": [\n            \"main\",\n            \"web\"\n        ],\n        \"query\": \"service:web* AND @http.status_code:[200 TO 299]\",\n        \"to\": \"now\"\n    },\n    \"options\": {\n        \"timeOffset\": \"<long>\",\n        \"timezone\": \"GMT\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/events/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"events",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Send logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "HTTP header used to compress the media-type.",
								"key": "Content-Encoding",
								"value": "deflate"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"message\": \"hello\"\n    },\n    {\n        \"message\": \"world\"\n    }\n]"
						},
						"url": {
							"raw": "https://http-intake.logs/v1/input?ddtags=env:prod,user:my-user",
							"protocol": "https",
							"host": [
								"http-intake",
								"logs"
							],
							"path": [
								"v1",
								"input"
							],
							"query": [
								{
									"key": "ddtags",
									"value": "env:prod,user:my-user",
									"description": "Log tags can be passed as query parameters with `text/plain` content type."
								}
							]
						},
						"description": "Send your logs to your Datadog platform over HTTP. Limits per HTTP request are:\n\n- Maximum content size per payload (uncompressed): 5MB\n- Maximum size for a single log: 1MB\n- Maximum array size if sending multiple logs in an array: 1000 entries\n\nAny log exceeding 1MB is accepted and truncated by Datadog:\n- For a single log request, the API truncates the log at 1MB and returns a 2xx.\n- For a multi-logs request, the API processes all logs, truncates only logs larger than 1MB, and returns a 2xx.\n\nDatadog recommends sending your logs compressed.\nAdd the `Content-Encoding: gzip` header to the request when sending compressed logs.\n\nThe status codes answered by the HTTP API are:\n- 200: OK\n- 400: Bad request (likely an issue in the payload formatting)\n- 403: Permission issue (likely using an invalid API Key)\n- 413: Payload too large (batch is above 5MB uncompressed)\n- 5xx: Internal error, request should be retried after some time"
					},
					"response": [
						{
							"name": "Response from server (always 200 empty JSON).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									},
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"message\": \"hello\"\n    },\n    {\n        \"message\": \"world\"\n    }\n]"
								},
								"url": {
									"raw": "undefined?ddtags=env:prod,user:my-user",
									"host": [
										"undefined"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "env:prod,user:my-user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									},
									{
										"description": "HTTP header used to compress the media-type.",
										"key": "Content-Encoding",
										"value": "deflate"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"message\": \"hello\"\n    },\n    {\n        \"message\": \"world\"\n    }\n]"
								},
								"url": {
									"raw": "undefined?ddtags=env:prod,user:my-user",
									"host": [
										"undefined"
									],
									"query": [
										{
											"key": "ddtags",
											"value": "env:prod,user:my-user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 0,\n \"message\": \"Your browser sent an invalid request.\"\n}"
						}
					]
				}
			],
			"description": "Search your logs and send them to your Datadog platform over HTTP."
		},
		{
			"name": "Logs Archives",
			"item": [
				{
					"name": "Get archive order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archive-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the current order of your archives.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"archive_order\",\n  \"attributes\": {\n   \"archive_ids\": [\n    \"a2zcMylnM4OCHpYusxIi1g\",\n    \"a2zcMylnM4OCHpYusxIi2g\",\n    \"a2zcMylnM4OCHpYusxIi3g\"\n   ]\n  }\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update archive order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"archive_order\",\n        \"attributes\": {\n            \"archive_ids\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archive-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update the order of your archives. Since logs are processed sequentially, reordering an archive may change\nthe structure and content of the data processed by other archives.\n\n**Note**: Using the `PUT` method updates your archive's order by replacing the current order\nwith the new one."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archive_order\",\n        \"attributes\": {\n            \"archive_ids\": [\n                \"a2zcMylnM4OCHpYusxIi1g\",\n                \"a2zcMylnM4OCHpYusxIi2g\",\n                \"a2zcMylnM4OCHpYusxIi3g\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"archive_order\",\n  \"attributes\": {\n   \"archive_ids\": [\n    \"a2zcMylnM4OCHpYusxIi1g\",\n    \"a2zcMylnM4OCHpYusxIi2g\",\n    \"a2zcMylnM4OCHpYusxIi3g\"\n   ]\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archive_order\",\n        \"attributes\": {\n            \"archive_ids\": [\n                \"a2zcMylnM4OCHpYusxIi1g\",\n                \"a2zcMylnM4OCHpYusxIi2g\",\n                \"a2zcMylnM4OCHpYusxIi3g\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archive_order\",\n        \"attributes\": {\n            \"archive_ids\": [\n                \"a2zcMylnM4OCHpYusxIi1g\",\n                \"a2zcMylnM4OCHpYusxIi2g\",\n                \"a2zcMylnM4OCHpYusxIi3g\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archive_order\",\n        \"attributes\": {\n            \"archive_ids\": [\n                \"a2zcMylnM4OCHpYusxIi1g\",\n                \"a2zcMylnM4OCHpYusxIi2g\",\n                \"a2zcMylnM4OCHpYusxIi3g\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archive-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archive-order"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all archives",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of configured logs archives with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"archives\",\n   \"attributes\": {\n    \"name\": \"Nginx Archive\",\n    \"query\": \"source:nginx\",\n    \"destination\": {\n     \"storage_account\": \"account-name\",\n     \"container\": \"container-name\",\n     \"integration\": {\n      \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n      \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n     },\n     \"type\": \"azure\",\n     \"path\": \"occaecat in Lorem\",\n     \"region\": \"voluptate est enim\"\n    },\n    \"include_tags\": false,\n    \"rehydration_tags\": [\n     \"team:intake\",\n     \"team:app\"\n    ],\n    \"state\": \"WORKING\"\n   },\n   \"id\": \"a2zcMylnM4OCHpYusxIi3g\"\n  },\n  {\n   \"type\": \"archives\",\n   \"attributes\": {\n    \"name\": \"Nginx Archive\",\n    \"query\": \"source:nginx\",\n    \"destination\": {\n     \"storage_account\": \"account-name\",\n     \"container\": \"container-name\",\n     \"integration\": {\n      \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n      \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n     },\n     \"type\": \"azure\",\n     \"path\": \"qui Duis aliquip\",\n     \"region\": \"occaecat deserunt magna\"\n    },\n    \"include_tags\": false,\n    \"rehydration_tags\": [\n     \"team:intake\",\n     \"team:app\"\n    ],\n    \"state\": \"WORKING\"\n   },\n   \"id\": \"a2zcMylnM4OCHpYusxIi3g\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\",\n            \"destination\": {\n                \"storage_account\": \"<string>\",\n                \"container\": \"<string>\",\n                \"integration\": {\n                    \"tenant_id\": \"<string>\",\n                    \"client_id\": \"<string>\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an archive in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"archives\",\n  \"attributes\": {\n   \"name\": \"Nginx Archive\",\n   \"query\": \"source:nginx\",\n   \"destination\": {\n    \"storage_account\": \"account-name\",\n    \"container\": \"container-name\",\n    \"integration\": {\n     \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n     \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n    },\n    \"type\": \"azure\",\n    \"path\": \"exercitation quis\",\n    \"region\": \"Ut irure laborum sed\"\n   },\n   \"include_tags\": false,\n   \"rehydration_tags\": [\n    \"team:intake\",\n    \"team:app\"\n   ],\n   \"state\": \"WORKING\"\n  },\n  \"id\": \"a2zcMylnM4OCHpYusxIi3g\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an archive",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Delete a given archive from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an archive",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Get a specific archive from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"archives\",\n  \"attributes\": {\n   \"name\": \"Nginx Archive\",\n   \"query\": \"source:nginx\",\n   \"destination\": {\n    \"storage_account\": \"account-name\",\n    \"container\": \"container-name\",\n    \"integration\": {\n     \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n     \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n    },\n    \"type\": \"azure\",\n    \"path\": \"exercitation quis\",\n    \"region\": \"Ut irure laborum sed\"\n   },\n   \"include_tags\": false,\n   \"rehydration_tags\": [\n    \"team:intake\",\n    \"team:app\"\n   ],\n   \"state\": \"WORKING\"\n  },\n  \"id\": \"a2zcMylnM4OCHpYusxIi3g\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an archive",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\",\n            \"destination\": {\n                \"storage_account\": \"<string>\",\n                \"container\": \"<string>\",\n                \"integration\": {\n                    \"tenant_id\": \"<string>\",\n                    \"client_id\": \"<string>\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Update a given archive configuration.\n\n**Note**: Using this method updates your archive configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"archives\",\n  \"attributes\": {\n   \"name\": \"Nginx Archive\",\n   \"query\": \"source:nginx\",\n   \"destination\": {\n    \"storage_account\": \"account-name\",\n    \"container\": \"container-name\",\n    \"integration\": {\n     \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n     \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n    },\n    \"type\": \"azure\",\n    \"path\": \"exercitation quis\",\n    \"region\": \"Ut irure laborum sed\"\n   },\n   \"include_tags\": false,\n   \"rehydration_tags\": [\n    \"team:intake\",\n    \"team:app\"\n   ],\n   \"state\": \"WORKING\"\n  },\n  \"id\": \"a2zcMylnM4OCHpYusxIi3g\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"archives\",\n        \"attributes\": {\n            \"name\": \"Nginx Archive\",\n            \"query\": \"source:nginx\",\n            \"destination\": {\n                \"storage_account\": \"account-name\",\n                \"container\": \"container-name\",\n                \"integration\": {\n                    \"tenant_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\",\n                    \"client_id\": \"aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa\"\n                },\n                \"type\": \"azure\",\n                \"path\": \"<string>\",\n                \"region\": \"<string>\"\n            },\n            \"include_tags\": false,\n            \"rehydration_tags\": [\n                \"team:intake\",\n                \"team:app\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke role from an archive",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"roles\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Removes a role from an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List read roles for an archive",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Returns all read roles a given archive is restricted to."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"roles\",\n   \"attributes\": {\n    \"created_at\": \"1969-01-03T12:32:30.705Z\",\n    \"modified_at\": \"1978-01-22T03:32:31.620Z\",\n    \"name\": \"in\",\n    \"user_count\": -69929265\n   },\n   \"id\": \"veniam eiusmod qui sunt\",\n   \"relationships\": {\n    \"permissions\": {\n     \"data\": [\n      {\n       \"id\": \"Ut ullamco dolore\",\n       \"type\": \"permissions\"\n      },\n      {\n       \"id\": \"nulla Duis enim Lorem qui\",\n       \"type\": \"permissions\"\n      }\n     ]\n    }\n   }\n  },\n  {\n   \"type\": \"roles\",\n   \"attributes\": {\n    \"created_at\": \"1974-05-10T15:34:07.046Z\",\n    \"modified_at\": \"1945-05-10T02:11:23.769Z\",\n    \"name\": \"nulla consectetur amet minim\",\n    \"user_count\": -21771709\n   },\n   \"id\": \"proident aliqua esse elit\",\n   \"relationships\": {\n    \"permissions\": {\n     \"data\": [\n      {\n       \"id\": \"et nostrud\",\n       \"type\": \"permissions\"\n      },\n      {\n       \"id\": \"eiusmod veniam\",\n       \"type\": \"permissions\"\n      }\n     ]\n    }\n   }\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": 85869896,\n   \"total_filtered_count\": -65000067\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Grant role to an archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"roles\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"archives",
								":archive_id",
								"readers"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "archive_id",
									"value": "<string>",
									"description": "(Required) The ID of the archive."
								}
							]
						},
						"description": "Adds a read role to an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/archives/:archive_id/readers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"archives",
										":archive_id",
										"readers"
									],
									"variable": [
										{
											"key": "archive_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Archives forward all the logs ingested to a cloud storage system.\n\nSee the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)\nfor a list of the archives currently configured in our UI."
		},
		{
			"name": "Logs Indexes",
			"item": [
				{
					"name": "Get indexes order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"index-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the current order of your log indexes. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"index_names\": [\n  \"main\",\n  \"payments\",\n  \"web\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update indexes order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"index_names\": [\n        \"main\",\n        \"payments\",\n        \"web\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"index-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "This endpoint updates the index order of your organization.\nIt returns the index order object passed in the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"index_names\": [\n        \"main\",\n        \"payments\",\n        \"web\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"index_names\": [\n  \"main\",\n  \"payments\",\n  \"web\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"index_names\": [\n        \"main\",\n        \"payments\",\n        \"web\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"index_names\": [\n        \"main\",\n        \"payments\",\n        \"web\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/index-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"index-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all indexes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The Index object describes the configuration of a log index.\nThis endpoint returns an array of the `LogIndex` objects of your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"indexes\": [\n  {\n   \"name\": \"main\",\n   \"filter\": {\n    \"query\": \"source:python\"\n   },\n   \"daily_limit\": 300000000,\n   \"exclusion_filters\": [\n    {\n     \"name\": \"payment\",\n     \"filter\": {\n      \"sample_rate\": 1,\n      \"query\": \"*\"\n     },\n     \"is_enabled\": true\n    },\n    {\n     \"name\": \"payment\",\n     \"filter\": {\n      \"sample_rate\": 1,\n      \"query\": \"*\"\n     },\n     \"is_enabled\": false\n    }\n   ],\n   \"is_rate_limited\": false,\n   \"num_retention_days\": 15\n  },\n  {\n   \"name\": \"main\",\n   \"filter\": {\n    \"query\": \"source:python\"\n   },\n   \"daily_limit\": 300000000,\n   \"exclusion_filters\": [\n    {\n     \"name\": \"payment\",\n     \"filter\": {\n      \"sample_rate\": 1,\n      \"query\": \"*\"\n     },\n     \"is_enabled\": true\n    },\n    {\n     \"name\": \"payment\",\n     \"filter\": {\n      \"sample_rate\": 1,\n      \"query\": \"*\"\n     },\n     \"is_enabled\": true\n    }\n   ],\n   \"is_rate_limited\": false,\n   \"num_retention_days\": 15\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an index",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"main\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 300000000,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": true\n        }\n    ],\n    \"num_retention_days\": 15\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates a new index. Returns the Index object passed in the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"main\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 300000000,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": true\n        }\n    ],\n    \"num_retention_days\": 15\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"main\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"daily_limit\": 300000000,\n \"exclusion_filters\": [\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": false\n  },\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": true\n  }\n ],\n \"is_rate_limited\": false,\n \"num_retention_days\": 15\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"main\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 300000000,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": true\n        }\n    ],\n    \"num_retention_days\": 15\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"main\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 300000000,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": true\n        }\n    ],\n    \"num_retention_days\": 15\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the log index."
								}
							]
						},
						"description": "Get one log index from your organization. This endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"main\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"daily_limit\": 300000000,\n \"exclusion_filters\": [\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": false\n  },\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": true\n  }\n ],\n \"is_rate_limited\": false,\n \"num_retention_days\": 15\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						}
					]
				},
				{
					"name": "Update an index",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": -74518955,\n    \"disable_daily_limit\": false,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": true\n        }\n    ],\n    \"num_retention_days\": 12791599\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"indexes",
								":name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the log index."
								}
							]
						},
						"description": "Update an index as identified by its name.\nReturns the Index object passed in the request body when the request is successful.\n\nUsing the `PUT` method updates your index’s configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 41577306,\n    \"disable_daily_limit\": true,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        }\n    ],\n    \"num_retention_days\": -26316184\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"main\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"daily_limit\": 300000000,\n \"exclusion_filters\": [\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": false\n  },\n  {\n   \"name\": \"payment\",\n   \"filter\": {\n    \"sample_rate\": 1,\n    \"query\": \"*\"\n   },\n   \"is_enabled\": true\n  }\n ],\n \"is_rate_limited\": false,\n \"num_retention_days\": 15\n}"
						},
						{
							"name": "Invalid Parameter Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 41577306,\n    \"disable_daily_limit\": true,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        }\n    ],\n    \"num_retention_days\": -26316184\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 41577306,\n    \"disable_daily_limit\": true,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        }\n    ],\n    \"num_retention_days\": -26316184\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"daily_limit\": 41577306,\n    \"disable_daily_limit\": true,\n    \"exclusion_filters\": [\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        },\n        {\n            \"name\": \"payment\",\n            \"filter\": {\n                \"sample_rate\": 1,\n                \"query\": \"*\"\n            },\n            \"is_enabled\": false\n        }\n    ],\n    \"num_retention_days\": -26316184\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/indexes/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"indexes",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						}
					]
				}
			],
			"description": "Manage configuration of [log indexes](https://docs.datadoghq.com/logs/indexes/).\nYou need an API and application key with Admin rights to interact with this endpoint."
		},
		{
			"name": "Logs Metrics",
			"item": [
				{
					"name": "Get all log-based metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of configured log-based metrics with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"compute\": {\n     \"aggregation_type\": \"distribution\",\n     \"path\": \"@duration\"\n    },\n    \"filter\": {\n     \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n    },\n    \"group_by\": [\n     {\n      \"path\": \"@http.status_code\",\n      \"tag_name\": \"status_code\"\n     },\n     {\n      \"path\": \"@http.status_code\",\n      \"tag_name\": \"status_code\"\n     }\n    ]\n   },\n   \"id\": \"logs.page.load.count\",\n   \"type\": \"logs_metrics\"\n  },\n  {\n   \"attributes\": {\n    \"compute\": {\n     \"aggregation_type\": \"distribution\",\n     \"path\": \"@duration\"\n    },\n    \"filter\": {\n     \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n    },\n    \"group_by\": [\n     {\n      \"path\": \"@http.status_code\",\n      \"tag_name\": \"status_code\"\n     },\n     {\n      \"path\": \"@http.status_code\",\n      \"tag_name\": \"status_code\"\n     }\n    ]\n   },\n   \"id\": \"logs.page.load.count\",\n   \"type\": \"logs_metrics\"\n  }\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a log-based metric",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"<string>\",\n                \"path\": \"<string>\"\n            },\n            \"filter\": {\n                \"query\": \"*\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"<string>\",\n                    \"tag_name\": \"<string>\"\n                },\n                {\n                    \"path\": \"<string>\",\n                    \"tag_name\": \"<string>\"\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a metric based on your ingested logs in your organization.\nReturns the log-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"logs.page.load.count\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"distribution\",\n                \"path\": \"@duration\"\n            },\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"compute\": {\n    \"aggregation_type\": \"distribution\",\n    \"path\": \"@duration\"\n   },\n   \"filter\": {\n    \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n   },\n   \"group_by\": [\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    },\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    }\n   ]\n  },\n  \"id\": \"logs.page.load.count\",\n  \"type\": \"logs_metrics\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"logs.page.load.count\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"distribution\",\n                \"path\": \"@duration\"\n            },\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"logs.page.load.count\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"distribution\",\n                \"path\": \"@duration\"\n            },\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"logs.page.load.count\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"distribution\",\n                \"path\": \"@duration\"\n            },\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"logs.page.load.count\",\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"compute\": {\n                \"aggregation_type\": \"distribution\",\n                \"path\": \"@duration\"\n            },\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a log-based metric",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_id",
									"value": "<string>",
									"description": "(Required) The name of the log-based metric."
								}
							]
						},
						"description": "Delete a specific log-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a log-based metric",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_id",
									"value": "<string>",
									"description": "(Required) The name of the log-based metric."
								}
							]
						},
						"description": "Get a specific log-based metric from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"compute\": {\n    \"aggregation_type\": \"distribution\",\n    \"path\": \"@duration\"\n   },\n   \"filter\": {\n    \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n   },\n   \"group_by\": [\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    },\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    }\n   ]\n  },\n  \"id\": \"logs.page.load.count\",\n  \"type\": \"logs_metrics\"\n }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a log-based metric",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"*\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"<string>\",\n                    \"tag_name\": \"<string>\"\n                },\n                {\n                    \"path\": \"<string>\",\n                    \"tag_name\": \"<string>\"\n                }\n            ]\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"metrics",
								":metric_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_id",
									"value": "<string>",
									"description": "(Required) The name of the log-based metric."
								}
							]
						},
						"description": "Update a specific log-based metric from your organization.\nReturns the log-based metric object from the request body when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"compute\": {\n    \"aggregation_type\": \"distribution\",\n    \"path\": \"@duration\"\n   },\n   \"filter\": {\n    \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n   },\n   \"group_by\": [\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    },\n    {\n     \"path\": \"@http.status_code\",\n     \"tag_name\": \"status_code\"\n    }\n   ]\n  },\n  \"id\": \"logs.page.load.count\",\n  \"type\": \"logs_metrics\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"logs_metrics\",\n        \"attributes\": {\n            \"filter\": {\n                \"query\": \"service:web* AND @http.status_code:[200 TO 299]\"\n            },\n            \"group_by\": [\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                },\n                {\n                    \"path\": \"@http.status_code\",\n                    \"tag_name\": \"status_code\"\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/metrics/:metric_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"metrics",
										":metric_id"
									],
									"variable": [
										{
											"key": "metric_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization."
		},
		{
			"name": "Logs Pipelines",
			"item": [
				{
					"name": "Get pipeline order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the current order of your pipelines.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"pipeline_ids\": [\n  \"tags\",\n  \"org_ids\",\n  \"products\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update pipeline order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pipeline_ids\": [\n        \"tags\",\n        \"org_ids\",\n        \"products\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipeline-order"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Update the order of your pipelines. Since logs are processed sequentially, reordering a pipeline may change\nthe structure and content of the data processed by other pipelines and their processors.\n\n**Note**: Using the `PUT` method updates your pipeline order by replacing your current order\nwith the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pipeline_ids\": [\n        \"tags\",\n        \"org_ids\",\n        \"products\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"pipeline_ids\": [\n  \"tags\",\n  \"org_ids\",\n  \"products\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pipeline_ids\": [\n        \"tags\",\n        \"org_ids\",\n        \"products\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pipeline_ids\": [\n        \"tags\",\n        \"org_ids\",\n        \"products\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pipeline_ids\": [\n        \"tags\",\n        \"org_ids\",\n        \"products\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipeline-order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipeline-order"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						}
					]
				},
				{
					"name": "Get all pipelines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all pipelines from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"\",\n  \"filter\": {\n   \"query\": \"source:python\"\n  },\n  \"id\": \"voluptate eu\",\n  \"is_enabled\": true,\n  \"is_read_only\": false,\n  \"processors\": [\n   {\n    \"source\": \"message\",\n    \"grok\": {\n     \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n     \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n    },\n    \"type\": \"grok-parser\",\n    \"is_enabled\": false,\n    \"name\": \"Lorem tempor nulla\",\n    \"samples\": [\n     \"eiusmod in Excepteur\",\n     \"Ut do\"\n    ]\n   },\n   {\n    \"source\": \"message\",\n    \"grok\": {\n     \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n     \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n    },\n    \"type\": \"grok-parser\",\n    \"is_enabled\": false,\n    \"name\": \"occaecat dolor magna\",\n    \"samples\": [\n     \"ut Duis laborum ut\",\n     \"aliquip non\"\n    ]\n   }\n  ],\n  \"type\": \"pipeline\"\n },\n {\n  \"name\": \"\",\n  \"filter\": {\n   \"query\": \"source:python\"\n  },\n  \"id\": \"voluptate pariatur in esse\",\n  \"is_enabled\": false,\n  \"is_read_only\": true,\n  \"processors\": [\n   {\n    \"source\": \"message\",\n    \"grok\": {\n     \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n     \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n    },\n    \"type\": \"grok-parser\",\n    \"is_enabled\": false,\n    \"name\": \"eu occaecat \",\n    \"samples\": [\n     \"elit laboris\",\n     \"pariatur veniam sunt\"\n    ]\n   },\n   {\n    \"source\": \"message\",\n    \"grok\": {\n     \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n     \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n    },\n    \"type\": \"grok-parser\",\n    \"is_enabled\": false,\n    \"name\": \"dolo\",\n    \"samples\": [\n     \"sunt\",\n     \"sit sed anim consectetur\"\n    ]\n   }\n  ],\n  \"type\": \"pipeline\"\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a pipeline",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": true,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"esse adipisicing voluptate qui ea\",\n            \"samples\": [\n                \"nulla cupidatat amet dolor\",\n                \"aute qui ad\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"adipi\",\n            \"samples\": [\n                \"tempor ut nisi\",\n                \"enim\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a pipeline in your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"id\": \"magna\",\n \"is_enabled\": true,\n \"is_read_only\": true,\n \"processors\": [\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"fugiat\",\n   \"samples\": [\n    \"qui ipsum\",\n    \"officia sed est ve\"\n   ]\n  },\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"est aute dolore tempor\",\n   \"samples\": [\n    \"cillum\",\n    \"incididunt id officia aliqua\"\n   ]\n  }\n ],\n \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Create a pipeline",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": true,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"esse adipisicing voluptate qui ea\",\n            \"samples\": [\n                \"nulla cupidatat amet dolor\",\n                \"aute qui ad\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"adipi\",\n            \"samples\": [\n                \"tempor ut nisi\",\n                \"enim\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines"
									],
									"variable": [
										{
											"key": "site",
											"value": "{{site}}",
											"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
										},
										{
											"key": "subdomain",
											"value": "{{subdomain}}",
											"description": "The subdomain where the API is deployed."
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete a pipeline",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "pipeline_id",
									"value": "dolor nostrud irure",
									"description": "(Required) ID of the pipeline to delete."
								}
							]
						},
						"description": "Delete a given pipeline from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a pipeline",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "pipeline_id",
									"value": "dolor nostrud irure",
									"description": "(Required) ID of the pipeline to get."
								}
							]
						},
						"description": "Get a specific pipeline from your organization.\nThis endpoint takes no JSON arguments."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"id\": \"magna\",\n \"is_enabled\": true,\n \"is_read_only\": true,\n \"processors\": [\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"fugiat\",\n   \"samples\": [\n    \"qui ipsum\",\n    \"officia sed est ve\"\n   ]\n  },\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"est aute dolore tempor\",\n   \"samples\": [\n    \"cillum\",\n    \"incididunt id officia aliqua\"\n   ]\n  }\n ],\n \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a pipeline",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": true,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"esse adipisicing voluptate qui ea\",\n            \"samples\": [\n                \"nulla cupidatat amet dolor\",\n                \"aute qui ad\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"adipi\",\n            \"samples\": [\n                \"tempor ut nisi\",\n                \"enim\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"logs",
								"config",
								"pipelines",
								":pipeline_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "pipeline_id",
									"value": "dolor nostrud irure",
									"description": "(Required) ID of the pipeline to delete."
								}
							]
						},
						"description": "Update a given pipeline configuration to change it’s processors or their order.\n\n**Note**: Using this method updates your pipeline configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"\",\n \"filter\": {\n  \"query\": \"source:python\"\n },\n \"id\": \"magna\",\n \"is_enabled\": true,\n \"is_read_only\": true,\n \"processors\": [\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"fugiat\",\n   \"samples\": [\n    \"qui ipsum\",\n    \"officia sed est ve\"\n   ]\n  },\n  {\n   \"source\": \"message\",\n   \"grok\": {\n    \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n    \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n   },\n   \"type\": \"grok-parser\",\n   \"is_enabled\": false,\n   \"name\": \"est aute dolore tempor\",\n   \"samples\": [\n    \"cillum\",\n    \"incididunt id officia aliqua\"\n   ]\n  }\n ],\n \"type\": \"pipeline\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": {\n  \"code\": \"enim amet nisi Lorem\",\n  \"message\": \"est cillum in\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"filter\": {\n        \"query\": \"source:python\"\n    },\n    \"is_enabled\": false,\n    \"processors\": [\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"in enim deserunt\",\n            \"samples\": [\n                \"aliquip\",\n                \"in mollit ex\"\n            ]\n        },\n        {\n            \"source\": \"message\",\n            \"grok\": {\n                \"match_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\",\n                \"support_rules\": \"rule_name_1 foo\\nrule_name_2 bar\\n\"\n            },\n            \"type\": \"grok-parser\",\n            \"is_enabled\": false,\n            \"name\": \"ullamco commodo in\",\n            \"samples\": [\n                \"anim cillum\",\n                \"occaecat ali\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/logs/config/pipelines/:pipeline_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logs",
										"config",
										"pipelines",
										":pipeline_id"
									],
									"variable": [
										{
											"key": "pipeline_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Pipelines and processors operate on incoming logs, parsing\nand transforming them into structured attributes for easier querying.\n\n- See the [pipelines configuration page](https://app.datadoghq.com/logs/pipelines)\n  for a list of the pipelines and processors currently configured in our UI.\n\n- Additional API-related information about processors can be found in the\n  [processors documentation](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=api#lookup-processor).\n\n- For more information about Pipelines, see the\n  [pipeline documentation](https://docs.datadoghq.com/logs/log_configuration/pipelines).\n\n**Notes:**\n\nThese endpoints are only available for admin users.\nMake sure to use an application key created by an admin.\n\n**Grok parsing rules may effect JSON output and require\nreturned data to be configured before using in a request.**\nFor example, if you are using the data returned from a\nrequest for another request body, and have a parsing rule\nthat uses a regex pattern like `\\s` for spaces, you will\nneed to configure all escaped spaces as `%{space}` to use\nin the body data."
		},
		{
			"name": "Logs Restriction Queries",
			"item": [
				{
					"name": "List restriction queries",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries?page[size]=10&page[number]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Returns all restriction queries, including their names and IDs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a restriction query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"<string>\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a new restriction query for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-17T21:06:44Z\",\n   \"modified_at\": \"2020-03-17T21:15:15Z\",\n   \"restriction_query\": \"env:sandbox\"\n  },\n  \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n  \"type\": \"logs_restriction_queries\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get restriction query for a given role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/role/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								"role",
								":role_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Get restriction query for a given role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/role/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"role",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/role/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"role",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/role/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"role",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all restriction queries for a given user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								"user",
								":user_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Get all restriction queries for a given user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-03-17T21:06:44Z\",\n    \"modified_at\": \"2020-03-17T21:15:15Z\",\n    \"restriction_query\": \"env:sandbox\"\n   },\n   \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n   \"type\": \"logs_restriction_queries\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a restriction query",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Deletes a restriction query."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a restriction query",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Get a restriction query in the organization specified by the restriction query's `restriction_query_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-17T21:06:44Z\",\n   \"modified_at\": \"2020-03-17T21:15:15Z\",\n   \"restriction_query\": \"env:sandbox\"\n  },\n  \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n  \"relationships\": {\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"logs_restriction_queries\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"name\": \"Datadog Admin Role\"\n   },\n   \"id\": \"<ROLE_ID>\",\n   \"type\": \"roles\"\n  },\n  {\n   \"attributes\": {\n    \"name\": \"Datadog Admin Role\"\n   },\n   \"id\": \"<ROLE_ID>\",\n   \"type\": \"roles\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a restriction query",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"<string>\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Edit a restriction query."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-17T21:06:44Z\",\n   \"modified_at\": \"2020-03-17T21:15:15Z\",\n   \"restriction_query\": \"env:sandbox\"\n  },\n  \"id\": \"79a0e60a-644a-11ea-ad29-43329f7f58b5\",\n  \"type\": \"logs_restriction_queries\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"restriction_query\": \"env:sandbox\"\n        },\n        \"type\": \"logs_restriction_queries\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke role from a restriction query",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"roles\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id",
								"roles"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Removes a role from a restriction query."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List roles for a restriction query",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles?page[size]=10&page[number]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id",
								"roles"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Returns all roles that have a given restriction query."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"name\": \"Datadog Admin Role\"\n   },\n   \"id\": \"<ROLE_ID>\",\n   \"type\": \"roles\"\n  },\n  {\n   \"attributes\": {\n    \"name\": \"Datadog Admin Role\"\n   },\n   \"id\": \"<ROLE_ID>\",\n   \"type\": \"roles\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Grant role to a restriction query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"roles\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"logs",
								"config",
								"restriction_queries",
								":restriction_query_id",
								"roles"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "restriction_query_id",
									"value": "<string>",
									"description": "(Required) The ID of the restriction query."
								}
							]
						},
						"description": "Adds a role to a restriction query."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/logs/config/restriction_queries/:restriction_query_id/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"logs",
										"config",
										"restriction_queries",
										":restriction_query_id",
										"roles"
									],
									"variable": [
										{
											"key": "restriction_query_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "**Note: This endpoint is in public beta. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).**\n\nTo grant read access on log data at all, you must grant the `logs_read_data` permission.\nFrom there you can limit what data a role grants read access to by associating a Restriction Query with that role.\n\nA Restriction Query is a logs query that restricts which logs the `logs_read_data` permission grants read access to.\nFor users whose roles have Restriction Queries, any log query they make only returns those log events that also match\none of their Restriction Queries. This is true whether the user queries log events from any log-related feature, including\nthe log explorer, Live Tail, re-hydration, or a dashboard widget.\n\nRestriction Queries currently only support use of the following components of log events:\n\n- Reserved attributes\n- The log message\n- Tags\n\nThe recommended way to manage restricted read access on log data for customers with large or complicated organizational structures\nis to add a team tag to log events to indicate which team(s) own(s) them, and then to scope Restriction Queries to the appropriate\nvalues of the team tag. Tags can be applied to log events in many ways, and a log event can have multiple tags with the same key (like team)\nand different values—in this way the same log event can be visible to roles whose restriction queries are scoped to different team values.\n\nYou need an API and application key with Admin rights to interact with this endpoint."
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get active metrics list",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics?from=34312785&host=dolor nostrud irure&tag_filter=env IN (staging,test) AND service:web",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics"
							],
							"query": [
								{
									"key": "from",
									"value": "34312785",
									"description": "(Required) Seconds since the Unix epoch."
								},
								{
									"key": "host",
									"value": "dolor nostrud irure",
									"description": "Hostname for filtering the list of metrics returned.\nIf set, metrics retrieved are those with the corresponding hostname tag."
								},
								{
									"key": "tag_filter",
									"value": "env IN (staging,test) AND service:web",
									"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of actively reporting metrics from a given time until now."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=34312785&host=dolor nostrud irure&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "host",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"from\": \"deserunt consectetur ut nulla\",\n \"metrics\": [\n  \"eiusmod proident\",\n  \"anim sed in dolore magna\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=34312785&host=dolor nostrud irure&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "host",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics?from=34312785&host=dolor nostrud irure&tag_filter=env IN (staging,test) AND service:web",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "host",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tag_filter",
											"value": "env IN (staging,test) AND service:web"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get metric metadata",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":metric_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the metric for which to get metadata."
								}
							]
						},
						"description": "Get metadata about a specific metric."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"exe\",\n \"integration\": \"sed irure\",\n \"per_unit\": \"second\",\n \"short_name\": \"do\",\n \"statsd_interval\": -44933796,\n \"type\": \"count\",\n \"unit\": \"byte\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit metric metadata",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"et incididunt non\",\n    \"per_unit\": \"second\",\n    \"short_name\": \"ullamco\",\n    \"statsd_interval\": -17775532,\n    \"type\": \"count\",\n    \"unit\": \"byte\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"metrics",
								":metric_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Name of the metric for which to edit metadata."
								}
							]
						},
						"description": "Edit metadata of a specific metric. Find out more about [supported types](https://docs.datadoghq.com/developers/metrics)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"et incididunt non\",\n    \"per_unit\": \"second\",\n    \"short_name\": \"ullamco\",\n    \"statsd_interval\": -17775532,\n    \"type\": \"count\",\n    \"unit\": \"byte\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"exe\",\n \"integration\": \"sed irure\",\n \"per_unit\": \"second\",\n \"short_name\": \"do\",\n \"statsd_interval\": -44933796,\n \"type\": \"count\",\n \"unit\": \"byte\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"et incididunt non\",\n    \"per_unit\": \"second\",\n    \"short_name\": \"ullamco\",\n    \"statsd_interval\": -17775532,\n    \"type\": \"count\",\n    \"unit\": \"byte\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"et incididunt non\",\n    \"per_unit\": \"second\",\n    \"short_name\": \"ullamco\",\n    \"statsd_interval\": -17775532,\n    \"type\": \"count\",\n    \"unit\": \"byte\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"et incididunt non\",\n    \"per_unit\": \"second\",\n    \"short_name\": \"ullamco\",\n    \"statsd_interval\": -17775532,\n    \"type\": \"count\",\n    \"unit\": \"byte\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/metrics/:metric_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"metrics",
										":metric_name"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Query timeseries points",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/query?from=34312785&to=34312785&query=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"query"
							],
							"query": [
								{
									"key": "from",
									"value": "34312785",
									"description": "(Required) Start of the queried time period, seconds since the Unix epoch."
								},
								{
									"key": "to",
									"value": "34312785",
									"description": "(Required) End of the queried time period, seconds since the Unix epoch."
								},
								{
									"key": "query",
									"value": "dolor nostrud irure",
									"description": "(Required) Query string."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Query timeseries points."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=34312785&to=34312785&query=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "to",
											"value": "34312785"
										},
										{
											"key": "query",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"est laboris occaecat\",\n \"from_date\": -47257249,\n \"group_by\": [\n  \"consequat in minim\",\n  \"adipisicing in ad cupidatat tempor\"\n ],\n \"message\": \"ut do eiusmod cupidatat\",\n \"query\": \"aliquip\",\n \"res_type\": \"time_series\",\n \"series\": [\n  {\n   \"aggr\": \"avg\",\n   \"display_name\": \"system.cpu.idle\",\n   \"end\": -55123514,\n   \"expression\": \"system.cpu.idle{host:foo,env:test}\",\n   \"interval\": -63374756,\n   \"length\": -39954159,\n   \"metric\": \"system.cpu.idle\",\n   \"pointlist\": [\n    [\n     1575317847,\n     0.5\n    ],\n    [\n     1575317847,\n     0.5\n    ]\n   ],\n   \"query_index\": -87537929,\n   \"scope\": \"host:foo,env:test\",\n   \"start\": -9850953,\n   \"tag_set\": [\n    \"consequat dolore ut\",\n    \"irure ips\"\n   ],\n   \"unit\": [\n    {\n     \"family\": \"time\",\n     \"name\": \"minute\",\n     \"plural\": \"minutes\",\n     \"scale_factor\": 60,\n     \"short_name\": \"min\"\n    },\n    {\n     \"family\": \"time\",\n     \"name\": \"minute\",\n     \"plural\": \"minutes\",\n     \"scale_factor\": 60,\n     \"short_name\": \"min\"\n    }\n   ]\n  },\n  {\n   \"aggr\": \"avg\",\n   \"display_name\": \"system.cpu.idle\",\n   \"end\": 95163783,\n   \"expression\": \"system.cpu.idle{host:foo,env:test}\",\n   \"interval\": -15313947,\n   \"length\": 72376345,\n   \"metric\": \"system.cpu.idle\",\n   \"pointlist\": [\n    [\n     1575317847,\n     0.5\n    ],\n    [\n     1575317847,\n     0.5\n    ]\n   ],\n   \"query_index\": 9257033,\n   \"scope\": \"host:foo,env:test\",\n   \"start\": -30980430,\n   \"tag_set\": [\n    \"in minim in incididunt\",\n    \"in in dolore eiusmod do\"\n   ],\n   \"unit\": [\n    {\n     \"family\": \"time\",\n     \"name\": \"minute\",\n     \"plural\": \"minutes\",\n     \"scale_factor\": 60,\n     \"short_name\": \"min\"\n    },\n    {\n     \"family\": \"time\",\n     \"name\": \"minute\",\n     \"plural\": \"minutes\",\n     \"scale_factor\": 60,\n     \"short_name\": \"min\"\n    }\n   ]\n  }\n ],\n \"status\": \"ok\",\n \"to_date\": -63373192\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=34312785&to=34312785&query=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "to",
											"value": "34312785"
										},
										{
											"key": "query",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/query?from=34312785&to=34312785&query=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"query"
									],
									"query": [
										{
											"key": "from",
											"value": "34312785"
										},
										{
											"key": "to",
											"value": "34312785"
										},
										{
											"key": "query",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Search metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search?q=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "dolor nostrud irure",
									"description": "(Required) Query string to search metrics upon. Must be prefixed with `metrics:`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Search for metrics from the last 24 hours in Datadog."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"results\": {\n  \"metrics\": [\n   \"esse nisi\",\n   \"dolore ex qui cupidatat\"\n  ]\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/search?q=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Submit metrics",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"series"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The metrics end-point allows you to post time-series data that can be graphed on Datadog’s dashboards.\nThe maximum payload size is 3.2 megabytes (3200000 bytes). Compressed payloads must have a decompressed size of less than 62 megabytes (62914560 bytes).\n\nIf you’re submitting metrics directly to the Datadog API without using DogStatsD, expect:\n\n- 64 bits for the timestamp\n- 32 bits for the value\n- 20 bytes for the metric names\n- 50 bytes for the timeseries\n- The full payload is approximately 100 bytes. However, with the DogStatsD API,\ncompression is applied, which reduces the payload size."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"ok\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Request timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Payload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"series\": [\n        {\n            \"metric\": \"system.load.1\",\n            \"points\": [\n                [\n                    \"${NOW}\",\n                    \"1234.5\"\n                ]\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/series",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List tag configurations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=<boolean>&filter[tags_configured]=<string>&filter[metric_type]=gauge&filter[include_percentiles]=<boolean>&filter[tags]=<string>&window[seconds]=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics"
							],
							"query": [
								{
									"key": "filter[configured]",
									"value": "<boolean>",
									"description": "Filter metrics that have configured tags."
								},
								{
									"key": "filter[tags_configured]",
									"value": "<string>",
									"description": "Filter tag configurations by configured tags."
								},
								{
									"key": "filter[metric_type]",
									"value": "gauge",
									"description": "Filter tag configurations by metric type."
								},
								{
									"key": "filter[include_percentiles]",
									"value": "<boolean>",
									"description": "Filter distributions with additional percentile\naggregations enabled or disabled."
								},
								{
									"key": "filter[tags]",
									"value": "<string>",
									"description": "Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.\nCannot be combined with other filters."
								},
								{
									"key": "window[seconds]",
									"value": "<long>",
									"description": "The number of seconds of look back (from now) to apply to a filter[tag] query.\nDefaults value is 3600 (1 hour), maximum value is 172,800 (2 days)."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Returns all configured count/gauge/rate/distribution metric names\n(with additional filters if specified)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=true&filter[tags_configured]=app&filter[metric_type]=count&filter[include_percentiles]=true&filter[tags]=env IN (staging,test) AND service:web&window[seconds]=3600",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "true"
										},
										{
											"key": "filter[tags_configured]",
											"value": "app"
										},
										{
											"key": "filter[metric_type]",
											"value": "count"
										},
										{
											"key": "filter[include_percentiles]",
											"value": "true"
										},
										{
											"key": "filter[tags]",
											"value": "env IN (staging,test) AND service:web"
										},
										{
											"key": "window[seconds]",
											"value": "3600"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": \"test.metric.latency\",\n   \"type\": \"metrics\"\n  },\n  {\n   \"id\": \"test.metric.latency\",\n   \"type\": \"metrics\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=true&filter[tags_configured]=app&filter[metric_type]=count&filter[include_percentiles]=true&filter[tags]=env IN (staging,test) AND service:web&window[seconds]=3600",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "true"
										},
										{
											"key": "filter[tags_configured]",
											"value": "app"
										},
										{
											"key": "filter[metric_type]",
											"value": "count"
										},
										{
											"key": "filter[include_percentiles]",
											"value": "true"
										},
										{
											"key": "filter[tags]",
											"value": "env IN (staging,test) AND service:web"
										},
										{
											"key": "window[seconds]",
											"value": "3600"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=true&filter[tags_configured]=app&filter[metric_type]=count&filter[include_percentiles]=true&filter[tags]=env IN (staging,test) AND service:web&window[seconds]=3600",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "true"
										},
										{
											"key": "filter[tags_configured]",
											"value": "app"
										},
										{
											"key": "filter[metric_type]",
											"value": "count"
										},
										{
											"key": "filter[include_percentiles]",
											"value": "true"
										},
										{
											"key": "filter[tags]",
											"value": "env IN (staging,test) AND service:web"
										},
										{
											"key": "window[seconds]",
											"value": "3600"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics?filter[configured]=true&filter[tags_configured]=app&filter[metric_type]=count&filter[include_percentiles]=true&filter[tags]=env IN (staging,test) AND service:web&window[seconds]=3600",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics"
									],
									"query": [
										{
											"key": "filter[configured]",
											"value": "true"
										},
										{
											"key": "filter[tags_configured]",
											"value": "app"
										},
										{
											"key": "filter[metric_type]",
											"value": "count"
										},
										{
											"key": "filter[include_percentiles]",
											"value": "true"
										},
										{
											"key": "filter[tags]",
											"value": "env IN (staging,test) AND service:web"
										},
										{
											"key": "window[seconds]",
											"value": "3600"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List tags by metric name",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"all-tags"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "View indexed tag key-value pairs for a given metric name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"tags\": [\n    \"sport:golf\",\n    \"sport:football\",\n    \"animal:dog\"\n   ]\n  },\n  \"id\": \"test.metric.latency\",\n  \"type\": \"metrics\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/all-tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"all-tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a tag configuration",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "Deletes a metric's tag configuration. Can only be used with application\nkeys from users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List tag configuration by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "Returns the tag configuration for the given metric name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-31T09:48:37.463835Z\",\n   \"metric_type\": \"gauge\",\n   \"modified_at\": \"2020-04-31T09:48:37.463835Z\",\n   \"tags\": [\n    \"app\",\n    \"datacenter\"\n   ]\n  },\n  \"type\": \"manage_tags\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a tag configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": false\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "Update the tag configuration of a metric or percentile aggregations of a distribution metric. Can only be used with\napplication keys from users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": true,\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-31T09:48:37.463835Z\",\n   \"metric_type\": \"gauge\",\n   \"modified_at\": \"2020-04-31T09:48:37.463835Z\",\n   \"tags\": [\n    \"app\",\n    \"datacenter\"\n   ]\n  },\n  \"type\": \"manage_tags\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": true,\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": true,\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": true,\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"include_percentiles\": true,\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a tag configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [],\n            \"metric_type\": \"gauge\",\n            \"include_percentiles\": false\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"tags"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "Create and define a list of queryable tag keys for an existing count/gauge/rate/distribution metric. Optionally, include percentile aggregations on any distribution metric.\nCan only be used with application keys of users with the `Manage Tags for Metrics` permission."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ],\n            \"metric_type\": \"count\",\n            \"include_percentiles\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-03-31T09:48:37.463835Z\",\n   \"metric_type\": \"gauge\",\n   \"modified_at\": \"2020-04-31T09:48:37.463835Z\",\n   \"tags\": [\n    \"app\",\n    \"datacenter\"\n   ]\n  },\n  \"type\": \"manage_tags\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ],\n            \"metric_type\": \"count\",\n            \"include_percentiles\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ],\n            \"metric_type\": \"count\",\n            \"include_percentiles\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ],\n            \"metric_type\": \"count\",\n            \"include_percentiles\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"test.metric.latency\",\n        \"type\": \"manage_tags\",\n        \"attributes\": {\n            \"tags\": [\n                \"app\",\n                \"datacenter\"\n            ],\n            \"metric_type\": \"count\",\n            \"include_percentiles\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"tags"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List distinct metric volumes by metric name",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"metrics",
								":metric_name",
								"volumes"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "metric_name",
									"value": "<string>",
									"description": "(Required) The name of the metric."
								}
							]
						},
						"description": "View distinct metrics volumes for the given metric name.\n\nCustom distribution metrics will return both ingested and indexed custom metric volumes.\nFor Metrics without Limits&trade; beta customers, all metrics will return both ingested/indexed volumes.\nCustom metrics generated in-app from other products will return `null` for ingested volumes."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"distinct_volume\": 10\n  },\n  \"id\": \"test.metric.latency\",\n  \"type\": \"distinct_metric_volumes\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too Many Requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/metrics/:metric_name/volumes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"metrics",
										":metric_name",
										"volumes"
									],
									"variable": [
										{
											"key": "metric_name"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The metrics endpoint allows you to:\n\n- Post metrics data so it can be graphed on Datadog’s dashboards\n- Query metrics from any time period\n- Modify tag configurations for metrics\n- View tags and volumes for metrics\n\n**Note**: A graph can only contain a set number of points\nand as the timeframe over which a metric is viewed increases,\naggregation between points occurs to stay below that set number.\n\nThe Post, Patch, and Delete `manage_tags` API methods can only be performed by\na user who has the `Manage Tags for Metrics` permission."
		},
		{
			"name": "Monitors",
			"item": [
				{
					"name": "Get all monitor details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=dolor nostrud irure&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=34312785&page=0&page_size=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"query": [
								{
									"key": "group_states",
									"value": "alert",
									"description": "When specified, shows additional information about the group states.\nChoose one or more from `all`, `alert`, `warn`, and `no data`."
								},
								{
									"key": "name",
									"value": "dolor nostrud irure",
									"description": "A string to filter monitors by name."
								},
								{
									"key": "tags",
									"value": "host:host0",
									"description": "A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.\nFor example, `host:host0`."
								},
								{
									"key": "monitor_tags",
									"value": "service:my-app",
									"description": "A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.\nTags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`."
								},
								{
									"key": "with_downtimes",
									"value": "true",
									"description": "If this argument is set to true, then the returned data includes all current active downtimes for each monitor."
								},
								{
									"key": "id_offset",
									"value": "34312785",
									"description": "Monitor ID offset."
								},
								{
									"key": "page",
									"value": "0",
									"description": "The page to start paginating from. If this argument is not specified, the request returns all monitors without pagination."
								},
								{
									"key": "page_size",
									"value": "20",
									"description": "The number of monitors to return per page. If the page argument is not specified, the default behavior returns all monitors without a `page_size` limit. However, if page is specified and `page_size` is not, the argument defaults to 100."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get details about the specified monitor from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=dolor nostrud irure&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=34312785&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert"
										},
										{
											"key": "name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app"
										},
										{
											"key": "with_downtimes",
											"value": "true"
										},
										{
											"key": "id_offset",
											"value": "34312785"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"type\": \"metric alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"1953-12-24T20:16:18.250Z\",\n  \"creator\": {\n   \"email\": \"eu veniam et\",\n   \"handle\": \"reprehenderit offic\",\n   \"name\": \"id nisi\"\n  },\n  \"deleted\": \"1991-05-15T18:13:54.594Z\",\n  \"id\": -22433728,\n  \"message\": \"est proident\",\n  \"modified\": \"1943-01-06T22:16:30.857Z\",\n  \"multi\": false,\n  \"name\": \"ullamco mollit ut\",\n  \"options\": {\n   \"aggregation\": {\n    \"group_by\": \"host\",\n    \"metric\": \"metrics.name\",\n    \"type\": \"count\"\n   },\n   \"device_ids\": [\n    \"chrome.tablet\",\n    \"tablet\"\n   ],\n   \"enable_logs_sample\": false,\n   \"escalation_message\": \"none\",\n   \"evaluation_delay\": 46743676,\n   \"groupby_simple_monitor\": false,\n   \"include_tags\": true,\n   \"locked\": true,\n   \"min_failure_duration\": 0,\n   \"min_location_failed\": 1,\n   \"new_group_delay\": -56563963,\n   \"new_host_delay\": 300,\n   \"no_data_timeframe\": 58419844,\n   \"notify_audit\": false,\n   \"notify_no_data\": false,\n   \"renotify_interval\": \"none\",\n   \"require_full_window\": true,\n   \"silenced\": {},\n   \"synthetics_check_id\": \"qui in ut\",\n   \"threshold_windows\": {\n    \"recovery_window\": \"do in est velit\",\n    \"trigger_window\": \"irure labore dolor ad minim\"\n   },\n   \"thresholds\": {\n    \"critical\": -95371493.24882747,\n    \"critical_recovery\": -43017000.91663503,\n    \"ok\": -96959708.05083168,\n    \"unknown\": -73863641.63922247,\n    \"warning\": 65901034.45616561,\n    \"warning_recovery\": -94602280.74973145\n   },\n   \"timeout_h\": \"none\"\n  },\n  \"overall_state\": \"Ignored\",\n  \"priority\": 2,\n  \"restricted_roles\": [\n   \"reprehenderit sit est\",\n   \"esse\"\n  ],\n  \"state\": {\n   \"groups\": {}\n  },\n  \"tags\": [\n   \"eiusmod enim\",\n   \"nisi in dolor officia\"\n  ]\n },\n {\n  \"type\": \"metric alert\",\n  \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n  \"created\": \"2006-09-18T19:17:54.316Z\",\n  \"creator\": {\n   \"email\": \"Excepteur nulla\",\n   \"handle\": \"Excepteur laborum mollit Lorem\",\n   \"name\": \"\"\n  },\n  \"deleted\": \"1987-12-14T02:06:49.242Z\",\n  \"id\": 17285904,\n  \"message\": \"reprehenderit exercitation\",\n  \"modified\": \"2003-11-19T15:10:32.888Z\",\n  \"multi\": true,\n  \"name\": \"fugiat Excepteur exercitation\",\n  \"options\": {\n   \"aggregation\": {\n    \"group_by\": \"host\",\n    \"metric\": \"metrics.name\",\n    \"type\": \"count\"\n   },\n   \"device_ids\": [\n    \"firefox.laptop_large\",\n    \"firefox.mobile_small\"\n   ],\n   \"enable_logs_sample\": false,\n   \"escalation_message\": \"none\",\n   \"evaluation_delay\": -37858752,\n   \"groupby_simple_monitor\": false,\n   \"include_tags\": true,\n   \"locked\": false,\n   \"min_failure_duration\": 0,\n   \"min_location_failed\": 1,\n   \"new_group_delay\": 12904047,\n   \"new_host_delay\": 300,\n   \"no_data_timeframe\": 89028898,\n   \"notify_audit\": false,\n   \"notify_no_data\": false,\n   \"renotify_interval\": \"none\",\n   \"require_full_window\": false,\n   \"silenced\": {},\n   \"synthetics_check_id\": \"qui Lorem reprehenderit labore\",\n   \"threshold_windows\": {\n    \"recovery_window\": \"amet quis proident enim nostrud\",\n    \"trigger_window\": \"dolore amet reprehenderit\"\n   },\n   \"thresholds\": {\n    \"critical\": 88132063.69277021,\n    \"critical_recovery\": 32641254.606397003,\n    \"ok\": -53414394.26361006,\n    \"unknown\": 79118437.25261164,\n    \"warning\": -31392935.27454053,\n    \"warning_recovery\": 77688239.58406773\n   },\n   \"timeout_h\": \"none\"\n  },\n  \"overall_state\": \"Unknown\",\n  \"priority\": 4,\n  \"restricted_roles\": [\n   \"labore dolore\",\n   \"eu adipisicing et cupidatat\"\n  ],\n  \"state\": {\n   \"groups\": {}\n  },\n  \"tags\": [\n   \"minim sed Duis\",\n   \"ex anim ullamco esse\"\n  ]\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=dolor nostrud irure&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=34312785&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert"
										},
										{
											"key": "name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app"
										},
										{
											"key": "with_downtimes",
											"value": "true"
										},
										{
											"key": "id_offset",
											"value": "34312785"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor?group_states=alert&name=dolor nostrud irure&tags=host:host0&monitor_tags=service:my-app&with_downtimes=true&id_offset=34312785&page=0&page_size=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									],
									"query": [
										{
											"key": "group_states",
											"value": "alert"
										},
										{
											"key": "name",
											"value": "dolor nostrud irure"
										},
										{
											"key": "tags",
											"value": "host:host0"
										},
										{
											"key": "monitor_tags",
											"value": "service:my-app"
										},
										{
											"key": "with_downtimes",
											"value": "true"
										},
										{
											"key": "id_offset",
											"value": "34312785"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"You may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a monitor using the specified options.\n\n#### Monitor Types\n\nThe type of monitor chosen from:\n\n- anomaly: `query alert`\n- APM: `query alert` or `trace-analytics alert`\n- composite: `composite`\n- custom: `service check`\n- event: `event alert`\n- forecast: `query alert`\n- host: `service check`\n- integration: `query alert` or `service check`\n- live process: `process alert`\n- logs: `log alert`\n- metric: `metric alert`\n- network: `service check`\n- outlier: `query alert`\n- process: `service check`\n- rum: `rum alert`\n- SLO: `slo alert`\n- watchdog: `event alert`\n- event-v2: `event-v2 alert`\n- audit: `audit alert`\n\n#### Query Types\n\n**Metric Alert Query**\n\nExample: `time_aggr(time_window):space_aggr:metric{tags} [by {key}] operator #`\n\n- `time_aggr`: avg, sum, max, min, change, or pct_change\n- `time_window`: `last_#m` (with `#` between 1 and 10080 depending on the monitor type) or `last_#h`(with `#` between 1 and 168 depending on the monitor type) or `last_1d`, or `last_1w`\n- `space_aggr`: avg, sum, min, or max\n- `tags`: one or more tags (comma-separated), or *\n- `key`: a 'key' in key:value tag syntax; defines a separate alert for each tag in the group (multi-alert)\n- `operator`: <, <=, >, >=, ==, or !=\n- `#`: an integer or decimal number used to set the threshold\n\nIf you are using the `_change_` or `_pct_change_` time aggregator, instead use `change_aggr(time_aggr(time_window),\ntimeshift):space_aggr:metric{tags} [by {key}] operator #` with:\n\n- `change_aggr` change, pct_change\n- `time_aggr` avg, sum, max, min [Learn more](https://docs.datadoghq.com/monitors/monitor_types/#define-the-conditions)\n- `time_window` last\\_#m (between 1 and 2880 depending on the monitor type), last\\_#h (between 1 and 48 depending on the monitor type), or last_#d (1 or 2)\n- `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago\n\nUse this to create an outlier monitor using the following query:\n`avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by {host}, 'dbscan', 7) > 0`\n\n**Service Check Query**\n\nExample: `\"check\".over(tags).last(count).by(group).count_by_status()`\n\n- **`check`** name of the check, e.g. `datadog.agent.up`\n- **`tags`** one or more quoted tags (comma-separated), or \"*\". e.g.: `.over(\"env:prod\", \"role:db\")`; **`over`** cannot be blank.\n- **`count`** must be at greater than or equal to your max threshold (defined in the `options`). It is limited to 100.\nFor example, if you've specified to notify on 1 critical, 3 ok, and 2 warn statuses, `count` should be at least 3.\n- **`group`** must be specified for check monitors. Per-check grouping is already explicitly known for some service checks.\nFor example, Postgres integration monitors are tagged by `db`, `host`, and `port`, and Network monitors by `host`, `instance`, and `url`. See [Service Checks](https://docs.datadoghq.com/api/latest/service-checks/) documentation for more information.\n\n**Event Alert Query**\n\nExample: `events('sources:nagios status:error,warning priority:normal tags: \"string query\"').rollup(\"count\").last(\"1h\")\"`\n\n- **`event`**, the event query string:\n- **`string_query`** free text query to match against event title and text.\n- **`sources`** event sources (comma-separated).\n- **`status`** event statuses (comma-separated). Valid options: error, warn, and info.\n- **`priority`** event priorities (comma-separated). Valid options: low, normal, all.\n- **`host`** event reporting host (comma-separated).\n- **`tags`** event tags (comma-separated).\n- **`excluded_tags`** excluded event tags (comma-separated).\n- **`rollup`** the stats roll-up method. `count` is the only supported method now.\n- **`last`** the timeframe to roll up the counts. Examples: 45m, 4h. Supported timeframes: m, h and d. This value should not exceed 48 hours.\n\n**NOTE** Only available on US1 and EU.\n\n**Event V2 Alert Query**\n\nExample: `events(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- **`query`** The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- **`rollup_method`** The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- **`measure`** For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- **`time_window`** #m (between 1 and 2880), #h (between 1 and 48).\n- **`operator`** `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- **`#`** an integer or decimal number used to set the threshold.\n\n**NOTE** Only available on US1-FED, US3, and in closed beta on EU and US1.\n\n**Process Alert Query**\n\nExample: `processes(search).over(tags).rollup('count').last(timeframe) operator #`\n\n- **`search`** free text search string for querying processes.\nMatching processes match results on the [Live Processes](https://docs.datadoghq.com/infrastructure/process/?tab=linuxwindows) page.\n- **`tags`** one or more tags (comma-separated)\n- **`timeframe`** the timeframe to roll up the counts. Examples: 10m, 4h. Supported timeframes: s, m, h and d\n- **`operator`** <, <=, >, >=, ==, or !=\n- **`#`** an integer or decimal number used to set the threshold\n\n**Logs Alert Query**\n\nExample: `logs(query).index(index_name).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- **`query`** The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- **`index_name`** For multi-index organizations, the log index in which the request is performed.\n- **`rollup_method`** The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- **`measure`** For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- **`time_window`** #m (between 1 and 2880), #h (between 1 and 48).\n- **`operator`** `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- **`#`** an integer or decimal number used to set the threshold.\n\n**Composite Query**\n\nExample: `12345 && 67890`, where `12345` and `67890` are the IDs of non-composite monitors\n\n* **`name`** [*required*, *default* = **dynamic, based on query**]: The name of the alert.\n* **`message`** [*required*, *default* = **dynamic, based on query**]: A message to include with notifications for this monitor.\nEmail notifications can be sent to specific users by using the same '@username' notation as events.\n* **`tags`** [*optional*, *default* = **empty list**]: A list of tags to associate with your monitor.\nWhen getting all monitor details via the API, use the `monitor_tags` argument to filter results by these tags.\nIt is only available via the API and isn't visible or editable in the Datadog UI.\n\n**SLO Alert Query**\n\nExample: `error_budget(\"slo_id\").over(\"time_window\") operator #`\n\n- **`slo_id`**: The alphanumeric SLO ID of the SLO you are configuring the alert for.\n- **`time_window`**: The time window of the SLO target you wish to alert on. Valid options: `7d`, `30d`, `90d`.\n- **`operator`**: `>=` or `>`\n\n**Audit Alert Query**\n\nExample: `audits(query).rollup(rollup_method[, measure]).last(time_window) operator #`\n\n- **`query`** The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).\n- **`rollup_method`** The stats roll-up method - supports `count`, `avg` and `cardinality`.\n- **`measure`** For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.\n- **`time_window`** #m (between 1 and 2880), #h (between 1 and 48).\n- **`operator`** `<`, `<=`, `>`, `>=`, `==`, or `!=`.\n- **`#`** an integer or decimal number used to set the threshold.\n\n**NOTE** Only available on US1-FED and in closed beta on EU, US3, and US1."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"You may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"You may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"You may need to add web hosts if this is consistently high.\",\n    \"name\": \"Bytes received on host0\",\n    \"options\": {\n        \"no_data_timeframe\": 20,\n        \"notify_no_data\": true\n    },\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"tags\": [\n        \"app:webserver\",\n        \"frontend\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Check if a monitor can be deleted",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=-14778183&monitor_ids=-46362114",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"can_delete"
							],
							"query": [
								{
									"key": "monitor_ids",
									"value": "-14778183",
									"description": "(Required) The IDs of the monitor to check."
								},
								{
									"key": "monitor_ids",
									"value": "-46362114",
									"description": "(Required) The IDs of the monitor to check."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Check if the given monitors can be deleted."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=56154485&monitor_ids=-49550510",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "56154485"
										},
										{
											"key": "monitor_ids",
											"value": "-49550510"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {},\n \"errors\": {}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=56154485&monitor_ids=-49550510",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "56154485"
										},
										{
											"key": "monitor_ids",
											"value": "-49550510"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=56154485&monitor_ids=-49550510",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "56154485"
										},
										{
											"key": "monitor_ids",
											"value": "-49550510"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Deletion conflict error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/can_delete?monitor_ids=56154485&monitor_ids=-49550510",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"can_delete"
									],
									"query": [
										{
											"key": "monitor_ids",
											"value": "56154485"
										},
										{
											"key": "monitor_ids",
											"value": "-49550510"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {},\n \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "Monitors group search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"groups",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "dolor nostrud irure",
									"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage_monitor/#find-the-monitors"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from."
								},
								{
									"key": "per_page",
									"value": "30",
									"description": "Number of monitors to return per page."
								},
								{
									"key": "sort",
									"value": "dolor nostrud irure",
									"description": "String for sort order, composed of field and sort order separate by a comma, e.g. `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Search and filter your monitor groups details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"counts\": {\n  \"status\": [\n   {\n    \"count\": -91621447,\n    \"name\": {}\n   },\n   {\n    \"count\": 93953844,\n    \"name\": {}\n   }\n  ],\n  \"type\": [\n   {\n    \"count\": -14443060,\n    \"name\": {}\n   },\n   {\n    \"count\": 20694996,\n    \"name\": {}\n   }\n  ]\n },\n \"groups\": [\n  {\n   \"group\": \"ea\",\n   \"group_tags\": [\n    \"quis sint veli\",\n    \"ut ut\"\n   ],\n   \"last_nodata_ts\": -573140,\n   \"last_triggered_ts\": 31984279,\n   \"monitor_id\": -92412641,\n   \"monitor_name\": \"sunt mollit dolore\",\n   \"status\": \"OK\"\n  },\n  {\n   \"group\": \"Lorem tempor aliquip sed\",\n   \"group_tags\": [\n    \"sit qui\",\n    \"\"\n   ],\n   \"last_nodata_ts\": -43528264,\n   \"last_triggered_ts\": -4028149,\n   \"monitor_id\": -42541524,\n   \"monitor_name\": \"et nostrud \",\n   \"status\": \"Ignored\"\n  }\n ],\n \"metadata\": {\n  \"page\": -76796241,\n  \"page_count\": -73446637,\n  \"per_page\": -27457442,\n  \"total_count\": -17232662\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/groups/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"groups",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Monitors search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "dolor nostrud irure",
									"description": "After entering a search query in your [Manage Monitor page][1] use the query parameter value in the\nURL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]\npage to learn more.\n\nThe query can contain any number of space-separated monitor attributes, for instance `query=\"type:metric status:alert\"`.\n\n[1]: https://app.datadoghq.com/monitors/manage\n[2]: /monitors/manage_monitor/#find-the-monitors"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page to start paginating from."
								},
								{
									"key": "per_page",
									"value": "30",
									"description": "Number of monitors to return per page."
								},
								{
									"key": "sort",
									"value": "dolor nostrud irure",
									"description": "String for sort order, composed of field and sort order separate by a comma, e.g. `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:\n\n* `name`\n* `status`\n* `tags`"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Search and filter your monitors details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"counts\": {\n  \"muted\": [\n   {\n    \"count\": -24442666,\n    \"name\": {}\n   },\n   {\n    \"count\": -73553306,\n    \"name\": {}\n   }\n  ],\n  \"status\": [\n   {\n    \"count\": 90638083,\n    \"name\": {}\n   },\n   {\n    \"count\": -49727724,\n    \"name\": {}\n   }\n  ],\n  \"tag\": [\n   {\n    \"count\": 26828532,\n    \"name\": {}\n   },\n   {\n    \"count\": -79103212,\n    \"name\": {}\n   }\n  ],\n  \"type\": [\n   {\n    \"count\": -72199587,\n    \"name\": {}\n   },\n   {\n    \"count\": 83726629,\n    \"name\": {}\n   }\n  ]\n },\n \"metadata\": {\n  \"page\": 49113157,\n  \"page_count\": 39611253,\n  \"per_page\": -80485389,\n  \"total_count\": 5321394\n },\n \"monitors\": [\n  {\n   \"classification\": \"consequat fugiat\",\n   \"creator\": {\n    \"email\": \"dolore fugiat\",\n    \"handle\": \"qui\",\n    \"name\": \"est magna cupidatat irure ullamco\"\n   },\n   \"id\": 96192659,\n   \"last_triggered_ts\": 96722067,\n   \"metrics\": [\n    \"labore occaecat ipsum do\",\n    \"in Duis in ipsum\"\n   ],\n   \"name\": \"in ut\",\n   \"notifications\": [\n    {\n     \"handle\": \"sint aliquip irure\",\n     \"name\": \"cupidatat laborum dolor magna\"\n    },\n    {\n     \"handle\": \"cupidatat in dolore Duis\",\n     \"name\": \"cillum exercitation incididunt non\"\n    }\n   ],\n   \"org_id\": 53907038,\n   \"scopes\": [\n    \"host:app2\",\n    \"env:dev,env:prod\"\n   ],\n   \"status\": \"No Data\",\n   \"tags\": [\n    \"consectetur dolor irur\",\n    \"qui labore Excepteur ea\"\n   ],\n   \"type\": \"metric alert\"\n  },\n  {\n   \"classification\": \"do\",\n   \"creator\": {\n    \"email\": \"officia eiusmod\",\n    \"handle\": \"ut aute sed labore\",\n    \"name\": \"sit cillum non\"\n   },\n   \"id\": 81061597,\n   \"last_triggered_ts\": 49681267,\n   \"metrics\": [\n    \"enim laborum\",\n    \"elit velit quis\"\n   ],\n   \"name\": \"minim amet\",\n   \"notifications\": [\n    {\n     \"handle\": \"nisi Lorem\",\n     \"name\": \"sed dolor\"\n    },\n    {\n     \"handle\": \"pariatur dolor Ut\",\n     \"name\": \"incididunt aliquip\"\n    }\n   ],\n   \"org_id\": 66247689,\n   \"scopes\": [\n    \"host:app2\",\n    \"env:dev,env:prod\"\n   ],\n   \"status\": \"OK\",\n   \"tags\": [\n    \"non Lorem dolore consequat\",\n    \"incididunt deserunt eu et\"\n   ],\n   \"type\": \"metric alert\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/search?query=dolor nostrud irure&page=0&per_page=30&sort=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "per_page",
											"value": "30"
										},
										{
											"key": "sort",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Validate a monitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"message\": \"dolore ut\",\n    \"name\": \"laborum do sit Lorem dolor\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": -91025476,\n        \"groupby_simple_monitor\": true,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 92179736,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 56060380,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": false,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"eu culpa\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"ut\",\n            \"trigger_window\": \"in officia Duis ullamco\"\n        },\n        \"thresholds\": {\n            \"critical\": 36963792.47308776,\n            \"critical_recovery\": 65345381.9799234,\n            \"ok\": -46720900.76537412,\n            \"unknown\": 88753315.27717263,\n            \"warning\": -33447620.619782947,\n            \"warning_recovery\": -40584362.37127081\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 2,\n    \"restricted_roles\": [\n        \"quis magna\",\n        \"ex officia dolore mollit\"\n    ],\n    \"tags\": [\n        \"aliquip\",\n        \"ut reprehenderit\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								"validate"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Validate the monitor provided in the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"message\": \"mollit elit Lorem ut\",\n    \"name\": \"sit qui commodo aliqua irure\",\n    \"options\": {\n        \"enable_logs_sample\": true,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 70436161,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": true,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 821391,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 85600251,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": false,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"irure proident\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"aute Duis irure\",\n            \"trigger_window\": \"in occaecat commodo\"\n        },\n        \"thresholds\": {\n            \"critical\": 32301324.84955886,\n            \"critical_recovery\": -84876102.90308002,\n            \"ok\": 31484118.729595914,\n            \"unknown\": -34500924.42309307,\n            \"warning\": -45057887.36977156,\n            \"warning_recovery\": -97401748.59223929\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 4,\n    \"restricted_roles\": [\n        \"laboris sunt\",\n        \"qui nulla anim incididunt sint\"\n    ],\n    \"tags\": [\n        \"et aute\",\n        \"dolor est\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Invalid JSON",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"message\": \"mollit elit Lorem ut\",\n    \"name\": \"sit qui commodo aliqua irure\",\n    \"options\": {\n        \"enable_logs_sample\": true,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 70436161,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": true,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 821391,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 85600251,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": false,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"irure proident\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"aute Duis irure\",\n            \"trigger_window\": \"in occaecat commodo\"\n        },\n        \"thresholds\": {\n            \"critical\": 32301324.84955886,\n            \"critical_recovery\": -84876102.90308002,\n            \"ok\": 31484118.729595914,\n            \"unknown\": -34500924.42309307,\n            \"warning\": -45057887.36977156,\n            \"warning_recovery\": -97401748.59223929\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 4,\n    \"restricted_roles\": [\n        \"laboris sunt\",\n        \"qui nulla anim incididunt sint\"\n    ],\n    \"tags\": [\n        \"et aute\",\n        \"dolor est\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"metric alert\",\n    \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n    \"message\": \"mollit elit Lorem ut\",\n    \"name\": \"sit qui commodo aliqua irure\",\n    \"options\": {\n        \"enable_logs_sample\": true,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 70436161,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": true,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 821391,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 85600251,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": false,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"irure proident\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"aute Duis irure\",\n            \"trigger_window\": \"in occaecat commodo\"\n        },\n        \"thresholds\": {\n            \"critical\": 32301324.84955886,\n            \"critical_recovery\": -84876102.90308002,\n            \"ok\": 31484118.729595914,\n            \"unknown\": -34500924.42309307,\n            \"warning\": -45057887.36977156,\n            \"warning_recovery\": -97401748.59223929\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 4,\n    \"restricted_roles\": [\n        \"laboris sunt\",\n        \"qui nulla anim incididunt sint\"\n    ],\n    \"tags\": [\n        \"et aute\",\n        \"dolor est\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										"validate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a monitor",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"query": [
								{
									"key": "force",
									"value": "false",
									"description": "Delete the monitor even if it's referenced by other resources (e.g. SLO, composite monitor)."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The ID of the monitor."
								}
							]
						},
						"description": "Delete the specified monitor"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_monitor_id\": -16885693\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?force=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "force",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a monitor's details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"query": [
								{
									"key": "group_states",
									"value": "dolor nostrud irure",
									"description": "When specified, shows additional information about the group states. Choose one or more from `all`, `alert`, `warn`, and `no data`."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The ID of the monitor"
								}
							]
						},
						"description": "Get details about the specified monitor from your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id?group_states=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"query": [
										{
											"key": "group_states",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit a monitor",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"de\",\n    \"name\": \"id labore sint\",\n    \"options\": {\n        \"enable_logs_sample\": true,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 19725344,\n        \"groupby_simple_monitor\": true,\n        \"include_tags\": true,\n        \"locked\": true,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 18813905,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": -20634797,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": false,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"nisi quis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nulla sint eiusmod do\",\n            \"trigger_window\": \"Duis Ut nulla pariatur\"\n        },\n        \"thresholds\": {\n            \"critical\": 45545147.23460966,\n            \"critical_recovery\": 8297300.842268467,\n            \"ok\": 87491946.86315227,\n            \"unknown\": 41876372.572170645,\n            \"warning\": -21315493.342452735,\n            \"warning_recovery\": -21900813.03226088\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"voluptate nulla\",\n    \"restricted_roles\": [\n        \"commodo sint nisi\",\n        \"esse laboris sunt\"\n    ],\n    \"tags\": [\n        \"ea\",\n        \"tempor et\"\n    ],\n    \"type\": \"metric alert\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id"
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The ID of the monitor."
								}
							]
						},
						"description": "Edit the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"velit laborum\",\n    \"name\": \"proident\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 29768508,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 59844384,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 19101199,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": true,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"Duis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nostrud aliquip\",\n            \"trigger_window\": \"Ut\"\n        },\n        \"thresholds\": {\n            \"critical\": -48544667.346300855,\n            \"critical_recovery\": -44804742.090673335,\n            \"ok\": -54820658.76725817,\n            \"unknown\": -48045264.5133806,\n            \"warning\": -26939356.326535836,\n            \"warning_recovery\": -66325614.601595365\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"consequat enim proident Excepteur\",\n    \"restricted_roles\": [\n        \"sunt enim aliqua dolore\",\n        \"qui officia dolor\"\n    ],\n    \"tags\": [\n        \"officia in proident est\",\n        \"est Ut\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"velit laborum\",\n    \"name\": \"proident\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 29768508,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 59844384,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 19101199,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": true,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"Duis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nostrud aliquip\",\n            \"trigger_window\": \"Ut\"\n        },\n        \"thresholds\": {\n            \"critical\": -48544667.346300855,\n            \"critical_recovery\": -44804742.090673335,\n            \"ok\": -54820658.76725817,\n            \"unknown\": -48045264.5133806,\n            \"warning\": -26939356.326535836,\n            \"warning_recovery\": -66325614.601595365\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"consequat enim proident Excepteur\",\n    \"restricted_roles\": [\n        \"sunt enim aliqua dolore\",\n        \"qui officia dolor\"\n    ],\n    \"tags\": [\n        \"officia in proident est\",\n        \"est Ut\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"velit laborum\",\n    \"name\": \"proident\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 29768508,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 59844384,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 19101199,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": true,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"Duis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nostrud aliquip\",\n            \"trigger_window\": \"Ut\"\n        },\n        \"thresholds\": {\n            \"critical\": -48544667.346300855,\n            \"critical_recovery\": -44804742.090673335,\n            \"ok\": -54820658.76725817,\n            \"unknown\": -48045264.5133806,\n            \"warning\": -26939356.326535836,\n            \"warning_recovery\": -66325614.601595365\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"consequat enim proident Excepteur\",\n    \"restricted_roles\": [\n        \"sunt enim aliqua dolore\",\n        \"qui officia dolor\"\n    ],\n    \"tags\": [\n        \"officia in proident est\",\n        \"est Ut\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"velit laborum\",\n    \"name\": \"proident\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 29768508,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 59844384,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 19101199,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": true,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"Duis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nostrud aliquip\",\n            \"trigger_window\": \"Ut\"\n        },\n        \"thresholds\": {\n            \"critical\": -48544667.346300855,\n            \"critical_recovery\": -44804742.090673335,\n            \"ok\": -54820658.76725817,\n            \"unknown\": -48045264.5133806,\n            \"warning\": -26939356.326535836,\n            \"warning_recovery\": -66325614.601595365\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"consequat enim proident Excepteur\",\n    \"restricted_roles\": [\n        \"sunt enim aliqua dolore\",\n        \"qui officia dolor\"\n    ],\n    \"tags\": [\n        \"officia in proident est\",\n        \"est Ut\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"velit laborum\",\n    \"name\": \"proident\",\n    \"options\": {\n        \"enable_logs_sample\": false,\n        \"escalation_message\": \"none\",\n        \"evaluation_delay\": 29768508,\n        \"groupby_simple_monitor\": false,\n        \"include_tags\": true,\n        \"locked\": false,\n        \"min_failure_duration\": 0,\n        \"min_location_failed\": 1,\n        \"new_group_delay\": 59844384,\n        \"new_host_delay\": 300,\n        \"no_data_timeframe\": 19101199,\n        \"notify_audit\": false,\n        \"notify_no_data\": false,\n        \"renotify_interval\": \"none\",\n        \"require_full_window\": true,\n        \"silenced\": {},\n        \"synthetics_check_id\": \"Duis\",\n        \"threshold_windows\": {\n            \"recovery_window\": \"nostrud aliquip\",\n            \"trigger_window\": \"Ut\"\n        },\n        \"thresholds\": {\n            \"critical\": -48544667.346300855,\n            \"critical_recovery\": -44804742.090673335,\n            \"ok\": -54820658.76725817,\n            \"unknown\": -48045264.5133806,\n            \"warning\": -26939356.326535836,\n            \"warning_recovery\": -66325614.601595365\n        },\n        \"timeout_h\": \"none\"\n    },\n    \"priority\": 3,\n    \"query\": \"consequat enim proident Excepteur\",\n    \"restricted_roles\": [\n        \"sunt enim aliqua dolore\",\n        \"qui officia dolor\"\n    ],\n    \"tags\": [\n        \"officia in proident est\",\n        \"est Ut\"\n    ],\n    \"type\": \"metric alert\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id"
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Mute a monitor",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=34312785",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"mute"
							],
							"query": [
								{
									"key": "scope",
									"value": "role:db",
									"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
								},
								{
									"key": "end",
									"value": "34312785",
									"description": "A POSIX timestamp for when the mute should end."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The id of the monitor"
								}
							]
						},
						"description": "Mute the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "end",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "end",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "end",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/mute?scope=role:db&end=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"mute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "end",
											"value": "34312785"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Unmute a monitor",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monitor",
								":monitor_id",
								"unmute"
							],
							"query": [
								{
									"key": "scope",
									"value": "role:db",
									"description": "The scope to apply the mute to.\nFor example, if your alert is grouped by `{host}`, you might mute `host:app1`."
								},
								{
									"key": "all_scopes",
									"value": "true",
									"description": "Clear muting across all scopes. Default is `false`."
								}
							],
							"variable": [
								{
									"key": "monitor_id",
									"value": "34312785",
									"description": "(Required) The id of the monitor"
								}
							]
						},
						"description": "Unmute the specified monitor."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "all_scopes",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "all_scopes",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "all_scopes",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Monitor Not Found error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monitor/:monitor_id/unmute?scope=role:db&all_scopes=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monitor",
										":monitor_id",
										"unmute"
									],
									"query": [
										{
											"key": "scope",
											"value": "role:db"
										},
										{
											"key": "all_scopes",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "monitor_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Mute all monitors",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/monitor/mute_all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"monitor",
								"mute_all"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Muting prevents all monitors from notifying through email and posts to the\n[event stream](https://docs.datadoghq.com/events).\nState changes are only visible by checking the alert page."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/mute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"mute_all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"metric alert\",\n \"query\": \"avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100\",\n \"created\": \"1952-10-08T08:24:25.122Z\",\n \"creator\": {\n  \"email\": \"eu officia \",\n  \"handle\": \"adipisicing mollit nisi do reprehenderit\",\n  \"name\": \"in officia\"\n },\n \"deleted\": \"1953-02-22T05:51:29.416Z\",\n \"id\": 40785882,\n \"message\": \"do Excepteur\",\n \"modified\": \"1970-07-28T17:19:17.143Z\",\n \"multi\": false,\n \"name\": \"voluptate ut\",\n \"options\": {\n  \"aggregation\": {\n   \"group_by\": \"host\",\n   \"metric\": \"metrics.name\",\n   \"type\": \"count\"\n  },\n  \"device_ids\": [\n   \"firefox.laptop_large\",\n   \"chrome.laptop_large\"\n  ],\n  \"enable_logs_sample\": true,\n  \"escalation_message\": \"none\",\n  \"evaluation_delay\": 92300819,\n  \"groupby_simple_monitor\": true,\n  \"include_tags\": true,\n  \"locked\": true,\n  \"min_failure_duration\": 0,\n  \"min_location_failed\": 1,\n  \"new_group_delay\": 50956888,\n  \"new_host_delay\": 300,\n  \"no_data_timeframe\": -73003149,\n  \"notify_audit\": false,\n  \"notify_no_data\": false,\n  \"renotify_interval\": \"none\",\n  \"require_full_window\": false,\n  \"silenced\": {},\n  \"synthetics_check_id\": \"labore ut Lorem ipsum laboris\",\n  \"threshold_windows\": {\n   \"recovery_window\": \"voluptate elit ipsum\",\n   \"trigger_window\": \"Excepteur amet Lorem\"\n  },\n  \"thresholds\": {\n   \"critical\": -18444032.464599535,\n   \"critical_recovery\": -97374191.25692694,\n   \"ok\": 82324274.42111921,\n   \"unknown\": 45131076.0250479,\n   \"warning\": 68543418.10054195,\n   \"warning_recovery\": -14072549.468074277\n  },\n  \"timeout_h\": \"none\"\n },\n \"overall_state\": \"Ignored\",\n \"priority\": 4,\n \"restricted_roles\": [\n  \"eiusmod velit consectetur\",\n  \"ut t\"\n ],\n \"state\": {\n  \"groups\": {}\n },\n \"tags\": [\n  \"Lorem non eu\",\n  \"dolor aliquip ipsum\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/mute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"mute_all"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/mute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"mute_all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Unmute all monitors",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/monitor/unmute_all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"monitor",
								"unmute_all"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Disables muting all monitors. Throws an error if mute all\nwas not enabled previously."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/unmute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"unmute_all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/unmute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"unmute_all"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/monitor/unmute_all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"monitor",
										"unmute_all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "[Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and\nnotifies your team when a defined threshold has exceeded.\n\nFor more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/monitor_types/)."
		},
		{
			"name": "Notebooks",
			"item": [
				{
					"name": "Get all notebooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks"
							],
							"query": [
								{
									"key": "author_handle",
									"value": "test@datadoghq.com",
									"description": "Return notebooks created by the given `author_handle`."
								},
								{
									"key": "exclude_author_handle",
									"value": "test@datadoghq.com",
									"description": "Return notebooks not created by the given `author_handle`."
								},
								{
									"key": "start",
									"value": "0",
									"description": "The index of the first notebook you want returned."
								},
								{
									"key": "count",
									"value": "5",
									"description": "The number of notebooks to be returned."
								},
								{
									"key": "sort_field",
									"value": "modified",
									"description": "Sort by field `modified` or `name`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Sort by direction `asc` or `desc`."
								},
								{
									"key": "query",
									"value": "postmortem",
									"description": "Return only notebooks with `query` string in notebook name or author handle."
								},
								{
									"key": "include_cells",
									"value": "false",
									"description": "Value of `false` excludes the `cells` and global `time` for each notebook."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all notebooks. This can also be used to search for notebooks with a particular `query` in the notebook\n`name` or author `handle`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "count",
											"value": "5"
										},
										{
											"key": "sort_field",
											"value": "modified"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "query",
											"value": "postmortem"
										},
										{
											"key": "include_cells",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"id\": 123456,\n   \"type\": \"notebooks\",\n   \"attributes\": {\n    \"name\": \"Example Notebook\",\n    \"author\": {\n     \"created_at\": \"1978-06-25T01:25:49.877Z\",\n     \"disabled\": true,\n     \"email\": \"sed\",\n     \"handle\": \"eu\",\n     \"icon\": \"nulla eiusmod tempor quis\",\n     \"name\": \"occaecat laboris\",\n     \"status\": \"exercitation\",\n     \"title\": \"ex sunt\",\n     \"verified\": true\n    },\n    \"cells\": [\n     {\n      \"id\": \"abcd1234\",\n      \"type\": \"notebook_cells\",\n      \"attributes\": {\n       \"definition\": {\n        \"type\": \"markdown\",\n        \"text\": \"# Example Header \\nexample content\"\n       }\n      }\n     },\n     {\n      \"id\": \"abcd1234\",\n      \"type\": \"notebook_cells\",\n      \"attributes\": {\n       \"definition\": {\n        \"type\": \"markdown\",\n        \"text\": \"# Example Header \\nexample content\"\n       }\n      }\n     }\n    ],\n    \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n    \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n    \"status\": \"published\",\n    \"time\": {\n     \"live_span\": \"1h\"\n    }\n   }\n  },\n  {\n   \"id\": 123456,\n   \"type\": \"notebooks\",\n   \"attributes\": {\n    \"name\": \"Example Notebook\",\n    \"author\": {\n     \"created_at\": \"1994-05-04T18:24:13.548Z\",\n     \"disabled\": false,\n     \"email\": \"pariatur mollit\",\n     \"handle\": \"id Excepteur fugiat aliqua ex\",\n     \"icon\": \"enim ut nisi\",\n     \"name\": \"ullamco pariatur\",\n     \"status\": \"enim sit minim non\",\n     \"title\": \"eu ullamco Lorem\",\n     \"verified\": true\n    },\n    \"cells\": [\n     {\n      \"id\": \"abcd1234\",\n      \"type\": \"notebook_cells\",\n      \"attributes\": {\n       \"definition\": {\n        \"type\": \"markdown\",\n        \"text\": \"# Example Header \\nexample content\"\n       }\n      }\n     },\n     {\n      \"id\": \"abcd1234\",\n      \"type\": \"notebook_cells\",\n      \"attributes\": {\n       \"definition\": {\n        \"type\": \"markdown\",\n        \"text\": \"# Example Header \\nexample content\"\n       }\n      }\n     }\n    ],\n    \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n    \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n    \"status\": \"published\",\n    \"time\": {\n     \"live_span\": \"1h\"\n    }\n   }\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -10288153,\n   \"total_filtered_count\": -68241859\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "count",
											"value": "5"
										},
										{
											"key": "sort_field",
											"value": "modified"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "query",
											"value": "postmortem"
										},
										{
											"key": "include_cells",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks?author_handle=test@datadoghq.com&exclude_author_handle=test@datadoghq.com&start=0&count=5&sort_field=modified&sort_dir=desc&query=postmortem&include_cells=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									],
									"query": [
										{
											"key": "author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "exclude_author_handle",
											"value": "test@datadoghq.com"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "count",
											"value": "5"
										},
										{
											"key": "sort_field",
											"value": "modified"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "query",
											"value": "postmortem"
										},
										{
											"key": "include_cells",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a notebook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"line\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"dog_classic\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a notebook using the specified options."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"line\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"dog_classic\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": 123456,\n  \"type\": \"notebooks\",\n  \"attributes\": {\n   \"cells\": [\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    },\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    }\n   ],\n   \"time\": {\n    \"live_span\": \"1h\"\n   },\n   \"name\": \"Example Notebook\",\n   \"author\": {\n    \"created_at\": \"1986-04-23T12:01:27.959Z\",\n    \"disabled\": true,\n    \"email\": \"ea irure\",\n    \"handle\": \"pariatur qui laboris tempor non\",\n    \"icon\": \"reprehenderit\",\n    \"name\": \"qui in Lorem ea\",\n    \"status\": \"irure qui exercit\",\n    \"title\": \"ex\",\n    \"verified\": true\n   },\n   \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n   \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n   \"status\": \"published\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"line\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"dog_classic\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"line\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"dog_classic\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a notebook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "notebook_id",
									"value": "34312785",
									"description": "(Required) Unique ID, assigned when you create the notebook."
								}
							]
						},
						"description": "Delete a notebook using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a notebook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "notebook_id",
									"value": "34312785",
									"description": "(Required) Unique ID, assigned when you create the notebook."
								}
							]
						},
						"description": "Get a notebook using the specified notebook ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": 123456,\n  \"type\": \"notebooks\",\n  \"attributes\": {\n   \"cells\": [\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    },\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    }\n   ],\n   \"time\": {\n    \"live_span\": \"1h\"\n   },\n   \"name\": \"Example Notebook\",\n   \"author\": {\n    \"created_at\": \"1986-04-23T12:01:27.959Z\",\n    \"disabled\": true,\n    \"email\": \"ea irure\",\n    \"handle\": \"pariatur qui laboris tempor non\",\n    \"icon\": \"reprehenderit\",\n    \"name\": \"qui in Lorem ea\",\n    \"status\": \"irure qui exercit\",\n    \"title\": \"ex\",\n    \"verified\": true\n   },\n   \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n   \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n   \"status\": \"published\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a notebook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"notebooks",
								":notebook_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "notebook_id",
									"value": "34312785",
									"description": "(Required) Unique ID, assigned when you create the notebook."
								}
							]
						},
						"description": "Update a notebook using the specified ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"id\": 123456,\n  \"type\": \"notebooks\",\n  \"attributes\": {\n   \"cells\": [\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    },\n    {\n     \"id\": \"abcd1234\",\n     \"type\": \"notebook_cells\",\n     \"attributes\": {\n      \"definition\": {\n       \"type\": \"markdown\",\n       \"text\": \"# Example Header \\nexample content\"\n      }\n     }\n    }\n   ],\n   \"time\": {\n    \"live_span\": \"1h\"\n   },\n   \"name\": \"Example Notebook\",\n   \"author\": {\n    \"created_at\": \"1986-04-23T12:01:27.959Z\",\n    \"disabled\": true,\n    \"email\": \"ea irure\",\n    \"handle\": \"pariatur qui laboris tempor non\",\n    \"icon\": \"reprehenderit\",\n    \"name\": \"qui in Lorem ea\",\n    \"status\": \"irure qui exercit\",\n    \"title\": \"ex\",\n    \"verified\": true\n   },\n   \"created\": \"2021-02-24T23:14:15.173964+00:00\",\n   \"modified\": \"2021-02-24T23:15:23.274966+00:00\",\n   \"status\": \"published\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"cells\": [\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"text\": \"## Some updated test markdown\\n\\nWith some example content.\",\n                            \"type\": \"markdown\"\n                        }\n                    },\n                    \"type\": \"notebook_cells\"\n                },\n                {\n                    \"attributes\": {\n                        \"definition\": {\n                            \"requests\": [\n                                {\n                                    \"display_type\": \"bars\",\n                                    \"q\": \"avg:system.load.1{*}\",\n                                    \"style\": {\n                                        \"line_type\": \"solid\",\n                                        \"line_width\": \"normal\",\n                                        \"palette\": \"warm\"\n                                    }\n                                }\n                            ],\n                            \"show_legend\": true,\n                            \"type\": \"timeseries\",\n                            \"yaxis\": {\n                                \"scale\": \"linear\"\n                            }\n                        },\n                        \"graph_size\": \"m\",\n                        \"split_by\": {\n                            \"keys\": [],\n                            \"tags\": []\n                        },\n                        \"time\": null\n                    },\n                    \"id\": \"abcd1234\",\n                    \"type\": \"notebook_cells\"\n                }\n            ],\n            \"name\": \"Example Notebook\",\n            \"time\": {\n                \"live_span\": \"1h\"\n            }\n        },\n        \"type\": \"notebooks\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/notebooks/:notebook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"notebooks",
										":notebook_id"
									],
									"variable": [
										{
											"key": "notebook_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Interact with your notebooks through the API to make it easier to organize, find, and\nshare all of your notebooks with your team and organization. For more information, see the\n[Notebooks documentation](https://docs.datadoghq.com/notebooks/)."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "List your managed organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List your managed organizations."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"orgs\": [\n  {\n   \"billing\": {\n    \"type\": \"parent_billing\"\n   },\n   \"created\": \"2019-09-26T17:28:28Z\",\n   \"description\": \"some description\",\n   \"name\": \"New child org\",\n   \"public_id\": \"abcdef12345\",\n   \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n     \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"st\",\n    \"saml_autocreate_users_domains\": {\n     \"domains\": [\n      \"example.com\",\n      \"example.com\"\n     ],\n     \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n     \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n     \"enabled\": false\n    }\n   },\n   \"subscription\": {\n    \"type\": \"pro\"\n   }\n  },\n  {\n   \"billing\": {\n    \"type\": \"parent_billing\"\n   },\n   \"created\": \"2019-09-26T17:28:28Z\",\n   \"description\": \"some description\",\n   \"name\": \"New child org\",\n   \"public_id\": \"abcdef12345\",\n   \"settings\": {\n    \"private_widget_share\": false,\n    \"saml\": {\n     \"enabled\": false\n    },\n    \"saml_autocreate_access_role\": \"st\",\n    \"saml_autocreate_users_domains\": {\n     \"domains\": [\n      \"example.com\",\n      \"example.com\"\n     ],\n     \"enabled\": false\n    },\n    \"saml_can_be_enabled\": false,\n    \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n    \"saml_idp_initiated_login\": {\n     \"enabled\": false\n    },\n    \"saml_idp_metadata_uploaded\": false,\n    \"saml_login_url\": \"https://my.saml.login.url\",\n    \"saml_strict_mode\": {\n     \"enabled\": false\n    }\n   },\n   \"subscription\": {\n    \"type\": \"pro\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a child organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New child org\",\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a child organization.\n\nThis endpoint requires the\n[multi-organization account](https://docs.datadoghq.com/account_management/multi_organization/)\nfeature and must be enabled by\n[contacting support](https://docs.datadoghq.com/help/).\n\nOnce a new child organization is created, you can interact with it\nby using the `org.public_id`, `api_key.key`, and\n`application_key.hash` provided in the response."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New child org\",\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"api_key\": {\n  \"created\": \"2019-08-02 15:31:07\",\n  \"created_by\": \"john@example.com\",\n  \"key\": \"1234512345123456abcabc912349abcd\",\n  \"name\": \"example user\"\n },\n \"application_key\": {\n  \"hash\": \"1234512345123459cda4eb9ced49a3d84fd0138c\",\n  \"name\": \"example user\",\n  \"owner\": \"example.com\"\n },\n \"org\": {\n  \"billing\": {\n   \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n   \"private_widget_share\": false,\n   \"saml\": {\n    \"enabled\": false\n   },\n   \"saml_autocreate_access_role\": \"st\",\n   \"saml_autocreate_users_domains\": {\n    \"domains\": [\n     \"example.com\",\n     \"example.com\"\n    ],\n    \"enabled\": false\n   },\n   \"saml_can_be_enabled\": false,\n   \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n   \"saml_idp_initiated_login\": {\n    \"enabled\": false\n   },\n   \"saml_idp_metadata_uploaded\": false,\n   \"saml_login_url\": \"https://my.saml.login.url\",\n   \"saml_strict_mode\": {\n    \"enabled\": false\n   }\n  },\n  \"subscription\": {\n   \"type\": \"pro\"\n  }\n },\n \"user\": {\n  \"access_role\": \"st\",\n  \"disabled\": false,\n  \"email\": \"test@datadoghq.com\",\n  \"handle\": \"test@datadoghq.com\",\n  \"icon\": \"/path/to/matching/gravatar/icon\",\n  \"name\": \"test user\",\n  \"verified\": true\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New child org\",\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New child org\",\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get organization information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "abc123",
									"description": "(Required) The `public_id` of the organization you are operating within."
								}
							]
						},
						"description": "Get organization information."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"org\": {\n  \"billing\": {\n   \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n   \"private_widget_share\": false,\n   \"saml\": {\n    \"enabled\": false\n   },\n   \"saml_autocreate_access_role\": \"st\",\n   \"saml_autocreate_users_domains\": {\n    \"domains\": [\n     \"example.com\",\n     \"example.com\"\n    ],\n    \"enabled\": false\n   },\n   \"saml_can_be_enabled\": false,\n   \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n   \"saml_idp_initiated_login\": {\n    \"enabled\": false\n   },\n   \"saml_idp_metadata_uploaded\": false,\n   \"saml_login_url\": \"https://my.saml.login.url\",\n   \"saml_strict_mode\": {\n    \"enabled\": false\n   }\n  },\n  \"subscription\": {\n   \"type\": \"pro\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update your organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"st\",\n        \"saml_autocreate_users_domains\": {\n            \"domains\": [\n                \"example.com\",\n                \"example.com\"\n            ],\n            \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        }\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "abc123",
									"description": "(Required) The `public_id` of the organization you are operating within."
								}
							]
						},
						"description": "Update your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"st\",\n        \"saml_autocreate_users_domains\": {\n            \"domains\": [\n                \"example.com\",\n                \"example.com\"\n            ],\n            \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        }\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"org\": {\n  \"billing\": {\n   \"type\": \"parent_billing\"\n  },\n  \"created\": \"2019-09-26T17:28:28Z\",\n  \"description\": \"some description\",\n  \"name\": \"New child org\",\n  \"public_id\": \"abcdef12345\",\n  \"settings\": {\n   \"private_widget_share\": false,\n   \"saml\": {\n    \"enabled\": false\n   },\n   \"saml_autocreate_access_role\": \"st\",\n   \"saml_autocreate_users_domains\": {\n    \"domains\": [\n     \"example.com\",\n     \"example.com\"\n    ],\n    \"enabled\": false\n   },\n   \"saml_can_be_enabled\": false,\n   \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n   \"saml_idp_initiated_login\": {\n    \"enabled\": false\n   },\n   \"saml_idp_metadata_uploaded\": false,\n   \"saml_login_url\": \"https://my.saml.login.url\",\n   \"saml_strict_mode\": {\n    \"enabled\": false\n   }\n  },\n  \"subscription\": {\n   \"type\": \"pro\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"st\",\n        \"saml_autocreate_users_domains\": {\n            \"domains\": [\n                \"example.com\",\n                \"example.com\"\n            ],\n            \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        }\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing\": {\n        \"type\": \"parent_billing\"\n    },\n    \"description\": \"some description\",\n    \"name\": \"New child org\",\n    \"public_id\": \"abcdef12345\",\n    \"settings\": {\n        \"private_widget_share\": false,\n        \"saml\": {\n            \"enabled\": false\n        },\n        \"saml_autocreate_access_role\": \"st\",\n        \"saml_autocreate_users_domains\": {\n            \"domains\": [\n                \"example.com\",\n                \"example.com\"\n            ],\n            \"enabled\": false\n        },\n        \"saml_can_be_enabled\": false,\n        \"saml_idp_endpoint\": \"https://my.saml.endpoint\",\n        \"saml_idp_initiated_login\": {\n            \"enabled\": false\n        },\n        \"saml_idp_metadata_uploaded\": false,\n        \"saml_login_url\": \"https://my.saml.login.url\",\n        \"saml_strict_mode\": {\n            \"enabled\": false\n        }\n    },\n    \"subscription\": {\n        \"type\": \"pro\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Upload IdP metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "idp_file",
									"value": "",
									"description": "(Required) The path to the XML metadata file you wish to upload.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/org/:public_id/idp_metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"org",
								":public_id",
								"idp_metadata"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "abc123",
									"description": "(Required) The `public_id` of the organization you are operating with"
								}
							]
						},
						"description": "There are a couple of options for updating the Identity Provider (IdP)\nmetadata from your SAML IdP.\n\n* **Multipart Form-Data**: Post the IdP metadata file using a form post.\n\n* **XML Body:** Post the IdP metadata file as the body of the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "",
											"description": "(Required) The path to the XML metadata file you wish to upload.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"idp_metadata"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"IdP metadata successfully uploaded for example org\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "",
											"description": "(Required) The path to the XML metadata file you wish to upload.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"idp_metadata"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "",
											"description": "(Required) The path to the XML metadata file you wish to upload.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"idp_metadata"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unsupported Media Type",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "idp_file",
											"value": "",
											"description": "(Required) The path to the XML metadata file you wish to upload.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/org/:public_id/idp_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"org",
										":public_id",
										"idp_metadata"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization)."
		},
		{
			"name": "Processes",
			"item": [
				{
					"name": "Get all processes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=<string>&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"processes"
							],
							"query": [
								{
									"key": "search",
									"value": "<string>",
									"description": "String to search processes by."
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "Comma-separated list of tags to filter processes by."
								},
								{
									"key": "from",
									"value": "<long>",
									"description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
								},
								{
									"key": "to",
									"value": "<long>",
									"description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
								},
								{
									"key": "page[limit]",
									"value": "1000",
									"description": "Maximum number of results returned."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all processes for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=account:prod,user:admin&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "account:prod,user:admin"
										},
										{
											"key": "from",
											"value": "<long>"
										},
										{
											"key": "to",
											"value": "<long>"
										},
										{
											"key": "page[limit]",
											"value": "1000"
										},
										{
											"key": "page[cursor]",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"cmdline\": \"eu enim Lorem sint\",\n    \"host\": \"in qui et irure\",\n    \"pid\": -66365866,\n    \"ppid\": -63992567,\n    \"start\": \"veniam aliqua\",\n    \"tags\": [\n     \"sed ex velit\",\n     \"deserunt quis Excepteur nostrud\"\n    ],\n    \"timestamp\": \"dolor qui laborum Lorem culpa\",\n    \"user\": \"Ut laboris\"\n   },\n   \"id\": \"in sunt ullamco est\",\n   \"type\": \"process\"\n  },\n  {\n   \"attributes\": {\n    \"cmdline\": \"voluptate velit eiusmod aliqua\",\n    \"host\": \"ea occaecat deserunt consequat aute\",\n    \"pid\": 94289111,\n    \"ppid\": -36692948,\n    \"start\": \"adipisicing consequat\",\n    \"tags\": [\n     \"dolor in ut\",\n     \"sint aute dolor\"\n    ],\n    \"timestamp\": \"mollit dolor anim ex\",\n    \"user\": \"incididunt id sed\"\n   },\n   \"id\": \"consequat\",\n   \"type\": \"process\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"after\": \"911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd\",\n   \"size\": 3077\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=account:prod,user:admin&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "account:prod,user:admin"
										},
										{
											"key": "from",
											"value": "<long>"
										},
										{
											"key": "to",
											"value": "<long>"
										},
										{
											"key": "page[limit]",
											"value": "1000"
										},
										{
											"key": "page[cursor]",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/processes?search=<string>&tags=account:prod,user:admin&from=<long>&to=<long>&page[limit]=1000&page[cursor]=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"processes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "account:prod,user:admin"
										},
										{
											"key": "from",
											"value": "<long>"
										},
										{
											"key": "to",
											"value": "<long>"
										},
										{
											"key": "page[limit]",
											"value": "1000"
										},
										{
											"key": "page[cursor]",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The processes API allows you to query processes data for your organization."
		},
		{
			"name": "PagerDuty Integration",
			"item": [
				{
					"name": "Create a new service object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_name\": \"\",\n    \"service_key\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a new service object in the PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_name\": \"\",\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"service_name\": \"\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_name\": \"\",\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_name\": \"\",\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a single service object",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The service name"
								}
							]
						},
						"description": "Delete a single service object in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a single service object",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The service name."
								}
							]
						},
						"description": "Get service name in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"service_name\": \"\"\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a single service object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_key\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"pagerduty",
								"configuration",
								"services",
								":service_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The service name"
								}
							]
						},
						"description": "Update a single service object in the Datadog-PagerDuty integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_key\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/pagerduty/configuration/services/:service_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"pagerduty",
										"configuration",
										"services",
										":service_name"
									],
									"variable": [
										{
											"key": "service_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your [Datadog-PagerDuty integration](https://docs.datadoghq.com/api/?lang=bash#integration-pagerduty)\ndirectly through the Datadog API."
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "List permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"permissions"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Returns a list of all permissions, including name, description, and ID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1964-02-28T05:49:09.870Z\",\n    \"description\": \"consequat eu\",\n    \"display_name\": \"id officia consequat minim\",\n    \"display_type\": \"est incididu\",\n    \"group_name\": \"fugiat consecte\",\n    \"name\": \"id consequat consectetur\",\n    \"restricted\": true\n   },\n   \"id\": \"nisi laboris voluptate culpa\"\n  },\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1979-06-06T14:36:30.849Z\",\n    \"description\": \"eu \",\n    \"display_name\": \"quis\",\n    \"display_type\": \"aute Ut cillum \",\n    \"group_name\": \"\",\n    \"name\": \"mollit et voluptate\",\n    \"restricted\": false\n   },\n   \"id\": \"labor\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Sort roles depending on the given field. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign, for example:\n`sort=-name`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all roles by the given string."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Returns all roles, including their names and IDs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"roles\",\n   \"attributes\": {\n    \"created_at\": \"1969-01-03T12:32:30.705Z\",\n    \"modified_at\": \"1978-01-22T03:32:31.620Z\",\n    \"name\": \"in\",\n    \"user_count\": -69929265\n   },\n   \"id\": \"veniam eiusmod qui sunt\",\n   \"relationships\": {\n    \"permissions\": {\n     \"data\": [\n      {\n       \"id\": \"Ut ullamco dolore\",\n       \"type\": \"permissions\"\n      },\n      {\n       \"id\": \"nulla Duis enim Lorem qui\",\n       \"type\": \"permissions\"\n      }\n     ]\n    }\n   }\n  },\n  {\n   \"type\": \"roles\",\n   \"attributes\": {\n    \"created_at\": \"1974-05-10T15:34:07.046Z\",\n    \"modified_at\": \"1945-05-10T02:11:23.769Z\",\n    \"name\": \"nulla consectetur amet minim\",\n    \"user_count\": -21771709\n   },\n   \"id\": \"proident aliqua esse elit\",\n   \"relationships\": {\n    \"permissions\": {\n     \"data\": [\n      {\n       \"id\": \"et nostrud\",\n       \"type\": \"permissions\"\n      },\n      {\n       \"id\": \"eiusmod veniam\",\n       \"type\": \"permissions\"\n      }\n     ]\n    }\n   }\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": 85869896,\n   \"total_filtered_count\": -65000067\n  }\n }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"relationships\": {\n            \"permissions\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    }\n                ]\n            },\n            \"users\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"users\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"users\"\n                    }\n                ]\n            }\n        },\n        \"type\": \"roles\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a new role for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"developers\"\n        },\n        \"relationships\": {\n            \"permissions\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    }\n                ]\n            },\n            \"users\": {\n                \"data\": []\n            }\n        },\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"roles\",\n  \"attributes\": {\n   \"name\": \"developers\",\n   \"created_at\": \"1947-05-23T15:11:13.914Z\",\n   \"modified_at\": \"1984-08-31T20:17:02.946Z\"\n  },\n  \"id\": \"anim nulla Duis in ut\",\n  \"relationships\": {\n   \"permissions\": {\n    \"data\": [\n     {\n      \"id\": \"dolore id non\",\n      \"type\": \"permissions\"\n     },\n     {\n      \"id\": \"in dolore cillum id\",\n      \"type\": \"permissions\"\n     }\n    ]\n   }\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"developers\"\n        },\n        \"relationships\": {\n            \"permissions\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    }\n                ]\n            },\n            \"users\": {\n                \"data\": []\n            }\n        },\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"developers\"\n        },\n        \"relationships\": {\n            \"permissions\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"permissions\"\n                    }\n                ]\n            },\n            \"users\": {\n                \"data\": []\n            }\n        },\n        \"type\": \"roles\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Disables a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Get a role in the organization specified by the role’s `role_id`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"roles\",\n  \"attributes\": {\n   \"created_at\": \"1950-12-17T07:39:26.097Z\",\n   \"modified_at\": \"2011-02-24T19:43:29.830Z\",\n   \"name\": \"reprehenderit ex qui elit\",\n   \"user_count\": 10916339\n  },\n  \"id\": \"Duis labore sint cillum qui\",\n  \"relationships\": {\n   \"permissions\": {\n    \"data\": [\n     {\n      \"id\": \"in ex velit sint elit\",\n      \"type\": \"permissions\"\n     },\n     {\n      \"id\": \"labore exercitation in\",\n      \"type\": \"permissions\"\n     }\n    ]\n   }\n  }\n }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Edit a role. Can only be used with application keys belonging to administrators."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"type\": \"roles\",\n  \"attributes\": {\n   \"created_at\": \"1992-03-26T02:25:58.181Z\",\n   \"modified_at\": \"1952-06-01T22:34:30.066Z\",\n   \"name\": \"exercitation elit amet magna laborum\"\n  },\n  \"id\": \"proident dolore in qui\",\n  \"relationships\": {\n   \"permissions\": {\n    \"data\": [\n     {\n      \"id\": \"do deserunt dolore irure exercitation\",\n      \"type\": \"permissions\"\n     },\n     {\n      \"id\": \"cillum culpa aliqua\",\n      \"type\": \"permissions\"\n     }\n    ]\n   }\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"roles\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke permission",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Removes a permission from a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1964-02-28T05:49:09.870Z\",\n    \"description\": \"consequat eu\",\n    \"display_name\": \"id officia consequat minim\",\n    \"display_type\": \"est incididu\",\n    \"group_name\": \"fugiat consecte\",\n    \"name\": \"id consequat consectetur\",\n    \"restricted\": true\n   },\n   \"id\": \"nisi laboris voluptate culpa\"\n  },\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1979-06-06T14:36:30.849Z\",\n    \"description\": \"eu \",\n    \"display_name\": \"quis\",\n    \"display_type\": \"aute Ut cillum \",\n    \"group_name\": \"\",\n    \"name\": \"mollit et voluptate\",\n    \"restricted\": false\n   },\n   \"id\": \"labor\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List permissions for a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Returns a list of all permissions for a single role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1964-02-28T05:49:09.870Z\",\n    \"description\": \"consequat eu\",\n    \"display_name\": \"id officia consequat minim\",\n    \"display_type\": \"est incididu\",\n    \"group_name\": \"fugiat consecte\",\n    \"name\": \"id consequat consectetur\",\n    \"restricted\": true\n   },\n   \"id\": \"nisi laboris voluptate culpa\"\n  },\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1979-06-06T14:36:30.849Z\",\n    \"description\": \"eu \",\n    \"display_name\": \"quis\",\n    \"display_type\": \"aute Ut cillum \",\n    \"group_name\": \"\",\n    \"name\": \"mollit et voluptate\",\n    \"restricted\": false\n   },\n   \"id\": \"labor\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Grant permission to a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"permissions"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Adds a permission to a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1964-02-28T05:49:09.870Z\",\n    \"description\": \"consequat eu\",\n    \"display_name\": \"id officia consequat minim\",\n    \"display_type\": \"est incididu\",\n    \"group_name\": \"fugiat consecte\",\n    \"name\": \"id consequat consectetur\",\n    \"restricted\": true\n   },\n   \"id\": \"nisi laboris voluptate culpa\"\n  },\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1979-06-06T14:36:30.849Z\",\n    \"description\": \"eu \",\n    \"display_name\": \"quis\",\n    \"display_type\": \"aute Ut cillum \",\n    \"group_name\": \"\",\n    \"name\": \"mollit et voluptate\",\n    \"restricted\": false\n   },\n   \"id\": \"labor\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"permissions\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"permissions"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Remove a user from a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"users\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Removes a user from a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1955-07-17T04:08:09.746Z\",\n    \"disabled\": false,\n    \"email\": \"laborum\",\n    \"handle\": \"ad dolor sint anim pariatur\",\n    \"icon\": \"aliqua sed nostrud mollit\",\n    \"modified_at\": \"1989-07-19T07:21:56.986Z\",\n    \"name\": \"ut Lorem magna et enim\",\n    \"service_account\": true,\n    \"status\": \"esse\",\n    \"title\": \"veniam id aliquip\",\n    \"verified\": false\n   },\n   \"id\": \"velit cillum nulla officia\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2005-01-14T11:17:16.656Z\",\n    \"disabled\": false,\n    \"email\": \"minim nostrud non sit\",\n    \"handle\": \"reprehenderit nisi\",\n    \"icon\": \"voluptate n\",\n    \"modified_at\": \"1974-02-23T08:27:26.053Z\",\n    \"name\": \"non laboris\",\n    \"service_account\": false,\n    \"status\": \"dolor\",\n    \"title\": \"nulla ex pariatur\",\n    \"verified\": true\n   },\n   \"id\": \"commodo dolor do ad labore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1964-03-23T17:28:03.615Z\",\n    \"description\": \"laborum id sed\",\n    \"disabled\": true,\n    \"modified_at\": \"1963-06-01T22:13:11.780Z\",\n    \"name\": \"cupidatat fugiat\",\n    \"public_id\": \"eu mollit et dolor\",\n    \"sharing\": \"ut amet nisi ut\",\n    \"url\": \"cupidatat dolor qui amet\"\n   },\n   \"id\": \"proident molli\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1948-01-12T02:59:02.337Z\",\n    \"description\": \"occaecat\",\n    \"disabled\": true,\n    \"modified_at\": \"1948-09-15T23:25:59.744Z\",\n    \"name\": \"eu irure Duis nis\",\n    \"public_id\": \"Excepteur\",\n    \"sharing\": \"et aute dolore ipsum\",\n    \"url\": \"Excepteur dolore\"\n   },\n   \"id\": \"ut\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -12086852,\n   \"total_filtered_count\": -5748609\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all users of a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "User attribute to order results by. Sort order is **ascending** by default.\nSort order is **descending** if the field is prefixed by a negative sign,\nfor example `sort=-name`. Options: `name`, `email`, `status`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all users by the given string. Defaults to no filtering."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Gets all users of a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1955-07-17T04:08:09.746Z\",\n    \"disabled\": false,\n    \"email\": \"laborum\",\n    \"handle\": \"ad dolor sint anim pariatur\",\n    \"icon\": \"aliqua sed nostrud mollit\",\n    \"modified_at\": \"1989-07-19T07:21:56.986Z\",\n    \"name\": \"ut Lorem magna et enim\",\n    \"service_account\": true,\n    \"status\": \"esse\",\n    \"title\": \"veniam id aliquip\",\n    \"verified\": false\n   },\n   \"id\": \"velit cillum nulla officia\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2005-01-14T11:17:16.656Z\",\n    \"disabled\": false,\n    \"email\": \"minim nostrud non sit\",\n    \"handle\": \"reprehenderit nisi\",\n    \"icon\": \"voluptate n\",\n    \"modified_at\": \"1974-02-23T08:27:26.053Z\",\n    \"name\": \"non laboris\",\n    \"service_account\": false,\n    \"status\": \"dolor\",\n    \"title\": \"nulla ex pariatur\",\n    \"verified\": true\n   },\n   \"id\": \"commodo dolor do ad labore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1964-03-23T17:28:03.615Z\",\n    \"description\": \"laborum id sed\",\n    \"disabled\": true,\n    \"modified_at\": \"1963-06-01T22:13:11.780Z\",\n    \"name\": \"cupidatat fugiat\",\n    \"public_id\": \"eu mollit et dolor\",\n    \"sharing\": \"ut amet nisi ut\",\n    \"url\": \"cupidatat dolor qui amet\"\n   },\n   \"id\": \"proident molli\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1948-01-12T02:59:02.337Z\",\n    \"description\": \"occaecat\",\n    \"disabled\": true,\n    \"modified_at\": \"1948-09-15T23:25:59.744Z\",\n    \"name\": \"eu irure Duis nis\",\n    \"public_id\": \"Excepteur\",\n    \"sharing\": \"et aute dolore ipsum\",\n    \"url\": \"Excepteur dolore\"\n   },\n   \"id\": \"ut\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -12086852,\n   \"total_filtered_count\": -5748609\n  }\n }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users?page[size]=10&page[number]=0&sort=name&filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Add a user to a role",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"<string>\",\n        \"type\": \"users\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"roles",
								":role_id",
								"users"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "role_id",
									"value": "<string>",
									"description": "(Required) The ID of the role."
								}
							]
						},
						"description": "Adds a user to a role."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1955-07-17T04:08:09.746Z\",\n    \"disabled\": false,\n    \"email\": \"laborum\",\n    \"handle\": \"ad dolor sint anim pariatur\",\n    \"icon\": \"aliqua sed nostrud mollit\",\n    \"modified_at\": \"1989-07-19T07:21:56.986Z\",\n    \"name\": \"ut Lorem magna et enim\",\n    \"service_account\": true,\n    \"status\": \"esse\",\n    \"title\": \"veniam id aliquip\",\n    \"verified\": false\n   },\n   \"id\": \"velit cillum nulla officia\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2005-01-14T11:17:16.656Z\",\n    \"disabled\": false,\n    \"email\": \"minim nostrud non sit\",\n    \"handle\": \"reprehenderit nisi\",\n    \"icon\": \"voluptate n\",\n    \"modified_at\": \"1974-02-23T08:27:26.053Z\",\n    \"name\": \"non laboris\",\n    \"service_account\": false,\n    \"status\": \"dolor\",\n    \"title\": \"nulla ex pariatur\",\n    \"verified\": true\n   },\n   \"id\": \"commodo dolor do ad labore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1964-03-23T17:28:03.615Z\",\n    \"description\": \"laborum id sed\",\n    \"disabled\": true,\n    \"modified_at\": \"1963-06-01T22:13:11.780Z\",\n    \"name\": \"cupidatat fugiat\",\n    \"public_id\": \"eu mollit et dolor\",\n    \"sharing\": \"ut amet nisi ut\",\n    \"url\": \"cupidatat dolor qui amet\"\n   },\n   \"id\": \"proident molli\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1948-01-12T02:59:02.337Z\",\n    \"description\": \"occaecat\",\n    \"disabled\": true,\n    \"modified_at\": \"1948-09-15T23:25:59.744Z\",\n    \"name\": \"eu irure Duis nis\",\n    \"public_id\": \"Excepteur\",\n    \"sharing\": \"et aute dolore ipsum\",\n    \"url\": \"Excepteur dolore\"\n   },\n   \"id\": \"ut\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -12086852,\n   \"total_filtered_count\": -5748609\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"type\": \"users\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/roles/:role_id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"roles",
										":role_id",
										"users"
									],
									"variable": [
										{
											"key": "role_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The Roles API is used to create and manage Datadog roles, what\n[global permissions](https://docs.datadoghq.com/account_management/rbac/)\nthey grant, and which users belong to them.\n\nPermissions related to specific account assets can be granted to roles\nin the Datadog application without using this API. For example, granting\nread access on a specific log index to a role can be done in Datadog from the\n[Pipelines page](https://app.datadoghq.com/logs/pipelines)."
		},
		{
			"name": "Security Monitoring",
			"item": [
				{
					"name": "Get all security filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of configured security filters with their definitions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"exclusion_filters\": [\n     {\n      \"name\": \"Exclude staging\",\n      \"query\": \"source:staging\"\n     },\n     {\n      \"name\": \"Exclude staging\",\n      \"query\": \"source:staging\"\n     }\n    ],\n    \"filtered_data_type\": \"logs\",\n    \"is_builtin\": false,\n    \"is_enabled\": false,\n    \"name\": \"Custom security filter\",\n    \"query\": \"service:api\",\n    \"version\": 1\n   },\n   \"id\": \"3dd-0uc-h1s\",\n   \"type\": \"security_filters\"\n  },\n  {\n   \"attributes\": {\n    \"exclusion_filters\": [\n     {\n      \"name\": \"Exclude staging\",\n      \"query\": \"source:staging\"\n     },\n     {\n      \"name\": \"Exclude staging\",\n      \"query\": \"source:staging\"\n     }\n    ],\n    \"filtered_data_type\": \"logs\",\n    \"is_builtin\": false,\n    \"is_enabled\": false,\n    \"name\": \"Custom security filter\",\n    \"query\": \"service:api\",\n    \"version\": 1\n   },\n   \"id\": \"3dd-0uc-h1s\",\n   \"type\": \"security_filters\"\n  }\n ],\n \"meta\": {\n  \"warning\": \"All the security filters are disabled. As a result, no logs are being analyzed.\"\n }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a security filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"<string>\",\n            \"query\": \"<string>\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"<string>\",\n                    \"query\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"query\": \"<string>\"\n                }\n            ],\n            \"filtered_data_type\": \"<string>\",\n            \"is_enabled\": \"<boolean>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a security filter.\n\nSee the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\nfor more examples."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"Exclude staging\",\n                    \"query\": \"source:staging\"\n                }\n            ],\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"exclusion_filters\": [\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    },\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    }\n   ],\n   \"filtered_data_type\": \"logs\",\n   \"is_builtin\": false,\n   \"is_enabled\": false,\n   \"name\": \"Custom security filter\",\n   \"query\": \"service:api\",\n   \"version\": 1\n  },\n  \"id\": \"3dd-0uc-h1s\",\n  \"type\": \"security_filters\"\n },\n \"meta\": {\n  \"warning\": \"All the security filters are disabled. As a result, no logs are being analyzed.\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"Exclude staging\",\n                    \"query\": \"source:staging\"\n                }\n            ],\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"Exclude staging\",\n                    \"query\": \"source:staging\"\n                }\n            ],\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"Exclude staging\",\n                    \"query\": \"source:staging\"\n                }\n            ],\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"Exclude staging\",\n                    \"query\": \"source:staging\"\n                }\n            ],\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a security filter",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "security_filter_id",
									"value": "<string>",
									"description": "(Required) The ID of the security filter."
								}
							]
						},
						"description": "Delete a specific security filter."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a security filter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "security_filter_id",
									"value": "<string>",
									"description": "(Required) The ID of the security filter."
								}
							]
						},
						"description": "Get the details of a specific security filter.\n\nSee the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)\nfor more examples."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"exclusion_filters\": [\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    },\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    }\n   ],\n   \"filtered_data_type\": \"logs\",\n   \"is_builtin\": false,\n   \"is_enabled\": false,\n   \"name\": \"Custom security filter\",\n   \"query\": \"service:api\",\n   \"version\": 1\n  },\n  \"id\": \"3dd-0uc-h1s\",\n  \"type\": \"security_filters\"\n },\n \"meta\": {\n  \"warning\": \"All the security filters are disabled. As a result, no logs are being analyzed.\"\n }\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a security filter",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"exclusion_filters\": [\n                {\n                    \"name\": \"<string>\",\n                    \"query\": \"<string>\"\n                },\n                {\n                    \"name\": \"<string>\",\n                    \"query\": \"<string>\"\n                }\n            ],\n            \"filtered_data_type\": \"<string>\",\n            \"is_enabled\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\",\n            \"version\": \"<integer>\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"configuration",
								"security_filters",
								":security_filter_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "security_filter_id",
									"value": "<string>",
									"description": "(Required) The ID of the security filter."
								}
							]
						},
						"description": "Update a specific security filter.\nReturns the security filter object when the request is successful."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"exclusion_filters\": [\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    },\n    {\n     \"name\": \"Exclude staging\",\n     \"query\": \"source:staging\"\n    }\n   ],\n   \"filtered_data_type\": \"logs\",\n   \"is_builtin\": false,\n   \"is_enabled\": false,\n   \"name\": \"Custom security filter\",\n   \"query\": \"service:api\",\n   \"version\": 1\n  },\n  \"id\": \"3dd-0uc-h1s\",\n  \"type\": \"security_filters\"\n },\n \"meta\": {\n  \"warning\": \"All the security filters are disabled. As a result, no logs are being analyzed.\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Concurrent Modification",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"security_filters\",\n        \"attributes\": {\n            \"filtered_data_type\": \"logs\",\n            \"is_enabled\": true,\n            \"name\": \"Custom security filter\",\n            \"query\": \"service:api\",\n            \"version\": 1\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/configuration/security_filters/:security_filter_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"configuration",
										"security_filters",
										":security_filter_id"
									],
									"variable": [
										{
											"key": "security_filter_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List rules",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "List rules."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"cases\": [\n    {\n     \"condition\": \"ex ad\",\n     \"name\": \"consequat\",\n     \"notifications\": [\n      \"Ut pariatur adipisicing\",\n      \"voluptate\"\n     ],\n     \"status\": \"critical\"\n    },\n    {\n     \"condition\": \"et qui\",\n     \"name\": \"ullamco culpa deserunt minim non\",\n     \"notifications\": [\n      \"aliqua ullamco voluptate\",\n      \"nostrud proident aute\"\n     ],\n     \"status\": \"critical\"\n    }\n   ],\n   \"createdAt\": -37609623,\n   \"creationAuthorId\": 5790581,\n   \"filters\": [\n    {\n     \"action\": \"suppress\",\n     \"query\": \"pariatur nostrud sit occaecat\"\n    },\n    {\n     \"action\": \"suppress\",\n     \"query\": \"dolore et\"\n    }\n   ],\n   \"hasExtendedTitle\": true,\n   \"id\": \"Excepteur occaecat Ut\",\n   \"isDefault\": true,\n   \"isDeleted\": true,\n   \"isEnabled\": false,\n   \"message\": \"dolor aliqua quis ea incididu\",\n   \"name\": \"laborum aliquip dolore\",\n   \"options\": {\n    \"detectionMethod\": \"threshold\",\n    \"evaluationWindow\": 600,\n    \"keepAlive\": 60,\n    \"maxSignalDuration\": 21600,\n    \"newValueOptions\": {\n     \"forgetAfter\": 2,\n     \"learningDuration\": 1\n    }\n   },\n   \"queries\": [\n    {\n     \"agentRule\": {\n      \"agentRuleId\": \"etc_shadow\",\n      \"expression\": \"dolore eiusmod et ad\"\n     },\n     \"aggregation\": \"max\",\n     \"distinctFields\": [\n      \"aliqua nostrud\",\n      \"eu proident nostrud dolor\"\n     ],\n     \"groupByFields\": [\n      \"ex irure consequat dolor\",\n      \"exercitation do ut\"\n     ],\n     \"metric\": \"enim\",\n     \"name\": \"ut occaecat\",\n     \"query\": \"non sed voluptate quis\"\n    },\n    {\n     \"agentRule\": {\n      \"agentRuleId\": \"etc_shadow\",\n      \"expression\": \"et pariatur irure cillum amet\"\n     },\n     \"aggregation\": \"count\",\n     \"distinctFields\": [\n      \"laboris aliqua consequat\",\n      \"nostrud dolor sed et\"\n     ],\n     \"groupByFields\": [\n      \"ullamco\",\n      \"ut id eu et\"\n     ],\n     \"metric\": \"enim in\",\n     \"name\": \"labore enim magna veniam consectetur\",\n     \"query\": \"incididunt ex\"\n    }\n   ],\n   \"tags\": [\n    \"commodo esse\",\n    \"ullamco exercitation\"\n   ],\n   \"type\": \"cloud_configuration\",\n   \"updateAuthorId\": 45892529,\n   \"version\": 97856247\n  },\n  {\n   \"cases\": [\n    {\n     \"condition\": \"ullamco do\",\n     \"name\": \"voluptate\",\n     \"notifications\": [\n      \"in reprehenderit elit pariatur velit\",\n      \"ex Duis Ut anim\"\n     ],\n     \"status\": \"critical\"\n    },\n    {\n     \"condition\": \"labore ut conseq\",\n     \"name\": \"velit sunt irure\",\n     \"notifications\": [\n      \"sit mollit dolore ex\",\n      \"ut adipisicing pariatur\"\n     ],\n     \"status\": \"critical\"\n    }\n   ],\n   \"createdAt\": -72190087,\n   \"creationAuthorId\": 5303289,\n   \"filters\": [\n    {\n     \"action\": \"suppress\",\n     \"query\": \"dolor Excepteur do elit\"\n    },\n    {\n     \"action\": \"require\",\n     \"query\": \"et Ut\"\n    }\n   ],\n   \"hasExtendedTitle\": false,\n   \"id\": \"quis\",\n   \"isDefault\": false,\n   \"isDeleted\": true,\n   \"isEnabled\": false,\n   \"message\": \"mollit elit ullamco sed\",\n   \"name\": \"sed deserunt\",\n   \"options\": {\n    \"detectionMethod\": \"anomaly_detection\",\n    \"evaluationWindow\": 7200,\n    \"keepAlive\": 60,\n    \"maxSignalDuration\": 7200,\n    \"newValueOptions\": {\n     \"forgetAfter\": 21,\n     \"learningDuration\": 1\n    }\n   },\n   \"queries\": [\n    {\n     \"agentRule\": {\n      \"agentRuleId\": \"etc_shadow\",\n      \"expression\": \"exercitation irure Ut\"\n     },\n     \"aggregation\": \"count\",\n     \"distinctFields\": [\n      \"al\",\n      \"deserunt ut nisi\"\n     ],\n     \"groupByFields\": [\n      \"esse sed in\",\n      \"cillum\"\n     ],\n     \"metric\": \"eiusmod\",\n     \"name\": \"cupidatat eiusmod\",\n     \"query\": \"et adipisicing incididunt deserunt\"\n    },\n    {\n     \"agentRule\": {\n      \"agentRuleId\": \"etc_shadow\",\n      \"expression\": \"ad sunt\"\n     },\n     \"aggregation\": \"count\",\n     \"distinctFields\": [\n      \"enim eu dolore dolor aliqua\",\n      \"est sunt enim aute\"\n     ],\n     \"groupByFields\": [\n      \"nisi sit ex labore sint\",\n      \"occaecat velit a\"\n     ],\n     \"metric\": \"reprehenderit id ullamco\",\n     \"name\": \"sint ex eiusmod dolor\",\n     \"query\": \"id do reprehenderit Ut\"\n    }\n   ],\n   \"tags\": [\n    \"pariatur irure\",\n    \"nisi Lorem elit\"\n   ],\n   \"type\": \"log_detection\",\n   \"updateAuthorId\": -99454414,\n   \"version\": -34819354\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": 70980590,\n   \"total_filtered_count\": -85035118\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules?page[size]=10&page[number]=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a detection rule",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"queries\": [\n        {\n            \"query\": \"<string>\",\n            \"agentRule\": {\n                \"agentRuleId\": \"<string>\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"query\": \"<string>\",\n            \"agentRule\": {\n                \"agentRuleId\": \"<string>\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"cases\": [\n        {\n            \"status\": \"<string>\",\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"status\": \"<string>\",\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"message\": \"<string>\",\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": \"<boolean>\",\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a detection rule."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My security monitoring rule.\",\n    \"isEnabled\": true,\n    \"queries\": [],\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"cases\": [],\n    \"message\": \"\",\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"tags\": [\n        \"env:prod\",\n        \"team:security\"\n    ],\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"cases\": [\n  {\n   \"condition\": \"anim deserunt eu quis\",\n   \"name\": \"velit fugiat est reprehenderit\",\n   \"notifications\": [\n    \"officia\",\n    \"id do Ut sint\"\n   ],\n   \"status\": \"critical\"\n  },\n  {\n   \"condition\": \"officia Duis laborum\",\n   \"name\": \"magna aute reprehenderit\",\n   \"notifications\": [\n    \"proident minim anim\",\n    \"sint Lorem\"\n   ],\n   \"status\": \"critical\"\n  }\n ],\n \"createdAt\": -63649776,\n \"creationAuthorId\": 12724811,\n \"filters\": [\n  {\n   \"action\": \"require\",\n   \"query\": \"consectetur culpa Ut\"\n  },\n  {\n   \"action\": \"suppress\",\n   \"query\": \"Ut laboris\"\n  }\n ],\n \"hasExtendedTitle\": true,\n \"id\": \"officia et\",\n \"isDefault\": false,\n \"isDeleted\": true,\n \"isEnabled\": false,\n \"message\": \"esse non Duis exercitation\",\n \"name\": \"ut\",\n \"options\": {\n  \"detectionMethod\": \"new_value\",\n  \"evaluationWindow\": 1800,\n  \"keepAlive\": 0,\n  \"maxSignalDuration\": 60,\n  \"newValueOptions\": {\n   \"forgetAfter\": 7,\n   \"learningDuration\": 1\n  }\n },\n \"queries\": [\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"nulla sit\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"enim Ut et est \",\n    \"do eu\"\n   ],\n   \"groupByFields\": [\n    \"dolore Lorem\",\n    \"nostrud in\"\n   ],\n   \"metric\": \"adipisicing esse minim\",\n   \"name\": \"culpa laborum non\",\n   \"query\": \"dolor ut\"\n  },\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"consequat pariatur\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"magna ipsum commodo\",\n    \"occaecat officia \"\n   ],\n   \"groupByFields\": [\n    \"non proident commodo\",\n    \"pariatur cupidat\"\n   ],\n   \"metric\": \"sunt nisi incididunt sint\",\n   \"name\": \"in irure\",\n   \"query\": \"dolore adipisicing voluptate\"\n  }\n ],\n \"tags\": [\n  \"sunt ut\",\n  \"proident magna\"\n ],\n \"type\": \"cloud_configuration\",\n \"updateAuthorId\": -10535085,\n \"version\": 78478136\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My security monitoring rule.\",\n    \"isEnabled\": true,\n    \"queries\": [],\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"cases\": [],\n    \"message\": \"\",\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"tags\": [\n        \"env:prod\",\n        \"team:security\"\n    ],\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"My security monitoring rule.\",\n    \"isEnabled\": true,\n    \"queries\": [],\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"cases\": [],\n    \"message\": \"\",\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"tags\": [\n        \"env:prod\",\n        \"team:security\"\n    ],\n    \"type\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an existing rule",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "rule_id",
									"value": "<string>",
									"description": "(Required) The ID of the rule."
								}
							]
						},
						"description": "Delete an existing rule. Default rules cannot be deleted."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a rule's details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "rule_id",
									"value": "<string>",
									"description": "(Required) The ID of the rule."
								}
							]
						},
						"description": "Get a rule's details."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"cases\": [\n  {\n   \"condition\": \"anim deserunt eu quis\",\n   \"name\": \"velit fugiat est reprehenderit\",\n   \"notifications\": [\n    \"officia\",\n    \"id do Ut sint\"\n   ],\n   \"status\": \"critical\"\n  },\n  {\n   \"condition\": \"officia Duis laborum\",\n   \"name\": \"magna aute reprehenderit\",\n   \"notifications\": [\n    \"proident minim anim\",\n    \"sint Lorem\"\n   ],\n   \"status\": \"critical\"\n  }\n ],\n \"createdAt\": -63649776,\n \"creationAuthorId\": 12724811,\n \"filters\": [\n  {\n   \"action\": \"require\",\n   \"query\": \"consectetur culpa Ut\"\n  },\n  {\n   \"action\": \"suppress\",\n   \"query\": \"Ut laboris\"\n  }\n ],\n \"hasExtendedTitle\": true,\n \"id\": \"officia et\",\n \"isDefault\": false,\n \"isDeleted\": true,\n \"isEnabled\": false,\n \"message\": \"esse non Duis exercitation\",\n \"name\": \"ut\",\n \"options\": {\n  \"detectionMethod\": \"new_value\",\n  \"evaluationWindow\": 1800,\n  \"keepAlive\": 0,\n  \"maxSignalDuration\": 60,\n  \"newValueOptions\": {\n   \"forgetAfter\": 7,\n   \"learningDuration\": 1\n  }\n },\n \"queries\": [\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"nulla sit\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"enim Ut et est \",\n    \"do eu\"\n   ],\n   \"groupByFields\": [\n    \"dolore Lorem\",\n    \"nostrud in\"\n   ],\n   \"metric\": \"adipisicing esse minim\",\n   \"name\": \"culpa laborum non\",\n   \"query\": \"dolor ut\"\n  },\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"consequat pariatur\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"magna ipsum commodo\",\n    \"occaecat officia \"\n   ],\n   \"groupByFields\": [\n    \"non proident commodo\",\n    \"pariatur cupidat\"\n   ],\n   \"metric\": \"sunt nisi incididunt sint\",\n   \"name\": \"in irure\",\n   \"query\": \"dolore adipisicing voluptate\"\n  }\n ],\n \"tags\": [\n  \"sunt ut\",\n  \"proident magna\"\n ],\n \"type\": \"cloud_configuration\",\n \"updateAuthorId\": -10535085,\n \"version\": 78478136\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an existing rule",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"<string>\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"<string>\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": \"<boolean>\",\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"<string>\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"<string>\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"rules",
								":rule_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "rule_id",
									"value": "<string>",
									"description": "(Required) The ID of the rule."
								}
							]
						},
						"description": "Update an existing rule. When updating `cases`, `queries` or `options`, the whole field\nmust be included. For example, when modifying a query all queries must be included.\nDefault rules can only be updated to be enabled and to change notifications."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"cases\": [\n  {\n   \"condition\": \"anim deserunt eu quis\",\n   \"name\": \"velit fugiat est reprehenderit\",\n   \"notifications\": [\n    \"officia\",\n    \"id do Ut sint\"\n   ],\n   \"status\": \"critical\"\n  },\n  {\n   \"condition\": \"officia Duis laborum\",\n   \"name\": \"magna aute reprehenderit\",\n   \"notifications\": [\n    \"proident minim anim\",\n    \"sint Lorem\"\n   ],\n   \"status\": \"critical\"\n  }\n ],\n \"createdAt\": -63649776,\n \"creationAuthorId\": 12724811,\n \"filters\": [\n  {\n   \"action\": \"require\",\n   \"query\": \"consectetur culpa Ut\"\n  },\n  {\n   \"action\": \"suppress\",\n   \"query\": \"Ut laboris\"\n  }\n ],\n \"hasExtendedTitle\": true,\n \"id\": \"officia et\",\n \"isDefault\": false,\n \"isDeleted\": true,\n \"isEnabled\": false,\n \"message\": \"esse non Duis exercitation\",\n \"name\": \"ut\",\n \"options\": {\n  \"detectionMethod\": \"new_value\",\n  \"evaluationWindow\": 1800,\n  \"keepAlive\": 0,\n  \"maxSignalDuration\": 60,\n  \"newValueOptions\": {\n   \"forgetAfter\": 7,\n   \"learningDuration\": 1\n  }\n },\n \"queries\": [\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"nulla sit\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"enim Ut et est \",\n    \"do eu\"\n   ],\n   \"groupByFields\": [\n    \"dolore Lorem\",\n    \"nostrud in\"\n   ],\n   \"metric\": \"adipisicing esse minim\",\n   \"name\": \"culpa laborum non\",\n   \"query\": \"dolor ut\"\n  },\n  {\n   \"agentRule\": {\n    \"agentRuleId\": \"etc_shadow\",\n    \"expression\": \"consequat pariatur\"\n   },\n   \"aggregation\": \"max\",\n   \"distinctFields\": [\n    \"magna ipsum commodo\",\n    \"occaecat officia \"\n   ],\n   \"groupByFields\": [\n    \"non proident commodo\",\n    \"pariatur cupidat\"\n   ],\n   \"metric\": \"sunt nisi incididunt sint\",\n   \"name\": \"in irure\",\n   \"query\": \"dolore adipisicing voluptate\"\n  }\n ],\n \"tags\": [\n  \"sunt ut\",\n  \"proident magna\"\n ],\n \"type\": \"cloud_configuration\",\n \"updateAuthorId\": -10535085,\n \"version\": 78478136\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Concurrent Modification",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cases\": [\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        },\n        {\n            \"condition\": \"<string>\",\n            \"name\": \"<string>\",\n            \"notifications\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"status\": \"critical\"\n        }\n    ],\n    \"filters\": [\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"action\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"hasExtendedTitle\": true,\n    \"isEnabled\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"name\": \"<string>\",\n    \"options\": {\n        \"detectionMethod\": \"<string>\",\n        \"evaluationWindow\": \"<integer>\",\n        \"keepAlive\": \"<integer>\",\n        \"maxSignalDuration\": \"<integer>\",\n        \"newValueOptions\": {\n            \"forgetAfter\": \"<integer>\",\n            \"learningDuration\": \"<integer>\"\n        }\n    },\n    \"queries\": [\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        },\n        {\n            \"agentRule\": {\n                \"agentRuleId\": \"etc_shadow\",\n                \"expression\": \"<string>\"\n            },\n            \"aggregation\": \"<string>\",\n            \"distinctFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"groupByFields\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"metric\": \"<string>\",\n            \"name\": \"<string>\",\n            \"query\": \"<string>\"\n        }\n    ],\n    \"tags\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/rules/:rule_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"rules",
										":rule_id"
									],
									"variable": [
										{
											"key": "rule_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a quick list of security signals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=<string>&filter[from]=<dateTime>&filter[to]=<dateTime>&sort=<string>&page[cursor]=<string>&page[limit]=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals"
							],
							"query": [
								{
									"key": "filter[query]",
									"value": "<string>",
									"description": "The search query for security signals."
								},
								{
									"key": "filter[from]",
									"value": "<dateTime>",
									"description": "The minimum timestamp for requested security signals."
								},
								{
									"key": "filter[to]",
									"value": "<dateTime>",
									"description": "The maximum timestamp for requested security signals."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "The order of the security signals in results."
								},
								{
									"key": "page[cursor]",
									"value": "<string>",
									"description": "A list of results using the cursor provided in the previous query."
								},
								{
									"key": "page[limit]",
									"value": "10",
									"description": "The maximum number of security signals in the response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "The list endpoint returns security signals that match a search query.\nBoth this endpoint and the POST endpoint can be used interchangeably when listing\nsecurity signals."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=security:attack status:high&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "security:attack status:high"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"workflow\": {\n      \"first_seen\": \"2020-06-23T14:46:01.000Z\",\n      \"last_seen\": \"2020-06-23T14:46:49.000Z\",\n      \"rule\": {\n       \"name\": \"Brute Force Attack Grouped By User \",\n       \"version\": 12\n      }\n     }\n    },\n    \"message\": \"Detect Account Take Over (ATO) through brute force attempts\",\n    \"tags\": {},\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"signal\"\n  },\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"workflow\": {\n      \"first_seen\": \"2020-06-23T14:46:01.000Z\",\n      \"last_seen\": \"2020-06-23T14:46:49.000Z\",\n      \"rule\": {\n       \"name\": \"Brute Force Attack Grouped By User \",\n       \"version\": 12\n      }\n     }\n    },\n    \"message\": \"Detect Account Take Over (ATO) through brute force attempts\",\n    \"tags\": {},\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"signal\"\n  }\n ],\n \"links\": {\n  \"next\": \"https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n },\n \"meta\": {\n  \"page\": {\n   \"after\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=security:attack status:high&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "security:attack status:high"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals?filter[query]=security:attack status:high&filter[from]=2019-01-02T09:42:36.320Z&filter[to]=2019-01-03T09:42:36.320Z&sort=<string>&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==&page[limit]=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals"
									],
									"query": [
										{
											"key": "filter[query]",
											"value": "security:attack status:high"
										},
										{
											"key": "filter[from]",
											"value": "2019-01-02T09:42:36.320Z"
										},
										{
											"key": "filter[to]",
											"value": "2019-01-03T09:42:36.320Z"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "page[cursor]",
											"value": "eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=="
										},
										{
											"key": "page[limit]",
											"value": "25"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a list of security signals",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": {\n        \"from\": \"<dateTime>\",\n        \"query\": \"<string>\",\n        \"to\": \"<dateTime>\"\n    },\n    \"page\": {\n        \"cursor\": \"<string>\",\n        \"limit\": 10\n    },\n    \"sort\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"security_monitoring",
								"signals",
								"search"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Returns security signals that match a search query.\nBoth this endpoint and the GET endpoint can be used interchangeably for listing\nsecurity signals."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"2019-01-02T09:42:36.320Z\",\n        \"query\": \"security:attack status:high\",\n        \"to\": \"2019-01-03T09:42:36.320Z\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"workflow\": {\n      \"first_seen\": \"2020-06-23T14:46:01.000Z\",\n      \"last_seen\": \"2020-06-23T14:46:49.000Z\",\n      \"rule\": {\n       \"name\": \"Brute Force Attack Grouped By User \",\n       \"version\": 12\n      }\n     }\n    },\n    \"message\": \"Detect Account Take Over (ATO) through brute force attempts\",\n    \"tags\": {},\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"signal\"\n  },\n  {\n   \"attributes\": {\n    \"attributes\": {\n     \"workflow\": {\n      \"first_seen\": \"2020-06-23T14:46:01.000Z\",\n      \"last_seen\": \"2020-06-23T14:46:49.000Z\",\n      \"rule\": {\n       \"name\": \"Brute Force Attack Grouped By User \",\n       \"version\": 12\n      }\n     }\n    },\n    \"message\": \"Detect Account Take Over (ATO) through brute force attempts\",\n    \"tags\": {},\n    \"timestamp\": \"2019-01-02T09:42:36.320Z\"\n   },\n   \"id\": \"AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA\",\n   \"type\": \"signal\"\n  }\n ],\n \"links\": {\n  \"next\": \"https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n },\n \"meta\": {\n  \"page\": {\n   \"after\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"2019-01-02T09:42:36.320Z\",\n        \"query\": \"security:attack status:high\",\n        \"to\": \"2019-01-03T09:42:36.320Z\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Authorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter\": {\n        \"from\": \"2019-01-02T09:42:36.320Z\",\n        \"query\": \"security:attack status:high\",\n        \"to\": \"2019-01-03T09:42:36.320Z\"\n    },\n    \"page\": {\n        \"cursor\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n        \"limit\": 25\n    },\n    \"sort\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/security_monitoring/signals/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"security_monitoring",
										"signals",
										"search"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Detection rules for generating signals and listing of generated\nsignals."
		},
		{
			"name": "Service Accounts",
			"item": [
				{
					"name": "List application keys for this service account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=<string>&filter[created_at][end]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "Application key attribute used to sort results. Sort order is ascending\nby default. In order to specify a descending sort, prefix the\nattribute with a minus sign."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter application keys by the specified string."
								},
								{
									"key": "filter[created_at][start]",
									"value": "<string>",
									"description": "Only include application keys created on or after the specified date."
								},
								{
									"key": "filter[created_at][end]",
									"value": "<string>",
									"description": "Only include application keys created on or before the specified date."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the service account."
								}
							]
						},
						"description": "List all application keys available for this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"minim veniam nisi qui\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2020-11-23T10:00:00.000Z\",\n    \"last4\": \"abcd\",\n    \"name\": \"Application Key for submitting metrics\"\n   },\n   \"id\": \"dolor elit dolor\",\n   \"relationships\": {\n    \"owned_by\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"users\"\n     }\n    }\n   },\n   \"type\": \"application_keys\"\n  }\n ],\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1991-01-04T04:30:24.554Z\",\n    \"disabled\": true,\n    \"email\": \"pariatur irure consequat adipisicing\",\n    \"handle\": \"esse minim anim Duis\",\n    \"icon\": \"eu\",\n    \"modified_at\": \"1971-02-03T11:36:41.813Z\",\n    \"name\": \"eu dolore voluptate\",\n    \"service_account\": false,\n    \"status\": \"ea\",\n    \"title\": \"non amet reprehenderit\",\n    \"verified\": true\n   },\n   \"id\": \"ex id\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1966-08-28T01:02:35.771Z\",\n    \"disabled\": true,\n    \"email\": \"minim est\",\n    \"handle\": \"ullamco tempor consectetur anim\",\n    \"icon\": \"sit nisi Ut adipisicing\",\n    \"modified_at\": \"1958-11-13T03:34:56.858Z\",\n    \"name\": \"aliqua dolore nostrud est exercitation\",\n    \"service_account\": false,\n    \"status\": \"magna incididunt fugiat sit\",\n    \"title\": \"tempor do\",\n    \"verified\": false\n   },\n   \"id\": \"voluptate nisi nulla aliquip\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys?page[size]=10&page[number]=0&sort=name&filter=<string>&filter[created_at][start]=2020-11-24T18:46:21+00:00&filter[created_at][end]=2020-11-24T18:46:21+00:00",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[created_at][start]",
											"value": "2020-11-24T18:46:21+00:00"
										},
										{
											"key": "filter[created_at][end]",
											"value": "2020-11-24T18:46:21+00:00"
										}
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an application key for this service account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the service account."
								}
							]
						},
						"description": "Create an application key for this service account."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"key\": \"enim\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"magna sint ut dolor deserunt\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1958-10-22T04:17:10.696Z\",\n    \"disabled\": false,\n    \"email\": \"cillum tempor dolore\",\n    \"handle\": \"est consectetur dolore\",\n    \"icon\": \"Duis in enim eu\",\n    \"modified_at\": \"1942-10-20T00:48:07.098Z\",\n    \"name\": \"id adipisicing nostrud in\",\n    \"service_account\": true,\n    \"status\": \"exer\",\n    \"title\": \"enim tempor\",\n    \"verified\": false\n   },\n   \"id\": \"Duis velit\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1941-12-18T23:56:45.831Z\",\n    \"disabled\": true,\n    \"email\": \"veniam sint velit\",\n    \"handle\": \"minim culpa qu\",\n    \"icon\": \"veniam\",\n    \"modified_at\": \"1987-05-25T01:46:19.939Z\",\n    \"name\": \"ex elit\",\n    \"service_account\": true,\n    \"status\": \"fugiat magna mollit\",\n    \"title\": \"offici\",\n    \"verified\": false\n   },\n   \"id\": \"ex ullamco\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys"
									],
									"variable": [
										{
											"key": "service_account_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an application key for this service account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the service account."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Delete an application key owned by this service account."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get one application key for this service account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the service account."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Get an application key owned by this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"ea cons\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2009-11-03T00:14:41.224Z\",\n    \"disabled\": true,\n    \"email\": \"dolore in\",\n    \"handle\": \"fugiat eiusmod est nulla occaecat\",\n    \"icon\": \"esse quis\",\n    \"modified_at\": \"1968-10-17T22:52:28.478Z\",\n    \"name\": \"occaecat mollit offic\",\n    \"service_account\": true,\n    \"status\": \"pariatur nulla fugiat\",\n    \"title\": \"qui anim\",\n    \"verified\": true\n   },\n   \"id\": \"sed anim ad Duis\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1991-11-26T07:12:13.522Z\",\n    \"disabled\": true,\n    \"email\": \"labore sit nostru\",\n    \"handle\": \"aliqua Lorem\",\n    \"icon\": \"anim\",\n    \"modified_at\": \"1966-09-27T03:35:36.270Z\",\n    \"name\": \"et cillum des\",\n    \"service_account\": true,\n    \"status\": \"ut\",\n    \"title\": \"nisi\",\n    \"verified\": false\n   },\n   \"id\": \"anim aute nisi veniam\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit an application key for this service account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"<string>\"\n        },\n        \"id\": \"<string>\",\n        \"type\": \"application_keys\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts",
								":service_account_id",
								"application_keys",
								":app_key_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service_account_id",
									"value": "<string>",
									"description": "(Required) The ID of the service account."
								},
								{
									"key": "app_key_id",
									"value": "<string>",
									"description": "(Required) The ID of the application key."
								}
							]
						},
						"description": "Edit an application key owned by this service account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"2020-11-23T10:00:00.000Z\",\n   \"last4\": \"abcd\",\n   \"name\": \"Application Key for submitting metrics\"\n  },\n  \"id\": \"ea cons\",\n  \"relationships\": {\n   \"owned_by\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"users\"\n    }\n   }\n  },\n  \"type\": \"application_keys\"\n },\n \"included\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2009-11-03T00:14:41.224Z\",\n    \"disabled\": true,\n    \"email\": \"dolore in\",\n    \"handle\": \"fugiat eiusmod est nulla occaecat\",\n    \"icon\": \"esse quis\",\n    \"modified_at\": \"1968-10-17T22:52:28.478Z\",\n    \"name\": \"occaecat mollit offic\",\n    \"service_account\": true,\n    \"status\": \"pariatur nulla fugiat\",\n    \"title\": \"qui anim\",\n    \"verified\": true\n   },\n   \"id\": \"sed anim ad Duis\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1991-11-26T07:12:13.522Z\",\n    \"disabled\": true,\n    \"email\": \"labore sit nostru\",\n    \"handle\": \"aliqua Lorem\",\n    \"icon\": \"anim\",\n    \"modified_at\": \"1966-09-27T03:35:36.270Z\",\n    \"name\": \"et cillum des\",\n    \"service_account\": true,\n    \"status\": \"ut\",\n    \"title\": \"nisi\",\n    \"verified\": false\n   },\n   \"id\": \"anim aute nisi veniam\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"name\": \"Application Key for submitting metrics\"\n        },\n        \"id\": \"00112233-4455-6677-8899-aabbccddeeff\",\n        \"type\": \"application_keys\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts/:service_account_id/application_keys/:app_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts",
										":service_account_id",
										"application_keys",
										":app_key_id"
									],
									"variable": [
										{
											"key": "service_account_id"
										},
										{
											"key": "app_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and disable service accounts."
		},
		{
			"name": "Service Checks",
			"item": [
				{
					"name": "Submit a Service Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -66604988\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -12459276\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/check_run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"check_run"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Submit a list of Service Checks.\n\n**Note**: A valid API key is required."
					},
					"response": [
						{
							"name": "Payload accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": 70939288\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -77579260\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"ok\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": 70939288\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -77579260\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": 70939288\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -77579260\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Request timeout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": 70939288\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -77579260\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Request Timeout",
							"code": 408,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Payload too large",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": 70939288\n    },\n    {\n        \"check\": \"app.ok\",\n        \"status\": 0,\n        \"tags\": [\n            \"environment:test\"\n        ],\n        \"host_name\": \"app.host1\",\n        \"message\": \"app is running\",\n        \"timestamp\": -77579260\n    }\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/check_run",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"check_run"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The service check endpoint allows you to post check statuses for use with monitors.\nService check messages are limited to 500 characters. If a check is posted with a message\ncontaining more than 500 characters, only the first 500 characters are displayed. Messages\nare limited for checks with a Critical or Warning status, they are dropped for checks with\nan OK status.\n\n- [Read more about Service Check monitors.][1]\n- [Read more about Process Check monitors.][2]\n- [Read more about Network Check monitors.][3]\n- [Read more about Custom Check monitors.][4]\n- [Read more about Service Check and status codes.][5]\n\n[1]: https://docs.datadoghq.com/monitors/monitor_types/host/?tab=checkalert\n[2]: https://docs.datadoghq.com/monitors/monitor_types/process_check/?tab=checkalert\n[3]: https://docs.datadoghq.com/monitors/monitor_types/network/?tab=checkalert\n[4]: https://docs.datadoghq.com/monitors/monitor_types/custom_check/?tab=checkalert\n[5]: https://docs.datadoghq.com/developers/service_checks/"
		},
		{
			"name": "Service Dependencies",
			"item": [
				{
					"name": "Get all APM service dependencies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/service_dependencies?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"service_dependencies"
							],
							"query": [
								{
									"key": "env",
									"value": "prod",
									"description": "(Required) Specify what APM environment to query service dependencies by."
								},
								{
									"key": "primary_tag",
									"value": "availability-zone:us1-east",
									"description": "Specify what primary tag to query service dependencies by."
								},
								{
									"key": "start",
									"value": "1588784247",
									"description": "Specify the start of the timeframe in epoch seconds to query for. (defaults to 1 hour before end parameter)"
								},
								{
									"key": "end",
									"value": "1588794247",
									"description": "Specify the end of the timeframe in epoch seconds to query for. (defaults to current time)"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get a list of services from APM and their dependencies. The services retrieved are filtered by environment and a\nprimary tag, if one is defined."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"servica_a\": {\n  \"calls\": [\n   \"service_b\",\n   \"service_c\"\n  ]\n },\n \"service_b\": {\n  \"calls\": [\n   \"service_o\"\n  ]\n },\n \"service_c\": {\n  \"calls\": [\n   \"service_o\"\n  ]\n },\n \"service_o\": {\n  \"calls\": []\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get one APM service's dependencies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/service_dependencies/:service?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"service_dependencies",
								":service"
							],
							"query": [
								{
									"key": "env",
									"value": "prod",
									"description": "(Required) Specify what APM environment to query service dependencies by."
								},
								{
									"key": "primary_tag",
									"value": "availability-zone:us1-east",
									"description": "Specify what primary tag to query service dependencies by."
								},
								{
									"key": "start",
									"value": "1588784247",
									"description": "Specify the start of the timeframe in epoch seconds to query for. (defaults to 1 hour before end parameter)"
								},
								{
									"key": "end",
									"value": "1588794247",
									"description": "Specify the end of the timeframe in epoch seconds to query for. (defaults to current time)"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "service",
									"value": "service-c",
									"description": "(Required) The name of the service go get dependencies for."
								}
							]
						},
						"description": "Get a specific service's immediate upstream and downstream services.\nThe services retrieved are filtered by environment and a primary tag, if one is defined."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies/:service?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies",
										":service"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									],
									"variable": [
										{
											"key": "service"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"called_by\": [\n  \"service-a\",\n  \"service-b\"\n ],\n \"calls\": [\n  \"service-d\",\n  \"service-e\"\n ],\n \"name\": \"service-c\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies/:service?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies",
										":service"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									],
									"variable": [
										{
											"key": "service"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/service_dependencies/:service?env=prod&primary_tag=availability-zone:us1-east&start=1588784247&end=1588794247",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"service_dependencies",
										":service"
									],
									"query": [
										{
											"key": "env",
											"value": "prod"
										},
										{
											"key": "primary_tag",
											"value": "availability-zone:us1-east"
										},
										{
											"key": "start",
											"value": "1588784247"
										},
										{
											"key": "end",
											"value": "1588794247"
										}
									],
									"variable": [
										{
											"key": "service"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "APM Service Map API. For more information, visit\nthe [services map documentation](https://docs.datadoghq.com/tracing/visualization/services_map/)."
		},
		{
			"name": "Service Level Objective Corrections",
			"item": [
				{
					"name": "Get all SLO corrections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all Service Level Objective corrections."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"category\": \"Scheduled Maintenance\",\n    \"creator\": {\n     \"email\": \"dolor\",\n     \"handle\": \"labore deserunt proident adipisicing\",\n     \"name\": \"ipsum sint\"\n    },\n    \"description\": \"proident aute anim sunt minim\",\n    \"end\": -62785218,\n    \"slo_id\": \"laborum sed\",\n    \"start\": -28030537,\n    \"timezone\": \"ex\"\n   },\n   \"id\": \"ipsum consectetur sint ullamco\",\n   \"type\": \"correction\"\n  },\n  {\n   \"attributes\": {\n    \"category\": \"Scheduled Maintenance\",\n    \"creator\": {\n     \"email\": \"adipisicing laboris eu fugiat in\",\n     \"handle\": \"sin\",\n     \"name\": \"ad proident labore aute enim\"\n    },\n    \"description\": \"cupidatat Excepteur eu\",\n    \"end\": -47029682,\n    \"slo_id\": \"ex do aliqua irure\",\n    \"start\": -44367308,\n    \"timezone\": \"labore incididunt exercitation in sint\"\n   },\n   \"id\": \"nostrud in commodo \",\n   \"type\": \"correction\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -36359316,\n   \"total_filtered_count\": -54374248\n  }\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an SLO correction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"correction\",\n        \"attributes\": {\n            \"slo_id\": \"sloId\",\n            \"start\": 1600000000,\n            \"end\": 1600000000,\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"est\",\n            \"timezone\": \"UTC\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create an SLO Correction."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"correction\",\n        \"attributes\": {\n            \"slo_id\": \"sloId\",\n            \"start\": 1600000000,\n            \"end\": 1600000000,\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"est\",\n            \"timezone\": \"UTC\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"category\": \"Scheduled Maintenance\",\n   \"creator\": {\n    \"email\": \"consectetur irure sunt ex\",\n    \"handle\": \"proident sed laboris\",\n    \"name\": \"nostrud nulla aliqua dolore\"\n   },\n   \"description\": \"do adipisicing ea\",\n   \"end\": 79079397,\n   \"slo_id\": \"pariatur officia\",\n   \"start\": -27917193,\n   \"timezone\": \"dolor in\"\n  },\n  \"id\": \"adipisicing ipsum fugiat aliquip proident\",\n  \"type\": \"correction\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"correction\",\n        \"attributes\": {\n            \"slo_id\": \"sloId\",\n            \"start\": 1600000000,\n            \"end\": 1600000000,\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"est\",\n            \"timezone\": \"UTC\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"correction\",\n        \"attributes\": {\n            \"slo_id\": \"sloId\",\n            \"start\": 1600000000,\n            \"end\": 1600000000,\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"est\",\n            \"timezone\": \"UTC\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "SLO Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"type\": \"correction\",\n        \"attributes\": {\n            \"slo_id\": \"sloId\",\n            \"start\": 1600000000,\n            \"end\": 1600000000,\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"est\",\n            \"timezone\": \"UTC\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an SLO correction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_correction_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the SLO correction object."
								}
							]
						},
						"description": "Permanently delete the specified SLO correction object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an SLO correction for an SLO",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_correction_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the SLO correction object."
								}
							]
						},
						"description": "Get an SLO correction."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"category\": \"Scheduled Maintenance\",\n   \"creator\": {\n    \"email\": \"consectetur irure sunt ex\",\n    \"handle\": \"proident sed laboris\",\n    \"name\": \"nostrud nulla aliqua dolore\"\n   },\n   \"description\": \"do adipisicing ea\",\n   \"end\": 79079397,\n   \"slo_id\": \"pariatur officia\",\n   \"start\": -27917193,\n   \"timezone\": \"dolor in\"\n  },\n  \"id\": \"adipisicing ipsum fugiat aliquip proident\",\n  \"type\": \"correction\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an SLO correction",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"occaecat sit eu\",\n            \"end\": 1600000000,\n            \"start\": 1600000000,\n            \"timezone\": \"UTC\"\n        },\n        \"type\": \"correction\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"correction",
								":slo_correction_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_correction_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the SLO correction object."
								}
							]
						},
						"description": "Update the specified SLO correction object object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"occaecat sit eu\",\n            \"end\": 1600000000,\n            \"start\": 1600000000,\n            \"timezone\": \"UTC\"\n        },\n        \"type\": \"correction\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"category\": \"Scheduled Maintenance\",\n   \"creator\": {\n    \"email\": \"consectetur irure sunt ex\",\n    \"handle\": \"proident sed laboris\",\n    \"name\": \"nostrud nulla aliqua dolore\"\n   },\n   \"description\": \"do adipisicing ea\",\n   \"end\": 79079397,\n   \"slo_id\": \"pariatur officia\",\n   \"start\": -27917193,\n   \"timezone\": \"dolor in\"\n  },\n  \"id\": \"adipisicing ipsum fugiat aliquip proident\",\n  \"type\": \"correction\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"occaecat sit eu\",\n            \"end\": 1600000000,\n            \"start\": 1600000000,\n            \"timezone\": \"UTC\"\n        },\n        \"type\": \"correction\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"occaecat sit eu\",\n            \"end\": 1600000000,\n            \"start\": 1600000000,\n            \"timezone\": \"UTC\"\n        },\n        \"type\": \"correction\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"category\": \"Scheduled Maintenance\",\n            \"description\": \"occaecat sit eu\",\n            \"end\": 1600000000,\n            \"start\": 1600000000,\n            \"timezone\": \"UTC\"\n        },\n        \"type\": \"correction\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/correction/:slo_correction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"correction",
										":slo_correction_id"
									],
									"variable": [
										{
											"key": "slo_correction_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "SLO Status Corrections allow you to prevent specific time periods from negatively impacting\nyour SLO’s status and error budget. You can use Status Corrections for various purposes, such\nas removing planned maintenance windows, non-business hours, or other time periods that do\nnot correspond to genuine issues."
		},
		{
			"name": "Service Level Objectives",
			"item": [
				{
					"name": "Get all SLOs",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=34312785&offset=34312785",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo"
							],
							"query": [
								{
									"key": "ids",
									"value": "id1, id2, id3",
									"description": "A comma separated list of the IDs of the service level objectives objects."
								},
								{
									"key": "query",
									"value": "monitor",
									"description": "The query string to filter results based on SLO names."
								},
								{
									"key": "tags_query",
									"value": "env:prod",
									"description": "The query string to filter results based on a single SLO tag."
								},
								{
									"key": "metrics_query",
									"value": "aws.elb.request_count",
									"description": "The query string to filter results based on SLO numerator and denominator."
								},
								{
									"key": "limit",
									"value": "34312785",
									"description": "The number of SLOs to return in the response."
								},
								{
									"key": "offset",
									"value": "34312785",
									"description": "The specific offset to use as the beginning of the returned response."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get a list of service level objective objects for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=34312785&offset=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										},
										{
											"key": "query",
											"value": "monitor"
										},
										{
											"key": "tags_query",
											"value": "env:prod"
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count"
										},
										{
											"key": "limit",
											"value": "34312785"
										},
										{
											"key": "offset",
											"value": "34312785"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": -88866365,\n   \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"incididunt Duis dolo\",\n    \"name\": \"dolor fugiat minim\"\n   },\n   \"description\": \"ut nisi laboris\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"esse\",\n   \"modified_at\": -41290973,\n   \"monitor_ids\": [\n    -71679926,\n    66730901\n   ],\n   \"monitor_tags\": [\n    \"ut\",\n    \"et dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  },\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": 24999634,\n   \"creator\": {\n    \"email\": \"eu officia cillum quis\",\n    \"handle\": \"sit\",\n    \"name\": \"elit laborum do\"\n   },\n   \"description\": \"cillum ali\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"mollit nulla aliquip Ut ea\",\n   \"modified_at\": 82650028,\n   \"monitor_ids\": [\n    22006233,\n    -73907575\n   ],\n   \"monitor_tags\": [\n    \"ut Lorem tempor\",\n    \"anim dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  }\n ],\n \"errors\": [\n  \"non nisi dolore labore\",\n  \"sint aliquip minim et\"\n ],\n \"metadata\": {\n  \"page\": {\n   \"total_count\": 22101040,\n   \"total_filtered_count\": 89611111\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=34312785&offset=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										},
										{
											"key": "query",
											"value": "monitor"
										},
										{
											"key": "tags_query",
											"value": "env:prod"
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count"
										},
										{
											"key": "limit",
											"value": "34312785"
										},
										{
											"key": "offset",
											"value": "34312785"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=34312785&offset=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										},
										{
											"key": "query",
											"value": "monitor"
										},
										{
											"key": "tags_query",
											"value": "env:prod"
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count"
										},
										{
											"key": "limit",
											"value": "34312785"
										},
										{
											"key": "offset",
											"value": "34312785"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo?ids=id1, id2, id3&query=monitor&tags_query=env:prod&metrics_query=aws.elb.request_count&limit=34312785&offset=34312785",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										},
										{
											"key": "query",
											"value": "monitor"
										},
										{
											"key": "tags_query",
											"value": "env:prod"
										},
										{
											"key": "metrics_query",
											"value": "aws.elb.request_count"
										},
										{
											"key": "limit",
											"value": "34312785"
										},
										{
											"key": "offset",
											"value": "34312785"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an SLO object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"aliquip irure nisi consectetur\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        34848345,\n        -90663416\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"dolor velit ut\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        46302716,\n        69662178\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": -88866365,\n   \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"incididunt Duis dolo\",\n    \"name\": \"dolor fugiat minim\"\n   },\n   \"description\": \"ut nisi laboris\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"esse\",\n   \"modified_at\": -41290973,\n   \"monitor_ids\": [\n    -71679926,\n    66730901\n   ],\n   \"monitor_tags\": [\n    \"ut\",\n    \"et dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  },\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": 24999634,\n   \"creator\": {\n    \"email\": \"eu officia cillum quis\",\n    \"handle\": \"sit\",\n    \"name\": \"elit laborum do\"\n   },\n   \"description\": \"cillum ali\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"mollit nulla aliquip Ut ea\",\n   \"modified_at\": 82650028,\n   \"monitor_ids\": [\n    22006233,\n    -73907575\n   ],\n   \"monitor_tags\": [\n    \"ut Lorem tempor\",\n    \"anim dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  }\n ],\n \"errors\": [\n  \"non nisi dolore labore\",\n  \"sint aliquip minim et\"\n ],\n \"metadata\": {\n  \"page\": {\n   \"total_count\": 22101040,\n   \"total_filtered_count\": 89611111\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"dolor velit ut\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        46302716,\n        69662178\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"dolor velit ut\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        46302716,\n        69662178\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Bulk Delete SLO Timeframes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id1\": [\n        \"7d\",\n        \"30d\"\n    ],\n    \"id2\": [\n        \"7d\",\n        \"30d\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"bulk_delete"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete (or partially delete) multiple service level objective objects.\n\nThis endpoint facilitates deletion of one or more thresholds for one or more\nservice level objective objects. If all thresholds are deleted, the service level\nobjective object is deleted as well."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id1\": [\n        \"7d\",\n        \"30d\"\n    ],\n    \"id2\": [\n        \"7d\",\n        \"30d\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"deleted\": [\n   \"\",\n   \"ex Ut\"\n  ],\n  \"updated\": [\n   \"culpa\",\n   \"consequat dolor reprehenderit\"\n  ]\n },\n \"errors\": [\n  {\n   \"id\": \"\",\n   \"timeframe\": \"30d\",\n   \"message\": \"\"\n  },\n  {\n   \"id\": \"\",\n   \"timeframe\": \"30d\",\n   \"message\": \"\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id1\": [\n        \"7d\",\n        \"30d\"\n    ],\n    \"id2\": [\n        \"7d\",\n        \"30d\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id1\": [\n        \"7d\",\n        \"30d\"\n    ],\n    \"id2\": [\n        \"7d\",\n        \"30d\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/bulk_delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"bulk_delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Check if SLOs can be safely deleted",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								"can_delete"
							],
							"query": [
								{
									"key": "ids",
									"value": "id1, id2, id3",
									"description": "(Required) A comma separated list of the IDs of the service level objectives objects."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Check if an SLO can be safely deleted. For example,\nassure an SLO can be deleted without disrupting a dashboard."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"ok\": [\n   \"reprehenderit\",\n   \"ipsum sunt reprehenderit amet\"\n  ]\n },\n \"errors\": {}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/can_delete?ids=id1, id2, id3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										"can_delete"
									],
									"query": [
										{
											"key": "ids",
											"value": "id1, id2, id3"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"ok\": [\n   \"reprehenderit\",\n   \"ipsum sunt reprehenderit amet\"\n  ]\n },\n \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "Delete an SLO",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"query": [
								{
									"key": "force",
									"value": "dolor nostrud irure",
									"description": "Delete the monitor even if it's referenced by other resources (e.g. SLO, composite monitor)."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the service level objective."
								}
							]
						},
						"description": "Permanently delete the specified service level objective object.\n\nIf an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns\na 409 conflict error because the SLO is referenced in a dashboard."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  \"est consequat ullamco a\",\n  \"esse est aliquip tempor consequat\"\n ],\n \"errors\": {}\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?force=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "force",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  \"est consequat ullamco a\",\n  \"esse est aliquip tempor consequat\"\n ],\n \"errors\": {}\n}"
						}
					]
				},
				{
					"name": "Get an SLO's details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"query": [
								{
									"key": "with_configured_alert_ids",
									"value": "true",
									"description": "Get the IDs of SLO monitors that reference this SLO."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the service level objective object."
								}
							]
						},
						"description": "Get a service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"configured_alert_ids\": [\n   123,\n   456,\n   789\n  ],\n  \"created_at\": 1054049,\n  \"creator\": {\n   \"email\": \"laborum incididunt nostrud\",\n   \"handle\": \"dolor cillum\",\n   \"name\": \"cupi\"\n  },\n  \"description\": \"irure\",\n  \"groups\": [\n   \"env:prod\",\n   \"role:mysql\"\n  ],\n  \"id\": \"laboris voluptate reprehenderit\",\n  \"modified_at\": -12542754,\n  \"monitor_ids\": [\n   96773519,\n   -84856409\n  ],\n  \"monitor_tags\": [\n   \"do\",\n   \"reprehe\"\n  ],\n  \"name\": \"Custom Metric SLO\",\n  \"query\": {\n   \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n   \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n  },\n  \"tags\": [\n   \"env:prod\",\n   \"app:core\"\n  ],\n  \"thresholds\": [\n   {\n    \"target\": 95,\n    \"timeframe\": \"7d\"\n   },\n   {\n    \"target\": 95,\n    \"timeframe\": \"30d\",\n    \"warning\": 97\n   }\n  ],\n  \"type\": \"metric\"\n },\n \"errors\": [\n  \"tempor dolore fugiat Duis\",\n  \"ipsum fugiat\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id?with_configured_alert_ids=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"query": [
										{
											"key": "with_configured_alert_ids",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an SLO",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"ad amet sint aliqua\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        -52939371,\n        -95811114\n    ],\n    \"monitor_tags\": [\n        \"cillum aliquip et dolore\",\n        \"nulla deserunt\"\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the service level objective object."
								}
							]
						},
						"description": "Update the specified service level objective object."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"deserunt nisi ad Excepteur cupidatat\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        -75972531,\n        -29678888\n    ],\n    \"monitor_tags\": [\n        \"Excepteur Lorem\",\n        \"non\"\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": -88866365,\n   \"creator\": {\n    \"email\": \"sed\",\n    \"handle\": \"incididunt Duis dolo\",\n    \"name\": \"dolor fugiat minim\"\n   },\n   \"description\": \"ut nisi laboris\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"esse\",\n   \"modified_at\": -41290973,\n   \"monitor_ids\": [\n    -71679926,\n    66730901\n   ],\n   \"monitor_tags\": [\n    \"ut\",\n    \"et dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  },\n  {\n   \"name\": \"Custom Metric SLO\",\n   \"thresholds\": [\n    {\n     \"target\": 95,\n     \"timeframe\": \"7d\"\n    },\n    {\n     \"target\": 95,\n     \"timeframe\": \"30d\",\n     \"warning\": 97\n    }\n   ],\n   \"type\": \"metric\",\n   \"created_at\": 24999634,\n   \"creator\": {\n    \"email\": \"eu officia cillum quis\",\n    \"handle\": \"sit\",\n    \"name\": \"elit laborum do\"\n   },\n   \"description\": \"cillum ali\",\n   \"groups\": [\n    \"env:prod\",\n    \"role:mysql\"\n   ],\n   \"id\": \"mollit nulla aliquip Ut ea\",\n   \"modified_at\": 82650028,\n   \"monitor_ids\": [\n    22006233,\n    -73907575\n   ],\n   \"monitor_tags\": [\n    \"ut Lorem tempor\",\n    \"anim dolor\"\n   ],\n   \"query\": {\n    \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n    \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n   },\n   \"tags\": [\n    \"env:prod\",\n    \"app:core\"\n   ]\n  }\n ],\n \"errors\": [\n  \"non nisi dolore labore\",\n  \"sint aliquip minim et\"\n ],\n \"metadata\": {\n  \"page\": {\n   \"total_count\": 22101040,\n   \"total_filtered_count\": 89611111\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"deserunt nisi ad Excepteur cupidatat\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        -75972531,\n        -29678888\n    ],\n    \"monitor_tags\": [\n        \"Excepteur Lorem\",\n        \"non\"\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"deserunt nisi ad Excepteur cupidatat\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        -75972531,\n        -29678888\n    ],\n    \"monitor_tags\": [\n        \"Excepteur Lorem\",\n        \"non\"\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Custom Metric SLO\",\n    \"thresholds\": [\n        {\n            \"target\": 95,\n            \"timeframe\": \"7d\"\n        },\n        {\n            \"target\": 95,\n            \"timeframe\": \"30d\",\n            \"warning\": 97\n        }\n    ],\n    \"type\": \"metric\",\n    \"description\": \"deserunt nisi ad Excepteur cupidatat\",\n    \"groups\": [\n        \"env:prod\",\n        \"role:mysql\"\n    ],\n    \"monitor_ids\": [\n        -75972531,\n        -29678888\n    ],\n    \"monitor_tags\": [\n        \"Excepteur Lorem\",\n        \"non\"\n    ],\n    \"query\": {\n        \"numerator\": \"sum:my.custom.metric{type:good}.as_count()\",\n        \"denominator\": \"sum:my.custom.metric{*}.as_count()\"\n    },\n    \"tags\": [\n        \"env:prod\",\n        \"app:core\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id"
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an SLO's history",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=34312785&to_ts=34312785&target=69.75165448690908",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"slo",
								":slo_id",
								"history"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "34312785",
									"description": "(Required) The `from` timestamp for the query window in epoch seconds."
								},
								{
									"key": "to_ts",
									"value": "34312785",
									"description": "(Required) The `to` timestamp for the query window in epoch seconds."
								},
								{
									"key": "target",
									"value": "69.75165448690908",
									"description": "The SLO target. If `target` is passed in, the response will include the remaining error budget and a timeframe value of `custom`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "slo_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the service level objective object."
								}
							]
						},
						"description": "Get a specific SLO’s history, regardless of its SLO type.\n\nThe detailed history data is structured according to the source data type.\nFor example, metric data is included for event SLOs that use\nthe metric source, and monitor SLO types include the monitor transition history.\n\n**Note:** There are different response formats for event based and time based SLOs.\nExamples of both are shown."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=34312785&to_ts=34312785&target=69.75165448690908",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "target",
											"value": "69.75165448690908"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"from_ts\": 1615323990,\n  \"groups\": [\n   {\n    \"error_budget_remaining\": {},\n    \"errors\": [\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     },\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     }\n    ],\n    \"group\": \"name\",\n    \"history\": [\n     [\n      5441401.863603085,\n      68327449.0226947\n     ],\n     [\n      -63716293.86961297,\n      -42358849.838811666\n     ]\n    ],\n    \"monitor_modified\": 1615867200,\n    \"monitor_type\": \"string\",\n    \"name\": \"string\",\n    \"precision\": 2,\n    \"preview\": true,\n    \"sli_value\": 99.99,\n    \"span_precision\": 2,\n    \"uptime\": 99.99\n   },\n   {\n    \"error_budget_remaining\": {},\n    \"errors\": [\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     },\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     }\n    ],\n    \"group\": \"name\",\n    \"history\": [\n     [\n      -3699645.3666246533,\n      78490288.64360842\n     ],\n     [\n      -10226823.879343927,\n      55151489.68499765\n     ]\n    ],\n    \"monitor_modified\": 1615867200,\n    \"monitor_type\": \"string\",\n    \"name\": \"string\",\n    \"precision\": 2,\n    \"preview\": true,\n    \"sli_value\": 99.99,\n    \"span_precision\": 2,\n    \"uptime\": 99.99\n   }\n  ],\n  \"monitors\": [\n   {\n    \"error_budget_remaining\": {},\n    \"errors\": [\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     },\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     }\n    ],\n    \"group\": \"name\",\n    \"history\": [\n     [\n      -85425178.92445995,\n      -46180773.74704739\n     ],\n     [\n      -93272305.18875669,\n      21286959.36009839\n     ]\n    ],\n    \"monitor_modified\": 1615867200,\n    \"monitor_type\": \"string\",\n    \"name\": \"string\",\n    \"precision\": 2,\n    \"preview\": true,\n    \"sli_value\": 99.99,\n    \"span_precision\": 2,\n    \"uptime\": 99.99\n   },\n   {\n    \"error_budget_remaining\": {},\n    \"errors\": [\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     },\n     {\n      \"error_type\": \"\",\n      \"error_message\": \"\"\n     }\n    ],\n    \"group\": \"name\",\n    \"history\": [\n     [\n      -25928633.657879233,\n      -8931472.675903589\n     ],\n     [\n      46090964.729898155,\n      -57640420.67539821\n     ]\n    ],\n    \"monitor_modified\": 1615867200,\n    \"monitor_type\": \"string\",\n    \"name\": \"string\",\n    \"precision\": 2,\n    \"preview\": true,\n    \"sli_value\": 99.99,\n    \"span_precision\": 2,\n    \"uptime\": 99.99\n   }\n  ],\n  \"overall\": {\n   \"error_budget_remaining\": {},\n   \"errors\": [\n    {\n     \"error_type\": \"\",\n     \"error_message\": \"\"\n    },\n    {\n     \"error_type\": \"\",\n     \"error_message\": \"\"\n    }\n   ],\n   \"group\": \"name\",\n   \"history\": [\n    [\n     92105553.68923816,\n     -8798569.106622666\n    ],\n    [\n     -17133183.963958353,\n     -92651700.24877633\n    ]\n   ],\n   \"monitor_modified\": 1615867200,\n   \"monitor_type\": \"string\",\n   \"name\": \"string\",\n   \"precision\": {},\n   \"preview\": true,\n   \"sli_value\": 99.99,\n   \"span_precision\": 2,\n   \"uptime\": 99.99\n  },\n  \"series\": {\n   \"res_type\": \"\",\n   \"interval\": 0,\n   \"resp_version\": 0,\n   \"query\": \"\",\n   \"times\": [],\n   \"numerator\": {\n    \"count\": 0,\n    \"sum\": 0,\n    \"metadata\": {}\n   },\n   \"denominator\": {\n    \"count\": 0,\n    \"sum\": 0,\n    \"metadata\": {}\n   },\n   \"message\": \"\"\n  },\n  \"thresholds\": {},\n  \"to_ts\": 1615928790,\n  \"type\": \"metric\",\n  \"type_id\": 0\n },\n \"errors\": [\n  {\n   \"error\": \"voluptate anim c\"\n  },\n  {\n   \"error\": \"id esse in non\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=34312785&to_ts=34312785&target=69.75165448690908",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "target",
											"value": "69.75165448690908"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=34312785&to_ts=34312785&target=69.75165448690908",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "target",
											"value": "69.75165448690908"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/slo/:slo_id/history?from_ts=34312785&to_ts=34312785&target=69.75165448690908",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"slo",
										":slo_id",
										"history"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "target",
											"value": "69.75165448690908"
										}
									],
									"variable": [
										{
											"key": "slo_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "[Service Level Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)\n(or SLOs) are a key part of the site reliability engineering toolkit.\nSLOs provide a framework for defining clear targets around application performance,\nwhich ultimately help teams provide a consistent customer experience,\nbalance feature development with platform stability,\nand improve communication with internal and external users."
		},
		{
			"name": "Slack Integration",
			"item": [
				{
					"name": "Delete a Slack integration",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete a Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get info about a Slack integration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all information about your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Slack integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2/2\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Datadog-Slack integration. Once created, add a channel to it with the\n[Add channels to Slack integration endpoint](https://docs.datadoghq.com/api/?lang=bash#add-channels-to-slack-integration).\n\nThis method updates your integration configuration by **adding**\nyour new configuration to the existing one in your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2/2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2/2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"service_hooks\": [\n        {\n            \"account\": \"Main_Account\",\n            \"url\": \"https://hooks.slack.com/services/1/1/1\"\n        },\n        {\n            \"account\": \"doghouse\",\n            \"url\": \"https://hooks.slack.com/services/2/2/2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Add channels to Slack integration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channels\": [\n        {\n            \"account\": \"Main_Account\",\n            \"channel_name\": \"#channel_name_main_account\",\n            \"transfer_all_user_comments\": false\n        },\n        {\n            \"account\": \"doghouse\",\n            \"channel_name\": \"#channel_name_doghouse\",\n            \"transfer_all_user_comments\": false\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Add channels to your existing Datadog-Slack integration.\n\nThis method updates your integration configuration by **replacing**\nyour current configuration with the new one sent to your Datadog organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n        {\n            \"account\": \"Main_Account\",\n            \"channel_name\": \"#channel_name_main_account\",\n            \"transfer_all_user_comments\": false\n        },\n        {\n            \"account\": \"doghouse\",\n            \"channel_name\": \"#channel_name_doghouse\",\n            \"transfer_all_user_comments\": false\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n        {\n            \"account\": \"Main_Account\",\n            \"channel_name\": \"#channel_name_main_account\",\n            \"transfer_all_user_comments\": false\n        },\n        {\n            \"account\": \"doghouse\",\n            \"channel_name\": \"#channel_name_doghouse\",\n            \"transfer_all_user_comments\": false\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channels\": [\n        {\n            \"account\": \"Main_Account\",\n            \"channel_name\": \"#channel_name_main_account\",\n            \"transfer_all_user_comments\": false\n        },\n        {\n            \"account\": \"doghouse\",\n            \"channel_name\": \"#channel_name_doghouse\",\n            \"transfer_all_user_comments\": false\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all channels in a Slack integration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "account_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Your Slack account name."
								}
							]
						},
						"description": "Get a list of all channels configured for your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"display\": {\n   \"message\": true,\n   \"notified\": true,\n   \"snapshot\": true,\n   \"tags\": true\n  },\n  \"name\": \"#channel_name_main_account\"\n },\n {\n  \"display\": {\n   \"message\": true,\n   \"notified\": true,\n   \"snapshot\": false,\n   \"tags\": true\n  },\n  \"name\": \"#channel_name_doghouse\"\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Slack integration channel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "account_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Your Slack account name."
								}
							]
						},
						"description": "Add a channel to your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"display\": {\n  \"message\": true,\n  \"notified\": true,\n  \"snapshot\": true,\n  \"tags\": true\n },\n \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels"
									],
									"variable": [
										{
											"key": "account_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Remove a Slack integration channel",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "account_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Your Slack account name."
								},
								{
									"key": "channel_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the Slack channel being operated on."
								}
							]
						},
						"description": "Remove a channel from your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "The channel was removed successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a Slack integration channel",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "account_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Your Slack account name."
								},
								{
									"key": "channel_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the Slack channel being operated on."
								}
							]
						},
						"description": "Get a channel configured for your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"display\": {\n  \"message\": true,\n  \"notified\": true,\n  \"snapshot\": true,\n  \"tags\": true\n },\n \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a Slack integration channel",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"slack",
								"configuration",
								"accounts",
								":account_name",
								"channels",
								":channel_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "account_name",
									"value": "dolor nostrud irure",
									"description": "(Required) Your Slack account name."
								},
								{
									"key": "channel_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the Slack channel being operated on."
								}
							]
						},
						"description": "Update a channel used in your Datadog-Slack integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"display\": {\n  \"message\": true,\n  \"notified\": true,\n  \"snapshot\": true,\n  \"tags\": true\n },\n \"name\": \"#general\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"display\": {\n        \"message\": true,\n        \"notified\": true,\n        \"snapshot\": true,\n        \"tags\": true\n    },\n    \"name\": \"#general\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/slack/configuration/accounts/:account_name/channels/:channel_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"slack",
										"configuration",
										"accounts",
										":account_name",
										"channels",
										":channel_name"
									],
									"variable": [
										{
											"key": "account_name"
										},
										{
											"key": "channel_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your [Datadog-Slack integration](https://docs.datadoghq.com/integrations/slack)\ndirectly through the Datadog API."
		},
		{
			"name": "Snapshots",
			"item": [
				{
					"name": "Take graph snapshots",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=dolor nostrud irure&start=34312785&end=34312785&event_query=dolor nostrud irure&graph_def=dolor nostrud irure&title=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"graph",
								"snapshot"
							],
							"query": [
								{
									"key": "metric_query",
									"value": "dolor nostrud irure",
									"description": "The metric query."
								},
								{
									"key": "start",
									"value": "34312785",
									"description": "(Required) The POSIX timestamp of the start of the query."
								},
								{
									"key": "end",
									"value": "34312785",
									"description": "(Required) The POSIX timestamp of the end of the query."
								},
								{
									"key": "event_query",
									"value": "dolor nostrud irure",
									"description": "A query that adds event bands to the graph."
								},
								{
									"key": "graph_def",
									"value": "dolor nostrud irure",
									"description": "A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.\nThe JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)\nand should be formatted to a single line then URL encoded."
								},
								{
									"key": "title",
									"value": "dolor nostrud irure",
									"description": "A title for the graph. If no title is specified, the graph does not have a title."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Take graph snapshots.\n**Note**: When a snapshot is created, there is some delay before it is available."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=dolor nostrud irure&start=34312785&end=34312785&event_query=dolor nostrud irure&graph_def=dolor nostrud irure&title=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "event_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "graph_def",
											"value": "dolor nostrud irure"
										},
										{
											"key": "title",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"graph_def\": \"ex id\",\n \"metric_query\": \"sunt dolore\",\n \"snapshot_url\": \"https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=dolor nostrud irure&start=34312785&end=34312785&event_query=dolor nostrud irure&graph_def=dolor nostrud irure&title=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "event_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "graph_def",
											"value": "dolor nostrud irure"
										},
										{
											"key": "title",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/graph/snapshot?metric_query=dolor nostrud irure&start=34312785&end=34312785&event_query=dolor nostrud irure&graph_def=dolor nostrud irure&title=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"graph",
										"snapshot"
									],
									"query": [
										{
											"key": "metric_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "start",
											"value": "34312785"
										},
										{
											"key": "end",
											"value": "34312785"
										},
										{
											"key": "event_query",
											"value": "dolor nostrud irure"
										},
										{
											"key": "graph_def",
											"value": "dolor nostrud irure"
										},
										{
											"key": "title",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Take graph snapshots using the API."
		},
		{
			"name": "Synthetics",
			"item": [
				{
					"name": "Get all locations (public and private)",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"locations"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of public and private locations available for Synthetic\ntests. No arguments required."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"locations\": [\n  {\n   \"id\": \"Excepteur dolor exercitation\",\n   \"name\": \"nulla sunt\"\n  },\n  {\n   \"id\": \"officia et\",\n   \"name\": \"sint minim\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a private location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a new Synthetics private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"config\": {},\n \"private_location\": {\n  \"name\": \"New private location\",\n  \"description\": \"Description of private location\",\n  \"tags\": [\n   \"team:front\"\n  ],\n  \"id\": \"incididunt sint amet\",\n  \"secrets\": {\n   \"authentication\": {\n    \"id\": \"exercitation commodo tempor\",\n    \"key\": \"velit\"\n   },\n   \"config_decryption\": {\n    \"key\": \"minim adipisicing Duis\"\n   }\n  }\n },\n \"result_encryption\": {\n  \"id\": \"nulla ea mollit\",\n  \"key\": \"consequat minim\"\n }\n}"
						},
						{
							"name": "Quota reached for private locations",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Private locations are not activated for the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a private location",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "location_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the private location."
								}
							]
						},
						"description": "Delete a Synthetics private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "- Private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a private location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "location_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the private location."
								}
							]
						},
						"description": "Get a Synthetics private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"New private location\",\n \"description\": \"Description of private location\",\n \"tags\": [\n  \"team:front\"\n ],\n \"id\": \"esse mollit in laboris\",\n \"secrets\": {\n  \"authentication\": {\n   \"id\": \"nisi est\",\n   \"key\": \"ullamco in\"\n  },\n  \"config_decryption\": {\n   \"key\": \"minim consequat dolor culpa\"\n  }\n }\n}"
						},
						{
							"name": "- Synthetic private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit a private location",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"private-locations",
								":location_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "location_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the private location."
								}
							]
						},
						"description": "Edit a Synthetics private location."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"New private location\",\n \"description\": \"Description of private location\",\n \"tags\": [\n  \"team:front\"\n ],\n \"id\": \"esse mollit in laboris\",\n \"secrets\": {\n  \"authentication\": {\n   \"id\": \"nisi est\",\n   \"key\": \"ullamco in\"\n  },\n  \"config_decryption\": {\n   \"key\": \"minim consequat dolor culpa\"\n  }\n }\n}"
						},
						{
							"name": "- Private locations are not activated for the user\n- Private location does not exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New private location\",\n    \"description\": \"Description of private location\",\n    \"tags\": [\n        \"team:front\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/private-locations/:location_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"private-locations",
										":location_id"
									],
									"variable": [
										{
											"key": "location_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get the list of all tests",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of all Synthetic tests."
					},
					"response": [
						{
							"name": "OK - Returns the list of all Synthetic tests.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Synthetics is not activated for the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "This endpoint is deprecated. To create a test, use [Create an API test](https://docs.datadoghq.com/api/latest/synthetics/#create-an-api-test), or [Create a browser test](https://docs.datadoghq.com/api/latest/synthetics/#create-a-browser-test)."
					},
					"response": [
						{
							"name": "OK - Returns the created test details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Test quota is reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create an API test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Synthetic API test."
					},
					"response": [
						{
							"name": "OK - Returns the created test details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Test quota is reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an API test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "Get the detailed configuration associated with\na Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit an API test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"api",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "Edit the configuration of a Synthetic API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Updating sub-type is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user\n- Test can't be found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/api/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"api",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a browser test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Synthetic browser test."
					},
					"response": [
						{
							"name": "OK - Returns the created test details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Creation failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Test quota is reached",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "Get the detailed configuration (including steps) associated with\na Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit a browser test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "Edit the configuration of a Synthetic browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Updating sub-type is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic Monitoring is not activated for the user\n- Test is not owned by the user\n- Test can't be found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test's latest results summaries",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=magna nostrud&probe_dc=dolor cupidatat in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id",
								"results"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "34312785",
									"description": "Timestamp in milliseconds from which to start querying results."
								},
								{
									"key": "to_ts",
									"value": "34312785",
									"description": "Timestamp in milliseconds up to which to query results."
								},
								{
									"key": "probe_dc",
									"value": "magna nostrud",
									"description": "Locations for which to query results."
								},
								{
									"key": "probe_dc",
									"value": "dolor cupidatat in",
									"description": "Locations for which to query results."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the browser test for which to search results\nfor."
								}
							]
						},
						"description": "Get the last 50 test results summaries for a given Synthetics Browser test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"last_timestamp_fetched\": 33856620,\n \"results\": [\n  {\n   \"check_time\": 47349134.05058658,\n   \"probe_dc\": \"Excepteur elit est\",\n   \"result\": {\n    \"device\": {\n     \"id\": \"laptop_large\",\n     \"name\": \"\",\n     \"height\": 0,\n     \"width\": 0,\n     \"isMobile\": true\n    },\n    \"duration\": 97370455.83261216,\n    \"errorCount\": 78851071,\n    \"stepCountCompleted\": 16162154,\n    \"stepCountTotal\": 92648080\n   },\n   \"result_id\": \"commodo qui ad Excepteur\",\n   \"status\": 2\n  },\n  {\n   \"check_time\": -35430090.52389445,\n   \"probe_dc\": \"elit ea esse non\",\n   \"result\": {\n    \"device\": {\n     \"id\": \"laptop_large\",\n     \"name\": \"\",\n     \"height\": 0,\n     \"width\": 0,\n     \"isMobile\": false\n    },\n    \"duration\": 67822082.00285366,\n    \"errorCount\": -39673870,\n    \"stepCountCompleted\": 29933227,\n    \"stepCountTotal\": -89887095\n   },\n   \"result_id\": \"consequat in ullamco ut id\",\n   \"status\": 2\n  }\n ]\n}"
						},
						{
							"name": "forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a browser test result",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"browser",
								":public_id",
								"results",
								":result_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the browser test to which the target result\nbelongs."
								},
								{
									"key": "result_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the result to get."
								}
							]
						},
						"description": "Get a specific full result from a given (browser) Synthetic test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test or result is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/browser/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"browser",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete tests",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"delete"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Delete multiple Synthetic tests by ID."
					},
					"response": [
						{
							"name": "OK.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deleted_tests\": [\n  {\n   \"deleted_at\": \"1942-04-22T08:17:34.013Z\",\n   \"public_id\": \"voluptate ipsum\"\n  },\n  {\n   \"deleted_at\": \"2016-04-06T21:53:59.196Z\",\n   \"public_id\": \"nostrud proident velit eu\"\n  }\n ]\n}"
						},
						{
							"name": "- JSON format is wrong\n- Test cannot be deleted as it's used elsewhere (as a sub-test or in an uptime widget)\n- Some IDs are not owned by the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Tests to be deleted can't be found\n- Synthetics is not activated for the user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Trigger tests from CI/CD pipelines",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tests\": [\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": true,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"min\",\n            \"bodyType\": \"in nulla Lorem\",\n            \"cookies\": \"Ut dolore dolor\",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": true,\n            \"headers\": {},\n            \"locations\": [\n                \"esse officia consectetur te\",\n                \"sint anim ut\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"amet dolore\",\n                    \"provider\": \"adipisicing Lorem in incididunt deserun\"\n                },\n                \"git\": {\n                    \"branch\": \"laboris deserunt ipsum in\",\n                    \"commit_sha\": \"ut velit\"\n                }\n            },\n            \"retry\": {\n                \"count\": -84104999,\n                \"interval\": 13350086.319461018\n            },\n            \"startUrl\": \"elit sed esse qui exercitation\",\n            \"variables\": {}\n        },\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": true,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"deserunt nulla eiusmod\",\n            \"bodyType\": \"id labore eiusmod culpa\",\n            \"cookies\": \"ullamco labore consectetur\",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": true,\n            \"headers\": {},\n            \"locations\": [\n                \"laborum\",\n                \"mollit\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"incididunt laboris reprehenderit ex est\",\n                    \"provider\": \"cillum consectetur ut elit\"\n                },\n                \"git\": {\n                    \"branch\": \"dolore non in Excepteur et\",\n                    \"commit_sha\": \"mollit in officia i\"\n                }\n            },\n            \"retry\": {\n                \"count\": -99046824,\n                \"interval\": 82315107.0658176\n            },\n            \"startUrl\": \"incididunt proident elit\",\n            \"variables\": {}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								"trigger",
								"ci"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Trigger a set of Synthetics tests for continuous integration."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tests\": [\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": true,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"ad ipsum dolor nisi in\",\n            \"bodyType\": \"cupidatat sint dolore\",\n            \"cookies\": \"elit occaecat veniam quis\",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": false,\n            \"headers\": {},\n            \"locations\": [\n                \"in minim ea mollit\",\n                \"dolore enim nisi\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"non culpa qui labore\",\n                    \"provider\": \"Duis commodo cupidatat\"\n                },\n                \"git\": {\n                    \"branch\": \"mollit\",\n                    \"commit_sha\": \"nisi cup\"\n                }\n            },\n            \"retry\": {\n                \"count\": 99869793,\n                \"interval\": 3904452.7763585746\n            },\n            \"startUrl\": \"est elit enim sint occaecat\",\n            \"variables\": {}\n        },\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": false,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"aute sunt Lorem sint\",\n            \"bodyType\": \"mo\",\n            \"cookies\": \"nulla \",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": false,\n            \"headers\": {},\n            \"locations\": [\n                \"aliquip nulla magna\",\n                \"reprehenderit voluptate\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"amet cillum\",\n                    \"provider\": \"ea nostrud aliquip Ut\"\n                },\n                \"git\": {\n                    \"branch\": \"dolor occ\",\n                    \"commit_sha\": \"quis aliquip aliqua eu laboris\"\n                }\n            },\n            \"retry\": {\n                \"count\": 68379949,\n                \"interval\": 66986513.91503295\n            },\n            \"startUrl\": \"culpa do ut\",\n            \"variables\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger",
										"ci"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"batch_id\": \"in anim\",\n \"locations\": [\n  {\n   \"id\": -96308549,\n   \"name\": \"veni\"\n  },\n  {\n   \"id\": -39755928,\n   \"name\": \"sunt incididunt id ipsum\"\n  }\n ],\n \"results\": [\n  {\n   \"device\": \"laptop_large\",\n   \"location\": -75325355,\n   \"public_id\": \"consectetur\",\n   \"result_id\": \"commodo esse ipsum nostrud\"\n  },\n  {\n   \"device\": \"laptop_large\",\n   \"location\": -30166150,\n   \"public_id\": \"enim\",\n   \"result_id\": \"irure fugiat ut eu\"\n  }\n ],\n \"triggered_check_ids\": [\n  \"Excepteur\",\n  \"voluptate\"\n ]\n}"
						},
						{
							"name": "JSON format is wrong",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tests\": [\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": true,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"ad ipsum dolor nisi in\",\n            \"bodyType\": \"cupidatat sint dolore\",\n            \"cookies\": \"elit occaecat veniam quis\",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": false,\n            \"headers\": {},\n            \"locations\": [\n                \"in minim ea mollit\",\n                \"dolore enim nisi\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"non culpa qui labore\",\n                    \"provider\": \"Duis commodo cupidatat\"\n                },\n                \"git\": {\n                    \"branch\": \"mollit\",\n                    \"commit_sha\": \"nisi cup\"\n                }\n            },\n            \"retry\": {\n                \"count\": 99869793,\n                \"interval\": 3904452.7763585746\n            },\n            \"startUrl\": \"est elit enim sint occaecat\",\n            \"variables\": {}\n        },\n        {\n            \"public_id\": \"aaa-aaa-aaa\",\n            \"allowInsecureCertificates\": false,\n            \"basicAuth\": {\n                \"password\": \"\",\n                \"username\": \"\"\n            },\n            \"body\": \"aute sunt Lorem sint\",\n            \"bodyType\": \"mo\",\n            \"cookies\": \"nulla \",\n            \"deviceIds\": [\n                \"laptop_large\",\n                \"laptop_large\"\n            ],\n            \"followRedirects\": false,\n            \"headers\": {},\n            \"locations\": [\n                \"aliquip nulla magna\",\n                \"reprehenderit voluptate\"\n            ],\n            \"metadata\": {\n                \"ci\": {\n                    \"pipeline\": \"amet cillum\",\n                    \"provider\": \"ea nostrud aliquip Ut\"\n                },\n                \"git\": {\n                    \"branch\": \"dolor occ\",\n                    \"commit_sha\": \"quis aliquip aliqua eu laboris\"\n                }\n            },\n            \"retry\": {\n                \"count\": 68379949,\n                \"interval\": 66986513.91503295\n            },\n            \"startUrl\": \"culpa do ut\",\n            \"variables\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/trigger/ci",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										"trigger",
										"ci"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a test configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "Get the detailed configuration associated with a Synthetics test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit a test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "null"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test to get details from."
								}
							]
						},
						"description": "This endpoint is deprecated. To edit a test, use [Edit an API test](https://docs.datadoghq.com/api/latest/synthetics/#edit-an-api-test) or [Edit a browser test](https://docs.datadoghq.com/api/latest/synthetics/#edit-a-browser-test)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "- JSON format is wrong\n- Updating sub-type is forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user\n- Test can't be found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an API test's latest results summaries",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=magna nostrud&probe_dc=dolor cupidatat in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"results"
							],
							"query": [
								{
									"key": "from_ts",
									"value": "34312785",
									"description": "Timestamp in milliseconds from which to start querying results."
								},
								{
									"key": "to_ts",
									"value": "34312785",
									"description": "Timestamp in milliseconds up to which to query results."
								},
								{
									"key": "probe_dc",
									"value": "magna nostrud",
									"description": "Locations for which to query results."
								},
								{
									"key": "probe_dc",
									"value": "dolor cupidatat in",
									"description": "Locations for which to query results."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the test for which to search results for."
								}
							]
						},
						"description": "Get the last 50 test results summaries for a given Synthetics API test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"last_timestamp_fetched\": -91330506,\n \"results\": [\n  {\n   \"check_time\": 32169684.460330665,\n   \"probe_dc\": \"sint aliquip c\",\n   \"result\": {\n    \"passed\": true,\n    \"timings\": {\n     \"dns\": 83447217.56072265,\n     \"download\": -87026858.10408983,\n     \"firstByte\": 87731301.3553243,\n     \"handshake\": 71228255.0232481,\n     \"redirect\": 64526164.984427124,\n     \"ssl\": -25714740.459759966,\n     \"tcp\": 39566188.76251441,\n     \"total\": 58671301.19068551,\n     \"wait\": 23396491.120963022\n    }\n   },\n   \"result_id\": \"sunt in officia\",\n   \"status\": 0\n  },\n  {\n   \"check_time\": -12446026.431740835,\n   \"probe_dc\": \"tempor sunt laborum mollit\",\n   \"result\": {\n    \"passed\": false,\n    \"timings\": {\n     \"dns\": 72210349.42919666,\n     \"download\": 72184976.47195491,\n     \"firstByte\": -58312953.9878414,\n     \"handshake\": 50120578.66797429,\n     \"redirect\": 62690065.731621,\n     \"ssl\": -76620199.6648936,\n     \"tcp\": -96210862.84376626,\n     \"total\": -84207330.13485262,\n     \"wait\": -37060185.85234729\n    }\n   },\n   \"result_id\": \"culpa ad laboris\",\n   \"status\": 1\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results?from_ts=34312785&to_ts=34312785&probe_dc=non Ut culpa&probe_dc=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results"
									],
									"query": [
										{
											"key": "from_ts",
											"value": "34312785"
										},
										{
											"key": "to_ts",
											"value": "34312785"
										},
										{
											"key": "probe_dc",
											"value": "non Ut culpa"
										},
										{
											"key": "probe_dc",
											"value": "non ipsum sit fugiat"
										}
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an API test result",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"results",
								":result_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the API test to which the target result belongs."
								},
								{
									"key": "result_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the result to get."
								}
							]
						},
						"description": "Get a specific full result from a given (API) Synthetic test."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test or result is not owned by the user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/results/:result_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"results",
										":result_id"
									],
									"variable": [
										{
											"key": "public_id"
										},
										{
											"key": "result_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Pause or start a test",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"new_status\": \"live\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"tests",
								":public_id",
								"status"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "public_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The public ID of the Synthetic test to update."
								}
							]
						},
						"description": "Pause or start a Synthetics test by changing the status."
					},
					"response": [
						{
							"name": "OK - Returns a boolean indicating if the update was successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_status\": \"live\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "true"
						},
						{
							"name": "JSON format is wrong.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_status\": \"live\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_status\": \"live\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "- Synthetic is not activated for the user\n- Test is not owned by the user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_status\": \"live\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/tests/:public_id/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"tests",
										":public_id",
										"status"
									],
									"variable": [
										{
											"key": "public_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all global variables",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of all Synthetics global variables."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"variables\": [\n  {\n   \"description\": \"Example description\",\n   \"name\": \"MY_VARIABLE\",\n   \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n   ],\n   \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n   },\n   \"attributes\": {\n    \"restricted_roles\": [\n     \"laboris proident \",\n     \"in mollit velit\"\n    ]\n   },\n   \"id\": \"in consectetur \",\n   \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"parser\": {\n     \"type\": \"regex\",\n     \"value\": \".*\"\n    },\n    \"field\": \"content-type\"\n   },\n   \"parse_test_public_id\": \"abc-def-123\"\n  },\n  {\n   \"description\": \"Example description\",\n   \"name\": \"MY_VARIABLE\",\n   \"tags\": [\n    \"team:front\",\n    \"test:workflow-1\"\n   ],\n   \"value\": {\n    \"secure\": true,\n    \"value\": \"value\"\n   },\n   \"attributes\": {\n    \"restricted_roles\": [\n     \"adipisicing in dolor anim laboris\",\n     \"in deserunt anim\"\n    ]\n   },\n   \"id\": \"ex aliquip laborum\",\n   \"parse_test_options\": {\n    \"type\": \"http_body\",\n    \"parser\": {\n     \"type\": \"regex\",\n     \"value\": \".*\"\n    },\n    \"field\": \"content-type\"\n   },\n   \"parse_test_public_id\": \"abc-def-123\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a global variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"consequat eiusmod\",\n            \"Excepteur sit\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a Synthetics global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"Example description\",\n \"name\": \"MY_VARIABLE\",\n \"tags\": [\n  \"team:front\",\n  \"test:workflow-1\"\n ],\n \"value\": {\n  \"secure\": true,\n  \"value\": \"value\"\n },\n \"attributes\": {\n  \"restricted_roles\": [\n   \"non adipisicing cillum\",\n   \"minim in\"\n  ]\n },\n \"id\": \"dolore culpa\",\n \"parse_test_options\": {\n  \"type\": \"http_body\",\n  \"parser\": {\n   \"type\": \"regex\",\n   \"value\": \".*\"\n  },\n  \"field\": \"content-type\"\n },\n \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a global variable",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "variable_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the global variable."
								}
							]
						},
						"description": "Delete a Synthetics global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "JSON format is wrong",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a global variable",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "variable_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the global variable."
								}
							]
						},
						"description": "Get the detailed configuration of a global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"Example description\",\n \"name\": \"MY_VARIABLE\",\n \"tags\": [\n  \"team:front\",\n  \"test:workflow-1\"\n ],\n \"value\": {\n  \"secure\": true,\n  \"value\": \"value\"\n },\n \"attributes\": {\n  \"restricted_roles\": [\n   \"non adipisicing cillum\",\n   \"minim in\"\n  ]\n },\n \"id\": \"dolore culpa\",\n \"parse_test_options\": {\n  \"type\": \"http_body\",\n  \"parser\": {\n   \"type\": \"regex\",\n   \"value\": \".*\"\n  },\n  \"field\": \"content-type\"\n },\n \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Edit a global variable",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"consequat eiusmod\",\n            \"Excepteur sit\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"synthetics",
								"variables",
								":variable_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "variable_id",
									"value": "dolor nostrud irure",
									"description": "(Required) The ID of the global variable."
								}
							]
						},
						"description": "Edit a Synthetics global variable."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"Example description\",\n \"name\": \"MY_VARIABLE\",\n \"tags\": [\n  \"team:front\",\n  \"test:workflow-1\"\n ],\n \"value\": {\n  \"secure\": true,\n  \"value\": \"value\"\n },\n \"attributes\": {\n  \"restricted_roles\": [\n   \"non adipisicing cillum\",\n   \"minim in\"\n  ]\n },\n \"id\": \"dolore culpa\",\n \"parse_test_options\": {\n  \"type\": \"http_body\",\n  \"parser\": {\n   \"type\": \"regex\",\n   \"value\": \".*\"\n  },\n  \"field\": \"content-type\"\n },\n \"parse_test_public_id\": \"abc-def-123\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Example description\",\n    \"name\": \"MY_VARIABLE\",\n    \"tags\": [\n        \"team:front\",\n        \"test:workflow-1\"\n    ],\n    \"value\": {\n        \"secure\": true,\n        \"value\": \"value\"\n    },\n    \"attributes\": {\n        \"restricted_roles\": [\n            \"ut n\",\n            \"do\"\n        ]\n    },\n    \"parse_test_options\": {\n        \"type\": \"http_body\",\n        \"parser\": {\n            \"type\": \"regex\",\n            \"value\": \".*\"\n        },\n        \"field\": \"content-type\"\n    },\n    \"parse_test_public_id\": \"abc-def-123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/synthetics/variables/:variable_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"synthetics",
										"variables",
										":variable_id"
									],
									"variable": [
										{
											"key": "variable_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Datadog Synthetics uses simulated user requests and browser rendering to help you ensure uptime,\nidentify regional issues, and track your application performance. Datadog Synthetics tests come in\ntwo different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/?tab=httptest)\nand [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadog’s API to\nmanage both test types programmatically.\n\nFor more information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/)."
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get Tags",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "DD-API-KEY",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts?source=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts"
							],
							"query": [
								{
									"key": "source",
									"value": "dolor nostrud irure",
									"description": "When specified, filters host list to those tags with the specified source."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Return a mapping of tags to hosts for your whole infrastructure."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"tags\": {}\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Remove host tags",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "dolor nostrud irure",
									"description": "The source of the tags (e.g. chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) This endpoint allows you to remove all user-assigned tags for a single host."
								}
							]
						},
						"description": "This endpoint allows you to remove all user-assigned tags\nfor a single host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get host tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "dolor nostrud irure",
									"description": "Source to filter."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) When specified, filters list of tags to those tags with the specified source."
								}
							]
						},
						"description": "Return the list of tags that apply to a given host."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"host\": \"test.host\",\n \"tags\": [\n  \"environment:production\",\n  \"environment:production\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Add tags to a host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "chef",
									"description": "The source of the tags.\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) This endpoint allows you to add new tags to a host, optionally specifying where the tags came from."
								}
							]
						},
						"description": "This endpoint allows you to add new tags to a host,\noptionally specifying where these tags come from."
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"host\": \"test.host\",\n \"tags\": [\n  \"environment:production\",\n  \"environment:production\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=chef",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "chef"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update host tags",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tags",
								"hosts",
								":host_name"
							],
							"query": [
								{
									"key": "source",
									"value": "dolor nostrud irure",
									"description": "The source of the tags (e.g. chef, puppet).\n[Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)"
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "host_name",
									"value": "dolor nostrud irure",
									"description": "(Required) This endpoint allows you to update/replace all in an integration source with those supplied in the request."
								}
							]
						},
						"description": "This endpoint allows you to update/replace all tags in\nan integration source with those supplied in the request."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"host\": \"test.host\",\n \"tags\": [\n  \"environment:production\",\n  \"environment:production\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"host\": \"test.host\",\n    \"tags\": [\n        \"environment:production\",\n        \"environment:production\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tags/hosts/:host_name?source=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"hosts",
										":host_name"
									],
									"query": [
										{
											"key": "source",
											"value": "dolor nostrud irure"
										}
									],
									"variable": [
										{
											"key": "host_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The tag endpoint allows you to assign tags to hosts,\nfor example: `role:database`. Those tags are applied to\nall metrics sent by the host. Refer to hosts by name\n(`yourhost.example.com`) when fetching and applying\ntags to a particular host.\n\nThe component of your infrastructure responsible for a tag is identified\nby a source. For example, some valid sources include nagios, hudson, jenkins,\nusers, feed, chef, puppet, git, bitbucket, fabric, capistrano, etc.\n\nRead more about tags on the dedicated\n[documentation page](https://docs.datadoghq.com/tagging)."
		},
		{
			"name": "Usage Metering",
			"item": [
				{
					"name": "Get the list of available daily custom reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/daily_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"daily_custom_reports"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "34312785",
									"description": "The number of files to return in the response. `[default=60]`."
								},
								{
									"key": "page[number]",
									"value": "34312785",
									"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "The direction to sort by: `[desc, asc]`."
								},
								{
									"key": "sort",
									"value": "start_date",
									"description": "The field to sort by: `[computed_on, size, start_date, end_date]`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get daily custom reports."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/daily_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"daily_custom_reports"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "34312785"
										},
										{
											"key": "page[number]",
											"value": "34312785"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "sort",
											"value": "start_date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"computed_on\": \"sed aliquip\",\n    \"end_date\": \"dolore\",\n    \"size\": 39929159,\n    \"start_date\": \"sunt pariatur nisi\",\n    \"tags\": [\n     \"env\",\n     \"env\"\n    ]\n   },\n   \"id\": \"qui non minim anim\",\n   \"type\": \"reports\"\n  },\n  {\n   \"attributes\": {\n    \"computed_on\": \"nulla officia in minim\",\n    \"end_date\": \"adipisicing ullamco\",\n    \"size\": 14199668,\n    \"start_date\": \"qui aute ex labore\",\n    \"tags\": [\n     \"env\",\n     \"env\"\n    ]\n   },\n   \"id\": \"labore\",\n   \"type\": \"reports\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": 25100739\n  }\n }\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/daily_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"daily_custom_reports"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "34312785"
										},
										{
											"key": "page[number]",
											"value": "34312785"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "sort",
											"value": "start_date"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get specified daily custom reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/daily_custom_reports/:report_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"daily_custom_reports",
								":report_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "report_id",
									"value": "dolor nostrud irure",
									"description": "(Required) Date of the report in the format `YYYY-MM-DD`."
								}
							]
						},
						"description": "Get specified daily custom reports."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/daily_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"daily_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"computed_on\": \"nulla\",\n   \"end_date\": \"pariatur mollit in sunt\",\n   \"location\": \"https://an-s3-or-gs-bucket.s3.amazonaws.com\",\n   \"size\": 81801799,\n   \"start_date\": \"\",\n   \"tags\": [\n    \"env\",\n    \"env\"\n   ]\n  },\n  \"id\": \"in reprehenderit enim\",\n  \"type\": \"reports\"\n },\n \"meta\": {\n  \"page\": {\n   \"total_count\": -60545637\n  }\n }\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/daily_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"daily_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/daily_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"daily_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get the list of available monthly custom reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monthly_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monthly_custom_reports"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "34312785",
									"description": "The number of files to return in the response `[default=60].`"
								},
								{
									"key": "page[number]",
									"value": "34312785",
									"description": "The identifier of the first page to return. This parameter is used for the pagination feature `[default=0]`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "The direction to sort by: `[desc, asc]`."
								},
								{
									"key": "sort",
									"value": "start_date",
									"description": "The field to sort by: `[computed_on, size, start_date, end_date]`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get monthly custom reports."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "34312785"
										},
										{
											"key": "page[number]",
											"value": "34312785"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "sort",
											"value": "start_date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"computed_on\": \"sed aliquip\",\n    \"end_date\": \"dolore\",\n    \"size\": 39929159,\n    \"start_date\": \"sunt pariatur nisi\",\n    \"tags\": [\n     \"env\",\n     \"env\"\n    ]\n   },\n   \"id\": \"qui non minim anim\",\n   \"type\": \"reports\"\n  },\n  {\n   \"attributes\": {\n    \"computed_on\": \"nulla officia in minim\",\n    \"end_date\": \"adipisicing ullamco\",\n    \"size\": 14199668,\n    \"start_date\": \"qui aute ex labore\",\n    \"tags\": [\n     \"env\",\n     \"env\"\n    ]\n   },\n   \"id\": \"labore\",\n   \"type\": \"reports\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": 25100739\n  }\n }\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports?page[size]=34312785&page[number]=34312785&sort_dir=desc&sort=start_date",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "34312785"
										},
										{
											"key": "page[number]",
											"value": "34312785"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "sort",
											"value": "start_date"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get specified monthly custom reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/monthly_custom_reports/:report_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"monthly_custom_reports",
								":report_id"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "report_id",
									"value": "dolor nostrud irure",
									"description": "(Required) Date of the report in the format `YYYY-MM-DD`."
								}
							]
						},
						"description": "Get specified monthly custom reports."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"computed_on\": \"nulla\",\n   \"end_date\": \"pariatur mollit in sunt\",\n   \"location\": \"https://an-s3-or-gs-bucket.s3.amazonaws.com\",\n   \"size\": 81801799,\n   \"start_date\": \"\",\n   \"tags\": [\n    \"env\",\n    \"env\"\n   ]\n  },\n  \"id\": \"in reprehenderit enim\",\n  \"type\": \"reports\"\n },\n \"meta\": {\n  \"page\": {\n   \"total_count\": -60545637\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/monthly_custom_reports/:report_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"monthly_custom_reports",
										":report_id"
									],
									"variable": [
										{
											"key": "report_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for analyzed logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"analyzed_logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for analyzed logs (Security Monitoring)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"analyzed_logs\": -4335389,\n   \"hour\": \"1968-12-02T03:02:50.690Z\"\n  },\n  {\n   \"analyzed_logs\": 46618130,\n   \"hour\": \"1961-12-28T21:31:05.975Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/analyzed_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"analyzed_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get Usage Attribution",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/attribution?start_month=2003-08-24T21:06:35.523Z&fields=profiled_container_usage&end_month=2003-08-24T21:06:35.523Z&sort_direction=desc&sort_name=custom_timeseries_usage&include_descendants=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"attribution"
							],
							"query": [
								{
									"key": "start_month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
								},
								{
									"key": "fields",
									"value": "profiled_container_usage",
									"description": "(Required) Comma-separated list of usage types to return, or `*` for all usage types."
								},
								{
									"key": "end_month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
								},
								{
									"key": "sort_direction",
									"value": "desc",
									"description": "The direction to sort by: `[desc, asc]`."
								},
								{
									"key": "sort_name",
									"value": "custom_timeseries_usage",
									"description": "The field to sort by."
								},
								{
									"key": "include_descendants",
									"value": "false",
									"description": "Include child org usage in the response. Defaults to false."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get Usage Attribution."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/attribution?start_month=2003-08-24T21:06:35.523Z&fields=profiled_container_usage&end_month=2003-08-24T21:06:35.523Z&sort_direction=desc&sort_name=custom_timeseries_usage&include_descendants=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"attribution"
									],
									"query": [
										{
											"key": "start_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "fields",
											"value": "profiled_container_usage"
										},
										{
											"key": "end_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "sort_direction",
											"value": "desc"
										},
										{
											"key": "sort_name",
											"value": "custom_timeseries_usage"
										},
										{
											"key": "include_descendants",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"metadata\": {\n  \"aggregates\": [\n   {\n    \"agg_type\": \"sum\",\n    \"field\": \"custom_timeseries_usage\",\n    \"value\": 51122973.76593289\n   },\n   {\n    \"agg_type\": \"sum\",\n    \"field\": \"custom_timeseries_usage\",\n    \"value\": -96775572.56749836\n   }\n  ],\n  \"pagination\": {\n   \"limit\": 88973535,\n   \"next_record_id\": \"dolore Ut\",\n   \"total_number_of_records\": -80581133\n  }\n },\n \"usage\": [\n  {\n   \"month\": \"1962-04-17T11:31:23.651Z\",\n   \"org_name\": \"et non dolor minim\",\n   \"public_id\": \"adipisicing aliquip laborum\",\n   \"tag_config_source\": \"cupidatat \",\n   \"tags\": {},\n   \"updated_at\": \"laboris laborum do qui\",\n   \"values\": {\n    \"api_percentage\": -98355523.69394618,\n    \"api_usage\": -73778846.37631613,\n    \"apm_host_percentage\": 48067894.601902336,\n    \"apm_host_usage\": -39036850.9355981,\n    \"browser_percentage\": -14656139.12020038,\n    \"browser_usage\": -40855614.51189106,\n    \"container_percentage\": 1924703.043687433,\n    \"container_usage\": -91541219.7497877,\n    \"cspm_container_percentage\": 64817490.56668118,\n    \"cspm_container_usage\": 22994306.183391407,\n    \"cspm_host_percentage\": -346750.9394361973,\n    \"cspm_host_usage\": 41038432.0398899,\n    \"custom_timeseries_percentage\": -68166213.74183702,\n    \"custom_timeseries_usage\": 97506809.50955924,\n    \"cws_container_percentage\": -65769260.02741486,\n    \"cws_container_usage\": -94544732.34343684,\n    \"cws_host_percentage\": 16891285.947783217,\n    \"cws_host_usage\": -10229602.3495228,\n    \"dbm_host_percentage\": -41230341.15096447,\n    \"dbm_host_usage\": 90387013.9868164,\n    \"dbm_queries_percentage\": 63693366.79199073,\n    \"dbm_queries_usage\": 51750036.24931586,\n    \"infra_host_percentage\": -11040717.36033605,\n    \"infra_host_usage\": -61985457.70756323,\n    \"lambda_functions_percentage\": -84904238.85403185,\n    \"lambda_functions_usage\": 46096537.950929046,\n    \"lambda_invocations_percentage\": 80042477.48478311,\n    \"lambda_invocations_usage\": -38973822.83637545,\n    \"lambda_percentage\": -31224509.51220101,\n    \"lambda_usage\": 17553221.02046053,\n    \"npm_host_percentage\": -72796266.18093671,\n    \"npm_host_usage\": -26553740.21519719,\n    \"profiled_containers_percentage\": -9579566.76171045,\n    \"profiled_containers_usage\": -64539633.84261429,\n    \"profiled_hosts_percentage\": -76701977.58629742,\n    \"profiled_hosts_usage\": 57569818.63000199,\n    \"snmp_percentage\": 1868574.7198581696,\n    \"snmp_usage\": 68434431.90049112\n   }\n  },\n  {\n   \"month\": \"2012-11-14T20:40:26.287Z\",\n   \"org_name\": \"aliqua\",\n   \"public_id\": \"proident dolor ea\",\n   \"tag_config_source\": \"commodo dolore consequat laboris\",\n   \"tags\": {},\n   \"updated_at\": \"minim\",\n   \"values\": {\n    \"api_percentage\": -26244074.257652044,\n    \"api_usage\": -30016380.28006251,\n    \"apm_host_percentage\": -34381384.443383075,\n    \"apm_host_usage\": 62181050.37872332,\n    \"browser_percentage\": -99520352.06692465,\n    \"browser_usage\": -88591002.62636028,\n    \"container_percentage\": 433200.80695296824,\n    \"container_usage\": -42505596.142676264,\n    \"cspm_container_percentage\": 57208141.27516487,\n    \"cspm_container_usage\": 30997940.22389774,\n    \"cspm_host_percentage\": -5621389.3349969685,\n    \"cspm_host_usage\": 74163274.57967749,\n    \"custom_timeseries_percentage\": -79899140.5767981,\n    \"custom_timeseries_usage\": -48578086.69636507,\n    \"cws_container_percentage\": 43163987.26539084,\n    \"cws_container_usage\": 59419694.54047707,\n    \"cws_host_percentage\": -38177872.602505006,\n    \"cws_host_usage\": 65866072.58735758,\n    \"dbm_host_percentage\": 23214018.764802262,\n    \"dbm_host_usage\": -39791875.38198343,\n    \"dbm_queries_percentage\": -59531549.934017435,\n    \"dbm_queries_usage\": -88752873.25599271,\n    \"infra_host_percentage\": 17234746.904518828,\n    \"infra_host_usage\": -18658666.549650118,\n    \"lambda_functions_percentage\": -85465428.0393056,\n    \"lambda_functions_usage\": -17267044.754558876,\n    \"lambda_invocations_percentage\": 27492590.661341995,\n    \"lambda_invocations_usage\": 23832114.51720722,\n    \"lambda_percentage\": -66877843.20256713,\n    \"lambda_usage\": -6163482.498696789,\n    \"npm_host_percentage\": 18955537.17198047,\n    \"npm_host_usage\": 61021664.72335094,\n    \"profiled_containers_percentage\": 27310884.676556706,\n    \"profiled_containers_usage\": -17337908.95342961,\n    \"profiled_hosts_percentage\": -90304330.20059912,\n    \"profiled_hosts_usage\": -27441195.040006816,\n    \"snmp_percentage\": 63440393.5264498,\n    \"snmp_usage\": -33319476.820068598\n   }\n  }\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/attribution?start_month=2003-08-24T21:06:35.523Z&fields=profiled_container_usage&end_month=2003-08-24T21:06:35.523Z&sort_direction=desc&sort_name=custom_timeseries_usage&include_descendants=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"attribution"
									],
									"query": [
										{
											"key": "start_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "fields",
											"value": "profiled_container_usage"
										},
										{
											"key": "end_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "sort_direction",
											"value": "desc"
										},
										{
											"key": "sort_name",
											"value": "custom_timeseries_usage"
										},
										{
											"key": "include_descendants",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for audit logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/audit_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"audit_logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for audit logs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/audit_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"audit_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"2001-03-30T01:02:00.002Z\",\n   \"lines_indexed\": 76378413\n  },\n  {\n   \"hour\": \"1949-09-24T12:41:32.642Z\",\n   \"lines_indexed\": 66926467\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/audit_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"audit_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/audit_logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"audit_logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Lambda",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"aws_lambda"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for lambda."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"func_count\": -98106436,\n   \"hour\": \"1995-03-14T10:45:13.477Z\",\n   \"invocations_sum\": -91692196\n  },\n  {\n   \"func_count\": -97395639,\n   \"hour\": \"1943-06-26T08:46:38.794Z\",\n   \"invocations_sum\": 58701485\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/aws_lambda?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"aws_lambda"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get billable usage across your account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"billable-summary"
							],
							"query": [
								{
									"key": "month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage starting this month."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get billable usage across your account."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"billing_plan\": \"do cillum enim\",\n   \"end_date\": \"2006-03-21T17:39:55.942Z\",\n   \"num_orgs\": 77377475,\n   \"org_name\": \"eu quis est velit\",\n   \"public_id\": \"sit\",\n   \"ratio_in_month\": 65487323,\n   \"start_date\": \"2015-12-07T22:25:29.618Z\",\n   \"usage\": {\n    \"apm_host_sum\": {\n     \"account_billable_usage\": 92964667,\n     \"elapsed_usage_hours\": 95988543,\n     \"first_billable_usage_hour\": \"1984-01-12T01:21:41.115Z\",\n     \"last_billable_usage_hour\": \"1965-02-07T03:34:05.288Z\",\n     \"org_billable_usage\": -30135787,\n     \"percentage_in_account\": -19096457.21502073,\n     \"usage_unit\": \"anim commodo fugiat pariatur\"\n    },\n    \"apm_host_top99p\": {\n     \"account_billable_usage\": -14155616,\n     \"elapsed_usage_hours\": -22119465,\n     \"first_billable_usage_hour\": \"1995-05-26T19:01:00.357Z\",\n     \"last_billable_usage_hour\": \"2005-08-07T14:27:17.674Z\",\n     \"org_billable_usage\": 88336014,\n     \"percentage_in_account\": -10451484.48290582,\n     \"usage_unit\": \"quis aliqua Lorem non\"\n    },\n    \"apm_trace_search_sum\": {\n     \"account_billable_usage\": 2817565,\n     \"elapsed_usage_hours\": -44619797,\n     \"first_billable_usage_hour\": \"2009-12-30T04:10:38.524Z\",\n     \"last_billable_usage_hour\": \"1975-10-20T16:40:44.826Z\",\n     \"org_billable_usage\": -85070214,\n     \"percentage_in_account\": -91017435.33180064,\n     \"usage_unit\": \"in commodo\"\n    },\n    \"fargate_container_average\": {\n     \"account_billable_usage\": 39204935,\n     \"elapsed_usage_hours\": -92357911,\n     \"first_billable_usage_hour\": \"1985-10-30T11:32:47.859Z\",\n     \"last_billable_usage_hour\": \"2001-02-26T02:27:41.377Z\",\n     \"org_billable_usage\": 84261271,\n     \"percentage_in_account\": 84181548.26809502,\n     \"usage_unit\": \"irure commodo\"\n    },\n    \"infra_container_sum\": {\n     \"account_billable_usage\": 21844360,\n     \"elapsed_usage_hours\": -74910289,\n     \"first_billable_usage_hour\": \"2002-07-18T03:46:42.452Z\",\n     \"last_billable_usage_hour\": \"1992-03-27T23:43:14.824Z\",\n     \"org_billable_usage\": 60779705,\n     \"percentage_in_account\": 61884712.465881586,\n     \"usage_unit\": \"incididunt dolore voluptate veniam\"\n    },\n    \"infra_host_sum\": {\n     \"account_billable_usage\": 79039007,\n     \"elapsed_usage_hours\": 58474588,\n     \"first_billable_usage_hour\": \"1946-02-14T07:27:14.717Z\",\n     \"last_billable_usage_hour\": \"2004-06-30T16:05:01.958Z\",\n     \"org_billable_usage\": 55032688,\n     \"percentage_in_account\": 85665707.89897364,\n     \"usage_unit\": \"quis anim\"\n    },\n    \"infra_host_top99p\": {\n     \"account_billable_usage\": -52989474,\n     \"elapsed_usage_hours\": -80819710,\n     \"first_billable_usage_hour\": \"1968-02-12T06:16:35.084Z\",\n     \"last_billable_usage_hour\": \"1979-06-21T21:23:14.859Z\",\n     \"org_billable_usage\": 94239432,\n     \"percentage_in_account\": -99104514.32380922,\n     \"usage_unit\": \"deserunt incididunt minim\"\n    },\n    \"iot_top99p\": {\n     \"account_billable_usage\": -16167352,\n     \"elapsed_usage_hours\": -90431709,\n     \"first_billable_usage_hour\": \"1990-08-06T11:11:26.390Z\",\n     \"last_billable_usage_hour\": \"2012-01-30T05:22:01.638Z\",\n     \"org_billable_usage\": 45209094,\n     \"percentage_in_account\": 8408645.138636798,\n     \"usage_unit\": \"in ex Duis tempor ea\"\n    },\n    \"lambda_function_average\": {\n     \"account_billable_usage\": -80036422,\n     \"elapsed_usage_hours\": 69817622,\n     \"first_billable_usage_hour\": \"2015-09-08T07:02:47.705Z\",\n     \"last_billable_usage_hour\": \"1996-08-23T03:59:28.629Z\",\n     \"org_billable_usage\": -83081332,\n     \"percentage_in_account\": 35919984.14788607,\n     \"usage_unit\": \"minim mollit\"\n    },\n    \"logs_indexed_15day_sum\": {\n     \"account_billable_usage\": -70765107,\n     \"elapsed_usage_hours\": 23398978,\n     \"first_billable_usage_hour\": \"1986-06-25T16:47:31.389Z\",\n     \"last_billable_usage_hour\": \"1993-11-10T03:30:18.169Z\",\n     \"org_billable_usage\": -37934002,\n     \"percentage_in_account\": -56139977.345654525,\n     \"usage_unit\": \"ea non esse\"\n    },\n    \"logs_indexed_180day_sum\": {\n     \"account_billable_usage\": 63436132,\n     \"elapsed_usage_hours\": 53305271,\n     \"first_billable_usage_hour\": \"1972-11-28T16:17:07.706Z\",\n     \"last_billable_usage_hour\": \"1947-04-15T18:38:32.395Z\",\n     \"org_billable_usage\": 16092842,\n     \"percentage_in_account\": -41144240.912755325,\n     \"usage_unit\": \"officia amet\"\n    },\n    \"logs_indexed_30day_sum\": {\n     \"account_billable_usage\": -5730506,\n     \"elapsed_usage_hours\": -86232878,\n     \"first_billable_usage_hour\": \"2003-12-11T12:44:29.908Z\",\n     \"last_billable_usage_hour\": \"1974-06-09T04:20:57.234Z\",\n     \"org_billable_usage\": -68725557,\n     \"percentage_in_account\": -27590405.79028724,\n     \"usage_unit\": \"laboris incididunt\"\n    },\n    \"logs_indexed_3day_sum\": {\n     \"account_billable_usage\": -97303602,\n     \"elapsed_usage_hours\": -22177052,\n     \"first_billable_usage_hour\": \"1984-12-18T10:52:51.991Z\",\n     \"last_billable_usage_hour\": \"2009-07-01T20:45:22.741Z\",\n     \"org_billable_usage\": -5202533,\n     \"percentage_in_account\": -51160848.30637169,\n     \"usage_unit\": \"amet\"\n    },\n    \"logs_indexed_45day_sum\": {\n     \"account_billable_usage\": 55409666,\n     \"elapsed_usage_hours\": -44748389,\n     \"first_billable_usage_hour\": \"1967-08-09T12:00:41.342Z\",\n     \"last_billable_usage_hour\": \"1969-06-26T18:20:56.856Z\",\n     \"org_billable_usage\": -86284734,\n     \"percentage_in_account\": 40092419.1423257,\n     \"usage_unit\": \"non voluptate exercitation do\"\n    },\n    \"logs_indexed_60day_sum\": {\n     \"account_billable_usage\": 45818207,\n     \"elapsed_usage_hours\": -56802457,\n     \"first_billable_usage_hour\": \"1954-03-02T01:35:49.447Z\",\n     \"last_billable_usage_hour\": \"1987-10-11T12:41:31.753Z\",\n     \"org_billable_usage\": -94247751,\n     \"percentage_in_account\": 87601934.52396804,\n     \"usage_unit\": \"consequat Duis sint sit\"\n    },\n    \"logs_indexed_7day_sum\": {\n     \"account_billable_usage\": 25982829,\n     \"elapsed_usage_hours\": -10214894,\n     \"first_billable_usage_hour\": \"1979-06-06T06:52:18.646Z\",\n     \"last_billable_usage_hour\": \"1984-04-29T14:16:59.881Z\",\n     \"org_billable_usage\": 35107104,\n     \"percentage_in_account\": -78021814.15284047,\n     \"usage_unit\": \"minim exercitation aliqu\"\n    },\n    \"logs_indexed_90day_sum\": {\n     \"account_billable_usage\": -48551002,\n     \"elapsed_usage_hours\": 41271362,\n     \"first_billable_usage_hour\": \"1985-08-09T01:23:50.773Z\",\n     \"last_billable_usage_hour\": \"1997-04-20T21:37:05.812Z\",\n     \"org_billable_usage\": -76226830,\n     \"percentage_in_account\": 31964099.0182966,\n     \"usage_unit\": \"in pariatur\"\n    },\n    \"logs_indexed_custom_retention_sum\": {\n     \"account_billable_usage\": -16847712,\n     \"elapsed_usage_hours\": -36768699,\n     \"first_billable_usage_hour\": \"2001-06-21T01:03:04.254Z\",\n     \"last_billable_usage_hour\": \"2017-01-11T19:19:33.295Z\",\n     \"org_billable_usage\": 65780559,\n     \"percentage_in_account\": 12507079.559711978,\n     \"usage_unit\": \"nisi laborum ut reprehenderit\"\n    },\n    \"logs_indexed_sum\": {\n     \"account_billable_usage\": -10044160,\n     \"elapsed_usage_hours\": 64114500,\n     \"first_billable_usage_hour\": \"1998-08-15T16:17:43.496Z\",\n     \"last_billable_usage_hour\": \"1989-05-12T21:01:05.744Z\",\n     \"org_billable_usage\": 70375078,\n     \"percentage_in_account\": -59054645.741471924,\n     \"usage_unit\": \"sed mollit\"\n    },\n    \"logs_ingested_sum\": {\n     \"account_billable_usage\": 7520981,\n     \"elapsed_usage_hours\": 96156954,\n     \"first_billable_usage_hour\": \"1990-10-03T07:43:22.840Z\",\n     \"last_billable_usage_hour\": \"1976-09-27T00:53:30.296Z\",\n     \"org_billable_usage\": 70191188,\n     \"percentage_in_account\": -60900924.06908205,\n     \"usage_unit\": \"in tempor\"\n    },\n    \"network_device_top99p\": {\n     \"account_billable_usage\": -85246074,\n     \"elapsed_usage_hours\": -77560288,\n     \"first_billable_usage_hour\": \"1953-01-20T18:25:26.970Z\",\n     \"last_billable_usage_hour\": \"2019-03-31T05:50:59.892Z\",\n     \"org_billable_usage\": -98549363,\n     \"percentage_in_account\": -36483736.57626873,\n     \"usage_unit\": \"conse\"\n    },\n    \"npm_flow_sum\": {\n     \"account_billable_usage\": -6554012,\n     \"elapsed_usage_hours\": 12613094,\n     \"first_billable_usage_hour\": \"2011-11-24T11:40:23.078Z\",\n     \"last_billable_usage_hour\": \"1993-11-19T16:37:22.409Z\",\n     \"org_billable_usage\": -9150454,\n     \"percentage_in_account\": -3494431.201451674,\n     \"usage_unit\": \"do ex commodo Duis\"\n    },\n    \"npm_host_sum\": {\n     \"account_billable_usage\": 84587459,\n     \"elapsed_usage_hours\": 25247020,\n     \"first_billable_usage_hour\": \"1980-03-02T19:15:51.261Z\",\n     \"last_billable_usage_hour\": \"1966-01-12T22:56:46.504Z\",\n     \"org_billable_usage\": -73944068,\n     \"percentage_in_account\": 67866901.02825284,\n     \"usage_unit\": \"adipisicing anim ipsum Excepteur\"\n    },\n    \"npm_host_top99p\": {\n     \"account_billable_usage\": 42888736,\n     \"elapsed_usage_hours\": -70925007,\n     \"first_billable_usage_hour\": \"2008-08-21T20:56:05.771Z\",\n     \"last_billable_usage_hour\": \"1962-11-05T20:09:03.514Z\",\n     \"org_billable_usage\": 23576081,\n     \"percentage_in_account\": -7260230.668730691,\n     \"usage_unit\": \"culpa occaecat anim laboris reprehenderit\"\n    },\n    \"prof_container_sum\": {\n     \"account_billable_usage\": 74232677,\n     \"elapsed_usage_hours\": 44925239,\n     \"first_billable_usage_hour\": \"1991-08-26T00:47:10.543Z\",\n     \"last_billable_usage_hour\": \"1955-09-20T03:41:43.478Z\",\n     \"org_billable_usage\": 59056732,\n     \"percentage_in_account\": -27419241.560421616,\n     \"usage_unit\": \"anim non \"\n    },\n    \"prof_host_top99p\": {\n     \"account_billable_usage\": 15340735,\n     \"elapsed_usage_hours\": 86366156,\n     \"first_billable_usage_hour\": \"1957-10-02T07:01:23.629Z\",\n     \"last_billable_usage_hour\": \"2019-08-23T05:00:22.661Z\",\n     \"org_billable_usage\": -71987075,\n     \"percentage_in_account\": 95579591.95186135,\n     \"usage_unit\": \"proident officia consequat Duis\"\n    },\n    \"rum_sum\": {\n     \"account_billable_usage\": 91546855,\n     \"elapsed_usage_hours\": 8226084,\n     \"first_billable_usage_hour\": \"1964-11-25T23:35:39.373Z\",\n     \"last_billable_usage_hour\": \"2017-07-06T15:58:18.074Z\",\n     \"org_billable_usage\": 56556751,\n     \"percentage_in_account\": -83935048.80949636,\n     \"usage_unit\": \"quis si\"\n    },\n    \"serverless_invocation_sum\": {\n     \"account_billable_usage\": -87138934,\n     \"elapsed_usage_hours\": 19805031,\n     \"first_billable_usage_hour\": \"1975-09-01T06:10:39.422Z\",\n     \"last_billable_usage_hour\": \"1989-11-24T15:22:03.006Z\",\n     \"org_billable_usage\": -30427040,\n     \"percentage_in_account\": 36301383.08953619,\n     \"usage_unit\": \"proident laboris ea mollit consequ\"\n    },\n    \"siem_sum\": {\n     \"account_billable_usage\": -94862146,\n     \"elapsed_usage_hours\": 85263160,\n     \"first_billable_usage_hour\": \"1997-10-26T05:36:04.217Z\",\n     \"last_billable_usage_hour\": \"1963-06-08T09:31:45.802Z\",\n     \"org_billable_usage\": 49323172,\n     \"percentage_in_account\": 36757887.77088046,\n     \"usage_unit\": \"anim in adipisicing\"\n    },\n    \"synthetics_api_tests_sum\": {\n     \"account_billable_usage\": -3814612,\n     \"elapsed_usage_hours\": -68006136,\n     \"first_billable_usage_hour\": \"1956-11-24T03:09:26.800Z\",\n     \"last_billable_usage_hour\": \"2002-08-25T21:23:42.959Z\",\n     \"org_billable_usage\": 65219806,\n     \"percentage_in_account\": -60665166.84038961,\n     \"usage_unit\": \"voluptate mollit\"\n    },\n    \"synthetics_browser_checks_sum\": {\n     \"account_billable_usage\": -23183627,\n     \"elapsed_usage_hours\": 16444459,\n     \"first_billable_usage_hour\": \"1950-03-19T04:43:14.929Z\",\n     \"last_billable_usage_hour\": \"1997-04-18T07:40:53.376Z\",\n     \"org_billable_usage\": 52380066,\n     \"percentage_in_account\": 29771038.814307228,\n     \"usage_unit\": \"ea Duis do officia\"\n    },\n    \"timeseries_average\": {\n     \"account_billable_usage\": 4352503,\n     \"elapsed_usage_hours\": -25407823,\n     \"first_billable_usage_hour\": \"1966-08-30T05:26:13.294Z\",\n     \"last_billable_usage_hour\": \"2013-07-01T06:39:08.977Z\",\n     \"org_billable_usage\": 17633459,\n     \"percentage_in_account\": 99566255.19643727,\n     \"usage_unit\": \"officia quis dolor\"\n    }\n   }\n  },\n  {\n   \"billing_plan\": \"Duis\",\n   \"end_date\": \"1996-10-01T21:46:32.371Z\",\n   \"num_orgs\": 54957768,\n   \"org_name\": \"dolore nisi\",\n   \"public_id\": \"officia eiusmod culpa consequ\",\n   \"ratio_in_month\": -27798002,\n   \"start_date\": \"1972-01-15T22:31:09.606Z\",\n   \"usage\": {\n    \"apm_host_sum\": {\n     \"account_billable_usage\": 82971480,\n     \"elapsed_usage_hours\": -44448951,\n     \"first_billable_usage_hour\": \"1992-01-06T17:53:36.845Z\",\n     \"last_billable_usage_hour\": \"2005-08-10T07:28:28.407Z\",\n     \"org_billable_usage\": 56100847,\n     \"percentage_in_account\": -26654607.05661404,\n     \"usage_unit\": \"aute\"\n    },\n    \"apm_host_top99p\": {\n     \"account_billable_usage\": -24157998,\n     \"elapsed_usage_hours\": 88131452,\n     \"first_billable_usage_hour\": \"1968-03-29T22:22:59.448Z\",\n     \"last_billable_usage_hour\": \"1966-09-11T22:16:48.164Z\",\n     \"org_billable_usage\": -79718890,\n     \"percentage_in_account\": 83210768.33806416,\n     \"usage_unit\": \"do fugiat velit\"\n    },\n    \"apm_trace_search_sum\": {\n     \"account_billable_usage\": -51778215,\n     \"elapsed_usage_hours\": 57858374,\n     \"first_billable_usage_hour\": \"2006-09-16T13:53:16.268Z\",\n     \"last_billable_usage_hour\": \"1991-06-13T01:00:47.031Z\",\n     \"org_billable_usage\": -30861843,\n     \"percentage_in_account\": -37276226.96293835,\n     \"usage_unit\": \"nulla in reprehenderit quis\"\n    },\n    \"fargate_container_average\": {\n     \"account_billable_usage\": -35225244,\n     \"elapsed_usage_hours\": -77224264,\n     \"first_billable_usage_hour\": \"1946-09-04T15:54:10.189Z\",\n     \"last_billable_usage_hour\": \"1943-09-10T09:06:59.744Z\",\n     \"org_billable_usage\": -43978269,\n     \"percentage_in_account\": -36351863.472719304,\n     \"usage_unit\": \"ut\"\n    },\n    \"infra_container_sum\": {\n     \"account_billable_usage\": 40843507,\n     \"elapsed_usage_hours\": 55389985,\n     \"first_billable_usage_hour\": \"1956-08-01T23:37:06.904Z\",\n     \"last_billable_usage_hour\": \"2006-04-14T19:09:21.752Z\",\n     \"org_billable_usage\": 39532324,\n     \"percentage_in_account\": 48452923.9696933,\n     \"usage_unit\": \"eu minim in adipisicing\"\n    },\n    \"infra_host_sum\": {\n     \"account_billable_usage\": -73491249,\n     \"elapsed_usage_hours\": 75873865,\n     \"first_billable_usage_hour\": \"1962-05-26T10:48:28.807Z\",\n     \"last_billable_usage_hour\": \"1952-12-27T18:20:58.152Z\",\n     \"org_billable_usage\": -47718218,\n     \"percentage_in_account\": 39450236.439670414,\n     \"usage_unit\": \"nisi dolore\"\n    },\n    \"infra_host_top99p\": {\n     \"account_billable_usage\": 67321872,\n     \"elapsed_usage_hours\": 56651758,\n     \"first_billable_usage_hour\": \"2010-04-06T11:00:25.078Z\",\n     \"last_billable_usage_hour\": \"1975-08-17T04:16:38.380Z\",\n     \"org_billable_usage\": 33368672,\n     \"percentage_in_account\": 51894136.29906911,\n     \"usage_unit\": \"dolor mollit ven\"\n    },\n    \"iot_top99p\": {\n     \"account_billable_usage\": -93230331,\n     \"elapsed_usage_hours\": 55947116,\n     \"first_billable_usage_hour\": \"2006-10-25T04:06:58.227Z\",\n     \"last_billable_usage_hour\": \"1989-01-28T06:22:51.227Z\",\n     \"org_billable_usage\": -45874538,\n     \"percentage_in_account\": -81635947.39240652,\n     \"usage_unit\": \"id in non culpa quis\"\n    },\n    \"lambda_function_average\": {\n     \"account_billable_usage\": -44865129,\n     \"elapsed_usage_hours\": -82140283,\n     \"first_billable_usage_hour\": \"1989-10-24T22:55:37.195Z\",\n     \"last_billable_usage_hour\": \"1990-06-15T15:09:43.047Z\",\n     \"org_billable_usage\": 7762398,\n     \"percentage_in_account\": 67246797.41736844,\n     \"usage_unit\": \"Duis eiusmod cillum eu ut\"\n    },\n    \"logs_indexed_15day_sum\": {\n     \"account_billable_usage\": 56867961,\n     \"elapsed_usage_hours\": 26263762,\n     \"first_billable_usage_hour\": \"1945-04-28T19:41:54.548Z\",\n     \"last_billable_usage_hour\": \"1992-01-16T17:32:11.104Z\",\n     \"org_billable_usage\": 30489153,\n     \"percentage_in_account\": -87161805.88115185,\n     \"usage_unit\": \"dolor ex\"\n    },\n    \"logs_indexed_180day_sum\": {\n     \"account_billable_usage\": -91445657,\n     \"elapsed_usage_hours\": -69527333,\n     \"first_billable_usage_hour\": \"1970-04-24T19:57:58.672Z\",\n     \"last_billable_usage_hour\": \"1944-08-30T11:47:19.775Z\",\n     \"org_billable_usage\": -86477149,\n     \"percentage_in_account\": -44783577.37688832,\n     \"usage_unit\": \"nulla \"\n    },\n    \"logs_indexed_30day_sum\": {\n     \"account_billable_usage\": -58005999,\n     \"elapsed_usage_hours\": -45195414,\n     \"first_billable_usage_hour\": \"1971-02-10T21:23:27.316Z\",\n     \"last_billable_usage_hour\": \"2021-06-09T17:09:09.941Z\",\n     \"org_billable_usage\": -56317098,\n     \"percentage_in_account\": -80205507.38621362,\n     \"usage_unit\": \"Duis sit\"\n    },\n    \"logs_indexed_3day_sum\": {\n     \"account_billable_usage\": 28208221,\n     \"elapsed_usage_hours\": 18062326,\n     \"first_billable_usage_hour\": \"1958-05-06T07:52:45.377Z\",\n     \"last_billable_usage_hour\": \"1971-08-29T17:44:27.763Z\",\n     \"org_billable_usage\": -80352959,\n     \"percentage_in_account\": -90996620.15441106,\n     \"usage_unit\": \"dolore culpa\"\n    },\n    \"logs_indexed_45day_sum\": {\n     \"account_billable_usage\": -57258342,\n     \"elapsed_usage_hours\": -5364801,\n     \"first_billable_usage_hour\": \"1965-06-15T16:59:11.201Z\",\n     \"last_billable_usage_hour\": \"1968-10-01T19:23:39.495Z\",\n     \"org_billable_usage\": -56628738,\n     \"percentage_in_account\": -71714431.4365631,\n     \"usage_unit\": \"ut in nulla tempor voluptate\"\n    },\n    \"logs_indexed_60day_sum\": {\n     \"account_billable_usage\": 16193001,\n     \"elapsed_usage_hours\": -9822592,\n     \"first_billable_usage_hour\": \"1945-08-23T14:25:25.551Z\",\n     \"last_billable_usage_hour\": \"2002-05-03T12:44:18.837Z\",\n     \"org_billable_usage\": -37586109,\n     \"percentage_in_account\": 4008065.494668588,\n     \"usage_unit\": \"proident nostrud\"\n    },\n    \"logs_indexed_7day_sum\": {\n     \"account_billable_usage\": 91709579,\n     \"elapsed_usage_hours\": -33533211,\n     \"first_billable_usage_hour\": \"1987-07-20T09:20:44.982Z\",\n     \"last_billable_usage_hour\": \"1974-12-27T23:02:10.194Z\",\n     \"org_billable_usage\": 3581379,\n     \"percentage_in_account\": -82726111.68105617,\n     \"usage_unit\": \"esse Excepteur e\"\n    },\n    \"logs_indexed_90day_sum\": {\n     \"account_billable_usage\": 5251034,\n     \"elapsed_usage_hours\": 57130560,\n     \"first_billable_usage_hour\": \"1997-05-06T04:15:29.172Z\",\n     \"last_billable_usage_hour\": \"2006-07-30T04:22:26.123Z\",\n     \"org_billable_usage\": 72897457,\n     \"percentage_in_account\": -73149079.16805136,\n     \"usage_unit\": \"incididunt eiusmod labore amet\"\n    },\n    \"logs_indexed_custom_retention_sum\": {\n     \"account_billable_usage\": 12593096,\n     \"elapsed_usage_hours\": 11148977,\n     \"first_billable_usage_hour\": \"1990-05-31T00:58:19.593Z\",\n     \"last_billable_usage_hour\": \"1978-10-20T21:31:51.458Z\",\n     \"org_billable_usage\": 1479090,\n     \"percentage_in_account\": 17465643.06233886,\n     \"usage_unit\": \"esse ad\"\n    },\n    \"logs_indexed_sum\": {\n     \"account_billable_usage\": -66958203,\n     \"elapsed_usage_hours\": 31399934,\n     \"first_billable_usage_hour\": \"2019-10-30T15:07:49.117Z\",\n     \"last_billable_usage_hour\": \"1982-01-30T00:16:59.425Z\",\n     \"org_billable_usage\": 31318426,\n     \"percentage_in_account\": -24547485.60632965,\n     \"usage_unit\": \"culpa exercitation veniam ut qui\"\n    },\n    \"logs_ingested_sum\": {\n     \"account_billable_usage\": -87217376,\n     \"elapsed_usage_hours\": 25120262,\n     \"first_billable_usage_hour\": \"1957-03-08T02:37:08.323Z\",\n     \"last_billable_usage_hour\": \"1968-09-12T16:41:23.649Z\",\n     \"org_billable_usage\": 43115367,\n     \"percentage_in_account\": -42785381.46640707,\n     \"usage_unit\": \"ipsum nostrud deserunt cillum\"\n    },\n    \"network_device_top99p\": {\n     \"account_billable_usage\": 33116047,\n     \"elapsed_usage_hours\": 57397776,\n     \"first_billable_usage_hour\": \"1999-05-08T14:05:34.381Z\",\n     \"last_billable_usage_hour\": \"1954-04-03T18:42:26.487Z\",\n     \"org_billable_usage\": 63044656,\n     \"percentage_in_account\": -25590462.888099104,\n     \"usage_unit\": \"commodo ea est\"\n    },\n    \"npm_flow_sum\": {\n     \"account_billable_usage\": 1326326,\n     \"elapsed_usage_hours\": 74513910,\n     \"first_billable_usage_hour\": \"2018-04-26T17:28:22.683Z\",\n     \"last_billable_usage_hour\": \"1989-09-28T04:39:55.340Z\",\n     \"org_billable_usage\": 54009722,\n     \"percentage_in_account\": -90408723.77565683,\n     \"usage_unit\": \"ullam\"\n    },\n    \"npm_host_sum\": {\n     \"account_billable_usage\": 44836734,\n     \"elapsed_usage_hours\": -54186483,\n     \"first_billable_usage_hour\": \"1986-11-19T01:16:22.622Z\",\n     \"last_billable_usage_hour\": \"2020-12-05T20:09:15.891Z\",\n     \"org_billable_usage\": 93509741,\n     \"percentage_in_account\": 67495209.14229596,\n     \"usage_unit\": \"reprehenderit ut\"\n    },\n    \"npm_host_top99p\": {\n     \"account_billable_usage\": -62118175,\n     \"elapsed_usage_hours\": -26299472,\n     \"first_billable_usage_hour\": \"2013-02-25T02:21:18.001Z\",\n     \"last_billable_usage_hour\": \"1996-08-26T01:18:25.964Z\",\n     \"org_billable_usage\": 43002609,\n     \"percentage_in_account\": -42757515.63975785,\n     \"usage_unit\": \"dolor dolor Excepteur\"\n    },\n    \"prof_container_sum\": {\n     \"account_billable_usage\": -70462031,\n     \"elapsed_usage_hours\": 53535602,\n     \"first_billable_usage_hour\": \"1993-08-23T17:52:07.357Z\",\n     \"last_billable_usage_hour\": \"1978-01-08T06:24:25.326Z\",\n     \"org_billable_usage\": -26285053,\n     \"percentage_in_account\": -39184342.33724488,\n     \"usage_unit\": \"voluptate laboris commodo est\"\n    },\n    \"prof_host_top99p\": {\n     \"account_billable_usage\": 98211904,\n     \"elapsed_usage_hours\": -48561012,\n     \"first_billable_usage_hour\": \"1966-11-25T12:54:53.730Z\",\n     \"last_billable_usage_hour\": \"1950-08-23T03:32:02.140Z\",\n     \"org_billable_usage\": 76668506,\n     \"percentage_in_account\": 33548582.989563733,\n     \"usage_unit\": \"Ut sint ut ex Duis\"\n    },\n    \"rum_sum\": {\n     \"account_billable_usage\": 93704166,\n     \"elapsed_usage_hours\": 77622945,\n     \"first_billable_usage_hour\": \"1987-09-21T16:54:32.648Z\",\n     \"last_billable_usage_hour\": \"1943-07-12T18:38:34.494Z\",\n     \"org_billable_usage\": 16192742,\n     \"percentage_in_account\": 71606056.47253376,\n     \"usage_unit\": \"fugiat sint\"\n    },\n    \"serverless_invocation_sum\": {\n     \"account_billable_usage\": 72981916,\n     \"elapsed_usage_hours\": 11220606,\n     \"first_billable_usage_hour\": \"1946-06-03T23:35:40.176Z\",\n     \"last_billable_usage_hour\": \"2004-09-06T03:27:45.755Z\",\n     \"org_billable_usage\": 56225688,\n     \"percentage_in_account\": -14380650.041836336,\n     \"usage_unit\": \"exercitation ex culpa quis\"\n    },\n    \"siem_sum\": {\n     \"account_billable_usage\": 21252580,\n     \"elapsed_usage_hours\": 7175599,\n     \"first_billable_usage_hour\": \"1995-07-17T00:16:36.009Z\",\n     \"last_billable_usage_hour\": \"2019-03-02T05:39:37.522Z\",\n     \"org_billable_usage\": -4792680,\n     \"percentage_in_account\": -68902802.82833685,\n     \"usage_unit\": \"laborum fugiat\"\n    },\n    \"synthetics_api_tests_sum\": {\n     \"account_billable_usage\": 22695823,\n     \"elapsed_usage_hours\": -96633304,\n     \"first_billable_usage_hour\": \"1966-09-05T12:22:13.777Z\",\n     \"last_billable_usage_hour\": \"2000-10-30T16:11:50.145Z\",\n     \"org_billable_usage\": 63604576,\n     \"percentage_in_account\": -24342566.82615663,\n     \"usage_unit\": \"in\"\n    },\n    \"synthetics_browser_checks_sum\": {\n     \"account_billable_usage\": 52108579,\n     \"elapsed_usage_hours\": 75415681,\n     \"first_billable_usage_hour\": \"1992-08-27T07:16:35.092Z\",\n     \"last_billable_usage_hour\": \"1951-07-12T09:36:40.590Z\",\n     \"org_billable_usage\": -46729247,\n     \"percentage_in_account\": 67522715.50340834,\n     \"usage_unit\": \"irure amet\"\n    },\n    \"timeseries_average\": {\n     \"account_billable_usage\": 22761812,\n     \"elapsed_usage_hours\": 67097505,\n     \"first_billable_usage_hour\": \"1998-05-14T05:38:40.101Z\",\n     \"last_billable_usage_hour\": \"1988-02-18T09:31:32.444Z\",\n     \"org_billable_usage\": -48497876,\n     \"percentage_in_account\": 64311907.22784108,\n     \"usage_unit\": \"minim est\"\n    }\n   }\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/billable-summary?month=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"billable-summary"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for CSPM",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"cspm"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for Cloud Security Posture Management (CSPM)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"container_count\": 59426510,\n   \"host_count\": -88344298,\n   \"hour\": \"2021-03-04T04:36:38.102Z\"\n  },\n  {\n   \"container_count\": -82371906,\n   \"host_count\": -10165717,\n   \"hour\": \"1968-04-03T18:01:27.996Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cspm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cspm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Cloud Workload Security",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"cws"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for Cloud Workload Security."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"cws_container_count\": 34208447,\n   \"cws_host_count\": 52124267,\n   \"hour\": \"2017-07-19T15:02:43.160Z\"\n  },\n  {\n   \"cws_container_count\": 96236216,\n   \"cws_host_count\": 86998939,\n   \"hour\": \"1974-01-19T08:49:23.693Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/cws?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"cws"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Database Monitoring",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"dbm"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for Database Monitoring"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"dbm_host_count\": 61999005,\n   \"dbm_queries_count\": 10771410,\n   \"hour\": \"1958-12-21T10:03:17.347Z\"\n  },\n  {\n   \"dbm_host_count\": 72778161,\n   \"dbm_queries_count\": -71161080,\n   \"hour\": \"2009-09-07T04:30:30.232Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/dbm?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"dbm"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Fargate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"fargate"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for [Fargate](https://docs.datadoghq.com/integrations/ecs_fargate/)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"2018-06-20T23:24:25.260Z\",\n   \"tasks_count\": -77037131\n  },\n  {\n   \"hour\": \"2005-01-03T00:53:37.727Z\",\n   \"tasks_count\": -5453949\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/fargate?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"fargate"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for hosts and containers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"hosts"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for hosts and containers."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"agent_host_count\": 44852351,\n   \"alibaba_host_count\": 52137288,\n   \"apm_azure_app_service_host_count\": -29610351,\n   \"apm_host_count\": -18025221,\n   \"aws_host_count\": -71932330,\n   \"azure_host_count\": 50638367,\n   \"container_count\": -42613894,\n   \"gcp_host_count\": 72637207,\n   \"heroku_host_count\": 37930876,\n   \"host_count\": 40532077,\n   \"hour\": \"1989-09-20T14:00:02.121Z\",\n   \"infra_azure_app_service\": -67307386,\n   \"opentelemetry_host_count\": 60056612,\n   \"vsphere_host_count\": -52608754\n  },\n  {\n   \"agent_host_count\": -5984914,\n   \"alibaba_host_count\": -24440377,\n   \"apm_azure_app_service_host_count\": -9908738,\n   \"apm_host_count\": -43373054,\n   \"aws_host_count\": -32767989,\n   \"azure_host_count\": -29164325,\n   \"container_count\": 39540018,\n   \"gcp_host_count\": 9935137,\n   \"heroku_host_count\": 91828846,\n   \"host_count\": -43598835,\n   \"hour\": \"1949-08-25T06:27:18.391Z\",\n   \"infra_azure_app_service\": 76987119,\n   \"opentelemetry_host_count\": -54737257,\n   \"vsphere_host_count\": -21389340\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for incident management",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"incident-management"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for incident management."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1965-10-21T13:54:47.985Z\",\n   \"monthly_active_users\": -92339982\n  },\n  {\n   \"hour\": \"1954-04-30T08:18:05.529Z\",\n   \"monthly_active_users\": -73964966\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/incident-management?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"incident-management"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for indexed spans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"indexed-spans"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for indexed spans."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1948-02-14T16:04:48.262Z\",\n   \"indexed_events_count\": -17439620\n  },\n  {\n   \"hour\": \"1947-05-16T06:46:10.921Z\",\n   \"indexed_events_count\": 510929\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/indexed-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"indexed-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for ingested spans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"ingested-spans"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for ingested spans."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1946-03-18T15:31:40.603Z\",\n   \"ingested_events_bytes\": -27391100\n  },\n  {\n   \"hour\": \"2015-06-17T22:11:26.077Z\",\n   \"ingested_events_bytes\": -59106500\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/ingested-spans?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"ingested-spans"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for IoT",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"iot"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for IoT."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"2018-10-03T06:16:53.290Z\",\n   \"iot_device_count\": 32209526\n  },\n  {\n   \"hour\": \"1943-10-03T03:29:42.295Z\",\n   \"iot_device_count\": -17423531\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/iot?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"iot"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for logs."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"billable_ingested_bytes\": 85522254,\n   \"hour\": \"2008-12-09T20:11:16.433Z\",\n   \"indexed_events_count\": 98107531,\n   \"ingested_events_bytes\": -32074763,\n   \"logs_live_indexed_count\": -79104483,\n   \"logs_live_ingested_bytes\": 82354032,\n   \"logs_rehydrated_indexed_count\": 78885748,\n   \"logs_rehydrated_ingested_bytes\": -47921017\n  },\n  {\n   \"billable_ingested_bytes\": -28442468,\n   \"hour\": \"1944-10-17T11:47:52.106Z\",\n   \"indexed_events_count\": -86522475,\n   \"ingested_events_bytes\": 64045285,\n   \"logs_live_indexed_count\": 34237447,\n   \"logs_live_ingested_bytes\": 21960394,\n   \"logs_rehydrated_indexed_count\": 32538162,\n   \"logs_rehydrated_ingested_bytes\": -97861635\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly logs usage by retention",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs-by-retention"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for indexed logs by retention period."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"indexed_events_count\": -96988194,\n   \"live_indexed_events_count\": 56998936,\n   \"rehydrated_indexed_events_count\": 23418937,\n   \"retention\": \"in officia do cupidatat\"\n  },\n  {\n   \"indexed_events_count\": 64121156,\n   \"live_indexed_events_count\": 25626054,\n   \"rehydrated_indexed_events_count\": -61890403,\n   \"retention\": \"sit voluptate cillum\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs-by-retention?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs-by-retention"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Logs by Index",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&index_name=magna nostrud&index_name=dolor cupidatat in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"logs_by_index"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								},
								{
									"key": "index_name",
									"value": "magna nostrud",
									"description": "Comma-separated list of log index names."
								},
								{
									"key": "index_name",
									"value": "dolor cupidatat in",
									"description": "Comma-separated list of log index names."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for logs by index."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&index_name=non Ut culpa&index_name=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "index_name",
											"value": "non Ut culpa"
										},
										{
											"key": "index_name",
											"value": "non ipsum sit fugiat"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"event_count\": -21145090,\n   \"hour\": \"2013-06-30T09:08:34.229Z\",\n   \"index_id\": \"sunt sit aute\",\n   \"index_name\": \"voluptate officia do nostrud anim\",\n   \"retention\": 26314833\n  },\n  {\n   \"event_count\": -57308309,\n   \"hour\": \"1997-03-30T22:02:27.973Z\",\n   \"index_id\": \"cillum dolore proident\",\n   \"index_name\": \"est dolor mollit nostrud\",\n   \"retention\": -4795710\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&index_name=non Ut culpa&index_name=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "index_name",
											"value": "non Ut culpa"
										},
										{
											"key": "index_name",
											"value": "non ipsum sit fugiat"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/logs_by_index?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&index_name=non Ut culpa&index_name=non ipsum sit fugiat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"logs_by_index"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "index_name",
											"value": "non Ut culpa"
										},
										{
											"key": "index_name",
											"value": "non ipsum sit fugiat"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Network Flows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"network_flows"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for network flows."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1984-11-04T05:41:06.129Z\",\n   \"indexed_event_count\": 20866930\n  },\n  {\n   \"hour\": \"2015-12-23T01:25:56.449Z\",\n   \"indexed_event_count\": 65992856\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_flows?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_flows"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Network Hosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"network_hosts"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for network hosts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"host_count\": 6704105,\n   \"hour\": \"2007-06-11T22:06:18.736Z\"\n  },\n  {\n   \"host_count\": -85607112,\n   \"hour\": \"2001-03-05T07:55:10.321Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/network_hosts?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"network_hosts"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for profiled hosts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"profiling"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for profiled hosts."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"avg_container_agent_count\": 26359712,\n   \"host_count\": 86539938,\n   \"hour\": \"2019-07-07T22:17:16.866Z\"\n  },\n  {\n   \"avg_container_agent_count\": -52683534,\n   \"host_count\": -61305159,\n   \"hour\": \"1967-10-15T05:53:51.720Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/profiling?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"profiling"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for RUM Sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&type=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"rum_sessions"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								},
								{
									"key": "type",
									"value": "dolor nostrud irure",
									"description": "RUM type: `[browser, mobile]`. Defaults to `browser`."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/) Sessions."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&type=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "type",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1962-01-25T15:07:22.503Z\",\n   \"session_count\": -12761605,\n   \"session_count_android\": 64964648,\n   \"session_count_ios\": -19334840\n  },\n  {\n   \"hour\": \"2017-10-28T14:28:23.091Z\",\n   \"session_count\": 95444578,\n   \"session_count_android\": -63578143,\n   \"session_count_ios\": 51882166\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&type=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "type",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/rum_sessions?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z&type=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"rum_sessions"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "type",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for SNMP devices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"snmp"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending\n**before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for SNMP devices."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"1991-11-03T21:18:59.210Z\",\n   \"snmp_devices\": -25708724\n  },\n  {\n   \"hour\": \"2015-07-08T12:10:12.699Z\",\n   \"snmp_devices\": 71707941\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/snmp?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"snmp"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get usage across your multi-org account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=2003-08-24T21:06:35.523Z&end_month=2003-08-24T21:06:35.523Z&include_org_details=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"summary"
							],
							"query": [
								{
									"key": "start_month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.\nMaximum of 15 months ago."
								},
								{
									"key": "end_month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage ending this month."
								},
								{
									"key": "include_org_details",
									"value": "false",
									"description": "Include usage summaries for each sub-org."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get usage across your multi-org account. You must have the multi-org feature enabled."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=2003-08-24T21:06:35.523Z&end_month=2003-08-24T21:06:35.523Z&include_org_details=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "include_org_details",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"agent_host_top99p_sum\": -54440861,\n \"apm_azure_app_service_host_top99p_sum\": 7867553,\n \"apm_host_top99p_sum\": 59151406,\n \"audit_logs_lines_indexed_agg_sum\": -69757369,\n \"aws_host_top99p_sum\": 937098,\n \"aws_lambda_func_count\": -46421453,\n \"aws_lambda_invocations_sum\": 4607026,\n \"azure_app_service_top99p_sum\": -79383047,\n \"azure_host_top99p_sum\": 46694290,\n \"billable_ingested_bytes_agg_sum\": -38883584,\n \"container_avg_sum\": -80651662,\n \"container_hwm_sum\": 84931613,\n \"cspm_container_avg_sum\": -83655331,\n \"cspm_container_hwm_sum\": -95929566,\n \"cspm_host_top99p_sum\": -64114858,\n \"custom_ts_sum\": -34851040,\n \"cws_containers_avg_sum\": 9726632,\n \"cws_host_top99p_sum\": 64589863,\n \"dbm_host_top99p_sum\": -27001610,\n \"dbm_queries_agg_sum\": -18600635,\n \"end_date\": \"2001-10-25T05:42:12.642Z\",\n \"fargate_tasks_count_avg_sum\": 23984401,\n \"fargate_tasks_count_hwm_sum\": -20539106,\n \"gcp_host_top99p_sum\": -99333207,\n \"heroku_host_top99p_sum\": 65617614,\n \"incident_management_monthly_active_users_hwm_sum\": 80149052,\n \"indexed_events_count_agg_sum\": 44970743,\n \"infra_host_top99p_sum\": 48121058,\n \"ingested_events_bytes_agg_sum\": -98753531,\n \"iot_device_agg_sum\": -35345901,\n \"iot_device_top99p_sum\": -87893463,\n \"last_updated\": \"1947-12-10T16:23:02.812Z\",\n \"live_indexed_events_agg_sum\": -6602195,\n \"live_ingested_bytes_agg_sum\": -99854782,\n \"logs_by_retention\": {\n  \"orgs\": {\n   \"usage\": [\n    {\n     \"usage\": [\n      {\n       \"logs_indexed_logs_usage_sum\": -85223442,\n       \"logs_live_indexed_logs_usage_sum\": 37682605,\n       \"logs_rehydrated_indexed_logs_usage_sum\": -15523159,\n       \"retention\": \"in ut irure\"\n      },\n      {\n       \"logs_indexed_logs_usage_sum\": 39082931,\n       \"logs_live_indexed_logs_usage_sum\": 2816669,\n       \"logs_rehydrated_indexed_logs_usage_sum\": 39163841,\n       \"retention\": \"qui nostrud cillum esse voluptate\"\n      }\n     ]\n    },\n    {\n     \"usage\": [\n      {\n       \"logs_indexed_logs_usage_sum\": -61695126,\n       \"logs_live_indexed_logs_usage_sum\": -61505647,\n       \"logs_rehydrated_indexed_logs_usage_sum\": 12736970,\n       \"retention\": \"officia nulla fugiat labore\"\n      },\n      {\n       \"logs_indexed_logs_usage_sum\": 30829582,\n       \"logs_live_indexed_logs_usage_sum\": 47313413,\n       \"logs_rehydrated_indexed_logs_usage_sum\": -68436712,\n       \"retention\": \"Lorem ea ipsum esse\"\n      }\n     ]\n    }\n   ]\n  },\n  \"usage\": [\n   {\n    \"logs_indexed_logs_usage_agg_sum\": 81018897,\n    \"logs_live_indexed_logs_usage_agg_sum\": 54848696,\n    \"logs_rehydrated_indexed_logs_usage_agg_sum\": -3874272,\n    \"retention\": \"laborum Ut\"\n   },\n   {\n    \"logs_indexed_logs_usage_agg_sum\": -8733184,\n    \"logs_live_indexed_logs_usage_agg_sum\": 51891972,\n    \"logs_rehydrated_indexed_logs_usage_agg_sum\": -95826620,\n    \"retention\": \"fugiat\"\n   }\n  ],\n  \"usage_by_month\": {\n   \"date\": \"fugiat enim sed\",\n   \"usage\": [\n    {\n     \"logs_indexed_logs_usage_sum\": 90784806,\n     \"logs_live_indexed_logs_usage_sum\": -74641753,\n     \"logs_rehydrated_indexed_logs_usage_sum\": -70434768,\n     \"retention\": \"aliqua commodo\"\n    },\n    {\n     \"logs_indexed_logs_usage_sum\": 58997028,\n     \"logs_live_indexed_logs_usage_sum\": 75024412,\n     \"logs_rehydrated_indexed_logs_usage_sum\": 38295198,\n     \"retention\": \"sed aliquip\"\n    }\n   ]\n  }\n },\n \"mobile_rum_session_count_agg_sum\": 76688109,\n \"mobile_rum_session_count_android_agg_sum\": -1072831,\n \"mobile_rum_session_count_ios_agg_sum\": 49747943,\n \"netflow_indexed_events_count_agg_sum\": -2125752,\n \"npm_host_top99p_sum\": 27028108,\n \"opentelemetry_host_top99p_sum\": -11917858,\n \"profiling_container_agent_count_avg\": -88405582,\n \"profiling_host_count_top99p_sum\": 15667971,\n \"rehydrated_indexed_events_agg_sum\": -66624134,\n \"rehydrated_ingested_bytes_agg_sum\": -72533684,\n \"rum_session_count_agg_sum\": -58967809,\n \"rum_total_session_count_agg_sum\": -48165628,\n \"start_date\": \"2015-06-27T20:50:07.297Z\",\n \"synthetics_browser_check_calls_count_agg_sum\": -70130431,\n \"synthetics_check_calls_count_agg_sum\": 48354197,\n \"trace_search_indexed_events_count_agg_sum\": -82652908,\n \"twol_ingested_events_bytes_agg_sum\": -57652072,\n \"usage\": [\n  {\n   \"agent_host_top99p\": 42409911,\n   \"apm_azure_app_service_host_top99p\": 43923522,\n   \"apm_host_top99p\": 6062929,\n   \"audit_logs_lines_indexed_sum\": 82565032,\n   \"aws_host_top99p\": -82467799,\n   \"aws_lambda_func_count\": -96608387,\n   \"aws_lambda_invocations_sum\": 89197304,\n   \"azure_app_service_top99p\": -83474665,\n   \"billable_ingested_bytes_sum\": -19152089,\n   \"container_avg\": -55331305,\n   \"container_hwm\": 55183707,\n   \"cspm_container_avg\": -96602313,\n   \"cspm_container_hwm\": -68488898,\n   \"cspm_host_top99p\": 93917835,\n   \"custom_ts_avg\": 15594295,\n   \"cws_container_count_avg\": -70559273,\n   \"cws_host_top99p\": 69667302,\n   \"date\": \"2000-08-24T06:08:53.153Z\",\n   \"dbm_host_top99p\": -42212144,\n   \"dbm_queries_count_avg\": 98458679,\n   \"fargate_tasks_count_avg\": 56678930,\n   \"fargate_tasks_count_hwm\": 17297203,\n   \"gcp_host_top99p\": 84499529,\n   \"heroku_host_top99p\": 6427290,\n   \"incident_management_monthly_active_users_hwm\": -40766699,\n   \"indexed_events_count_sum\": -84953613,\n   \"infra_host_top99p\": 28602718,\n   \"ingested_events_bytes_sum\": -11979592,\n   \"iot_device_sum\": 69529611,\n   \"iot_device_top99p\": -780959,\n   \"mobile_rum_session_count_android_sum\": -66626155,\n   \"mobile_rum_session_count_ios_sum\": -29198171,\n   \"mobile_rum_session_count_sum\": -41595577,\n   \"netflow_indexed_events_count_sum\": 55394681,\n   \"npm_host_top99p\": -61174188,\n   \"opentelemetry_host_top99p\": 74166228,\n   \"orgs\": [\n    {\n     \"agent_host_top99p\": 4252046,\n     \"apm_azure_app_service_host_top99p\": 49466875,\n     \"apm_host_top99p\": -48794772,\n     \"audit_logs_lines_indexed_sum\": -85634954,\n     \"aws_host_top99p\": -23591379,\n     \"aws_lambda_func_count\": 23410683,\n     \"aws_lambda_invocations_sum\": 88009320,\n     \"azure_app_service_top99p\": -26391412,\n     \"billable_ingested_bytes_sum\": -67417136,\n     \"container_avg\": 17556093,\n     \"container_hwm\": 6118376,\n     \"cspm_container_avg\": 87694293,\n     \"cspm_container_hwm\": -59973431,\n     \"cspm_host_top99p\": -47729152,\n     \"custom_ts_avg\": -61372716,\n     \"cws_container_count_avg\": -95827775,\n     \"cws_host_top99p\": 45608868,\n     \"dbm_host_top99p_sum\": 45273654,\n     \"dbm_queries_agg_sum\": -62762550,\n     \"fargate_tasks_count_avg\": -13175573,\n     \"fargate_tasks_count_hwm\": -84582076,\n     \"gcp_host_top99p\": 88066267,\n     \"heroku_host_top99p\": 68113082,\n     \"id\": \"minim\",\n     \"incident_management_monthly_active_users_hwm\": 22289637,\n     \"indexed_events_count_sum\": 3476168,\n     \"infra_host_top99p\": 7979365,\n     \"ingested_events_bytes_sum\": 37485663,\n     \"iot_device_agg_sum\": -89882004,\n     \"iot_device_top99p_sum\": 14704054,\n     \"mobile_rum_session_count_android_sum\": -49353197,\n     \"mobile_rum_session_count_ios_sum\": -32393758,\n     \"mobile_rum_session_count_sum\": -62191594,\n     \"name\": \"non ut laboris eiusmod esse\",\n     \"netflow_indexed_events_count_sum\": 34303629,\n     \"npm_host_top99p\": -29459618,\n     \"opentelemetry_host_top99p\": -19111730,\n     \"profiling_host_top99p\": -16451637,\n     \"public_id\": \"in anim officia magna\",\n     \"rum_session_count_sum\": -89777232,\n     \"rum_total_session_count_sum\": -28718221,\n     \"synthetics_browser_check_calls_count_sum\": 88851619,\n     \"synthetics_check_calls_count_sum\": 46151389,\n     \"trace_search_indexed_events_count_sum\": 60425049,\n     \"twol_ingested_events_bytes_sum\": 94403177,\n     \"vsphere_host_top99p\": -67413226\n    },\n    {\n     \"agent_host_top99p\": -89255068,\n     \"apm_azure_app_service_host_top99p\": 25065704,\n     \"apm_host_top99p\": 43445660,\n     \"audit_logs_lines_indexed_sum\": 40152516,\n     \"aws_host_top99p\": -71427272,\n     \"aws_lambda_func_count\": -85538985,\n     \"aws_lambda_invocations_sum\": -64873862,\n     \"azure_app_service_top99p\": -46869920,\n     \"billable_ingested_bytes_sum\": 44341664,\n     \"container_avg\": -83575195,\n     \"container_hwm\": -71853396,\n     \"cspm_container_avg\": -15317300,\n     \"cspm_container_hwm\": 35627378,\n     \"cspm_host_top99p\": -50342844,\n     \"custom_ts_avg\": -22913483,\n     \"cws_container_count_avg\": 96552873,\n     \"cws_host_top99p\": -3152719,\n     \"dbm_host_top99p_sum\": 5624322,\n     \"dbm_queries_agg_sum\": 83137450,\n     \"fargate_tasks_count_avg\": -78155731,\n     \"fargate_tasks_count_hwm\": 12877717,\n     \"gcp_host_top99p\": -51303684,\n     \"heroku_host_top99p\": 17361042,\n     \"id\": \"tempor magna id incididunt\",\n     \"incident_management_monthly_active_users_hwm\": -59604640,\n     \"indexed_events_count_sum\": 71205228,\n     \"infra_host_top99p\": 56919930,\n     \"ingested_events_bytes_sum\": 64919254,\n     \"iot_device_agg_sum\": -11695139,\n     \"iot_device_top99p_sum\": 95122575,\n     \"mobile_rum_session_count_android_sum\": -65401849,\n     \"mobile_rum_session_count_ios_sum\": -69432387,\n     \"mobile_rum_session_count_sum\": -65409622,\n     \"name\": \"Lorem dolor\",\n     \"netflow_indexed_events_count_sum\": -4298402,\n     \"npm_host_top99p\": 84163141,\n     \"opentelemetry_host_top99p\": 75083724,\n     \"profiling_host_top99p\": 22657843,\n     \"public_id\": \"officia in ullamco commodo nos\",\n     \"rum_session_count_sum\": -50397933,\n     \"rum_total_session_count_sum\": -34194029,\n     \"synthetics_browser_check_calls_count_sum\": 39546546,\n     \"synthetics_check_calls_count_sum\": -18460083,\n     \"trace_search_indexed_events_count_sum\": -48412956,\n     \"twol_ingested_events_bytes_sum\": -39957975,\n     \"vsphere_host_top99p\": 9824782\n    }\n   ],\n   \"profiling_host_top99p\": 17237830,\n   \"rum_session_count_sum\": -77833408,\n   \"rum_total_session_count_sum\": -91463077,\n   \"synthetics_browser_check_calls_count_sum\": -26964295,\n   \"synthetics_check_calls_count_sum\": -81875658,\n   \"trace_search_indexed_events_count_sum\": 41527861,\n   \"twol_ingested_events_bytes_sum\": 90074070,\n   \"vsphere_host_top99p\": -80875704\n  },\n  {\n   \"agent_host_top99p\": 61048422,\n   \"apm_azure_app_service_host_top99p\": 26758543,\n   \"apm_host_top99p\": 60891059,\n   \"audit_logs_lines_indexed_sum\": -63796169,\n   \"aws_host_top99p\": -70804524,\n   \"aws_lambda_func_count\": -70027769,\n   \"aws_lambda_invocations_sum\": 10309774,\n   \"azure_app_service_top99p\": -19169409,\n   \"billable_ingested_bytes_sum\": 3654113,\n   \"container_avg\": -94534492,\n   \"container_hwm\": 51348914,\n   \"cspm_container_avg\": 70061294,\n   \"cspm_container_hwm\": 76294727,\n   \"cspm_host_top99p\": -50315658,\n   \"custom_ts_avg\": 46268325,\n   \"cws_container_count_avg\": 45456653,\n   \"cws_host_top99p\": -19308487,\n   \"date\": \"2012-06-04T19:46:44.362Z\",\n   \"dbm_host_top99p\": -38899551,\n   \"dbm_queries_count_avg\": -53672896,\n   \"fargate_tasks_count_avg\": 50016735,\n   \"fargate_tasks_count_hwm\": 932436,\n   \"gcp_host_top99p\": 81640914,\n   \"heroku_host_top99p\": -27448996,\n   \"incident_management_monthly_active_users_hwm\": 54610080,\n   \"indexed_events_count_sum\": 24770371,\n   \"infra_host_top99p\": -52594722,\n   \"ingested_events_bytes_sum\": 11943400,\n   \"iot_device_sum\": -20313666,\n   \"iot_device_top99p\": 23123067,\n   \"mobile_rum_session_count_android_sum\": 33096705,\n   \"mobile_rum_session_count_ios_sum\": 98051561,\n   \"mobile_rum_session_count_sum\": -32042332,\n   \"netflow_indexed_events_count_sum\": 10359757,\n   \"npm_host_top99p\": 94573751,\n   \"opentelemetry_host_top99p\": 96144372,\n   \"orgs\": [\n    {\n     \"agent_host_top99p\": 68155442,\n     \"apm_azure_app_service_host_top99p\": -52054792,\n     \"apm_host_top99p\": -35720967,\n     \"audit_logs_lines_indexed_sum\": -15490972,\n     \"aws_host_top99p\": 32372297,\n     \"aws_lambda_func_count\": -3254068,\n     \"aws_lambda_invocations_sum\": 25299771,\n     \"azure_app_service_top99p\": 18929294,\n     \"billable_ingested_bytes_sum\": -80427140,\n     \"container_avg\": -25790075,\n     \"container_hwm\": 30880058,\n     \"cspm_container_avg\": -92231193,\n     \"cspm_container_hwm\": 75006661,\n     \"cspm_host_top99p\": -26587290,\n     \"custom_ts_avg\": -84709431,\n     \"cws_container_count_avg\": -62375307,\n     \"cws_host_top99p\": -66225180,\n     \"dbm_host_top99p_sum\": 4117099,\n     \"dbm_queries_agg_sum\": -45342482,\n     \"fargate_tasks_count_avg\": 47674009,\n     \"fargate_tasks_count_hwm\": -93152721,\n     \"gcp_host_top99p\": 99663572,\n     \"heroku_host_top99p\": -53853974,\n     \"id\": \"incididunt\",\n     \"incident_management_monthly_active_users_hwm\": -11290221,\n     \"indexed_events_count_sum\": -63205164,\n     \"infra_host_top99p\": -16928415,\n     \"ingested_events_bytes_sum\": -11493231,\n     \"iot_device_agg_sum\": 8488989,\n     \"iot_device_top99p_sum\": -31909171,\n     \"mobile_rum_session_count_android_sum\": -82772307,\n     \"mobile_rum_session_count_ios_sum\": 60731139,\n     \"mobile_rum_session_count_sum\": -41992085,\n     \"name\": \"non amet irure in\",\n     \"netflow_indexed_events_count_sum\": -57047311,\n     \"npm_host_top99p\": -16932588,\n     \"opentelemetry_host_top99p\": 85409604,\n     \"profiling_host_top99p\": -83786361,\n     \"public_id\": \"labore enim minim volupt\",\n     \"rum_session_count_sum\": -80838109,\n     \"rum_total_session_count_sum\": -7099421,\n     \"synthetics_browser_check_calls_count_sum\": -67913543,\n     \"synthetics_check_calls_count_sum\": -96618544,\n     \"trace_search_indexed_events_count_sum\": -26529756,\n     \"twol_ingested_events_bytes_sum\": -6088074,\n     \"vsphere_host_top99p\": 56723257\n    },\n    {\n     \"agent_host_top99p\": -94016178,\n     \"apm_azure_app_service_host_top99p\": -22830624,\n     \"apm_host_top99p\": -46023261,\n     \"audit_logs_lines_indexed_sum\": -48533686,\n     \"aws_host_top99p\": -7493859,\n     \"aws_lambda_func_count\": 44143523,\n     \"aws_lambda_invocations_sum\": 42443085,\n     \"azure_app_service_top99p\": -98973142,\n     \"billable_ingested_bytes_sum\": 8491116,\n     \"container_avg\": 18670656,\n     \"container_hwm\": 41384176,\n     \"cspm_container_avg\": -5910898,\n     \"cspm_container_hwm\": 87368147,\n     \"cspm_host_top99p\": -34239406,\n     \"custom_ts_avg\": -5273499,\n     \"cws_container_count_avg\": -65282818,\n     \"cws_host_top99p\": -93337688,\n     \"dbm_host_top99p_sum\": 75325459,\n     \"dbm_queries_agg_sum\": -68630090,\n     \"fargate_tasks_count_avg\": 6468976,\n     \"fargate_tasks_count_hwm\": 71423949,\n     \"gcp_host_top99p\": -66504064,\n     \"heroku_host_top99p\": 35815332,\n     \"id\": \"consectetur consequat\",\n     \"incident_management_monthly_active_users_hwm\": 12909129,\n     \"indexed_events_count_sum\": -71034200,\n     \"infra_host_top99p\": 79945863,\n     \"ingested_events_bytes_sum\": 4111717,\n     \"iot_device_agg_sum\": -90316725,\n     \"iot_device_top99p_sum\": 59557409,\n     \"mobile_rum_session_count_android_sum\": 65929194,\n     \"mobile_rum_session_count_ios_sum\": -24896881,\n     \"mobile_rum_session_count_sum\": -68267764,\n     \"name\": \"dolor\",\n     \"netflow_indexed_events_count_sum\": 23121179,\n     \"npm_host_top99p\": -28183803,\n     \"opentelemetry_host_top99p\": 22144112,\n     \"profiling_host_top99p\": 14958786,\n     \"public_id\": \"fugiat esse cupidatat sit voluptate\",\n     \"rum_session_count_sum\": 8173372,\n     \"rum_total_session_count_sum\": 93694926,\n     \"synthetics_browser_check_calls_count_sum\": 65354724,\n     \"synthetics_check_calls_count_sum\": -54920726,\n     \"trace_search_indexed_events_count_sum\": -13697647,\n     \"twol_ingested_events_bytes_sum\": 97615740,\n     \"vsphere_host_top99p\": -54702652\n    }\n   ],\n   \"profiling_host_top99p\": 77711868,\n   \"rum_session_count_sum\": 36179186,\n   \"rum_total_session_count_sum\": -1715470,\n   \"synthetics_browser_check_calls_count_sum\": -77421086,\n   \"synthetics_check_calls_count_sum\": -12480688,\n   \"trace_search_indexed_events_count_sum\": -85586803,\n   \"twol_ingested_events_bytes_sum\": 19810044,\n   \"vsphere_host_top99p\": -74721098\n  }\n ],\n \"vsphere_host_top99p_sum\": -801454\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=2003-08-24T21:06:35.523Z&end_month=2003-08-24T21:06:35.523Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "include_org_details",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/summary?start_month=2003-08-24T21:06:35.523Z&end_month=2003-08-24T21:06:35.523Z&include_org_details=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"summary"
									],
									"query": [
										{
											"key": "start_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "include_org_details",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Synthetics Checks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/synthetics?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for [Synthetics checks](https://docs.datadoghq.com/synthetics/)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"check_calls_count\": -66123727,\n   \"hour\": \"2018-02-13T18:55:12.545Z\"\n  },\n  {\n   \"check_calls_count\": -13496194,\n   \"hour\": \"2017-07-08T23:08:41.094Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Synthetics API Checks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics_api"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for [synthetics API checks](https://docs.datadoghq.com/synthetics/)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"check_calls_count\": -34810729,\n   \"hour\": \"1991-01-26T09:09:05.322Z\"\n  },\n  {\n   \"check_calls_count\": -71444679,\n   \"hour\": \"2018-11-04T22:57:04.322Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_api?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_api"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for Synthetics Browser Checks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"synthetics_browser"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for synthetics browser checks."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"browser_check_calls_count\": -51566497,\n   \"hour\": \"1953-09-16T08:04:45.027Z\"\n  },\n  {\n   \"browser_check_calls_count\": -19695608,\n   \"hour\": \"1954-08-19T03:30:43.482Z\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/synthetics_browser?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"synthetics_browser"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get hourly usage for custom metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"timeseries"
							],
							"query": [
								{
									"key": "start_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "(Required) Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour."
								},
								{
									"key": "end_hr",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get hourly usage for [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/)."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"usage\": [\n  {\n   \"hour\": \"2010-06-10T11:14:23.583Z\",\n   \"num_custom_input_timeseries\": -48045542,\n   \"num_custom_output_timeseries\": 72491018,\n   \"num_custom_timeseries\": 58506639\n  },\n  {\n   \"hour\": \"1981-09-05T16:29:33.279Z\",\n   \"num_custom_input_timeseries\": -87915171,\n   \"num_custom_output_timeseries\": 42475031,\n   \"num_custom_timeseries\": -26808492\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/timeseries?start_hr=2003-08-24T21:06:35.523Z&end_hr=2003-08-24T21:06:35.523Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"timeseries"
									],
									"query": [
										{
											"key": "start_hr",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "end_hr",
											"value": "2003-08-24T21:06:35.523Z"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get all custom metrics by hourly average",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=2003-08-24T21:06:35.523Z&day=2003-08-24T21:06:35.523Z&names=magna nostrud&names=dolor cupidatat in&limit=500&next_record_id=dolor nostrud irure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"usage",
								"top_avg_metrics"
							],
							"query": [
								{
									"key": "month",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for usage beginning at this hour. (Either month or day should be specified, but not both)"
								},
								{
									"key": "day",
									"value": "2003-08-24T21:06:35.523Z",
									"description": "Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for usage beginning at this hour. (Either month or day should be specified, but not both)"
								},
								{
									"key": "names",
									"value": "magna nostrud",
									"description": "Comma-separated list of metric names."
								},
								{
									"key": "names",
									"value": "dolor cupidatat in",
									"description": "Comma-separated list of metric names."
								},
								{
									"key": "limit",
									"value": "500",
									"description": "Maximum number of results to return (between 1 and 5000) - defaults to 500 results if limit not specified."
								},
								{
									"key": "next_record_id",
									"value": "dolor nostrud irure",
									"description": "List following results with a next_record_id provided in the previous query."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get all [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/) by hourly average. Use the month parameter to get a month-to-date data resolution or use the day parameter to get a daily resolution. One of the two is required, and only one of the two is allowed."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=2003-08-24T21:06:35.523Z&day=2003-08-24T21:06:35.523Z&names=non Ut culpa&names=non ipsum sit fugiat&limit=500&next_record_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "day",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "names",
											"value": "non Ut culpa"
										},
										{
											"key": "names",
											"value": "non ipsum sit fugiat"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "next_record_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"metadata\": {\n  \"day\": \"2001-07-09T13:13:05.143Z\",\n  \"month\": \"1980-07-29T03:31:58.580Z\",\n  \"pagination\": {\n   \"limit\": -81856881,\n   \"next_record_id\": \"do fugi\",\n   \"total_number_of_records\": -34053758\n  }\n },\n \"usage\": [\n  {\n   \"avg_metric_hour\": 64176339,\n   \"max_metric_hour\": 12515557,\n   \"metric_category\": \"custom\",\n   \"metric_name\": \"voluptate veniam dolore enim do\"\n  },\n  {\n   \"avg_metric_hour\": -48633252,\n   \"max_metric_hour\": -55004080,\n   \"metric_category\": \"custom\",\n   \"metric_name\": \"irure pariatur enim ea\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=2003-08-24T21:06:35.523Z&day=2003-08-24T21:06:35.523Z&names=non Ut culpa&names=non ipsum sit fugiat&limit=500&next_record_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "day",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "names",
											"value": "non Ut culpa"
										},
										{
											"key": "names",
											"value": "non ipsum sit fugiat"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "next_record_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Forbidden - User is not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/usage/top_avg_metrics?month=2003-08-24T21:06:35.523Z&day=2003-08-24T21:06:35.523Z&names=non Ut culpa&names=non ipsum sit fugiat&limit=500&next_record_id=dolor nostrud irure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"usage",
										"top_avg_metrics"
									],
									"query": [
										{
											"key": "month",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "day",
											"value": "2003-08-24T21:06:35.523Z"
										},
										{
											"key": "names",
											"value": "non Ut culpa"
										},
										{
											"key": "names",
											"value": "non ipsum sit fugiat"
										},
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "next_record_id",
											"value": "dolor nostrud irure"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;datetime-format=rfc3339"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "The usage metering API allows you to get hourly, daily, and\nmonthly usage across multiple facets of Datadog.\nThis API is available to all Pro and Enterprise customers.\nUsage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).\n\n**Note**: Usage data is delayed by up to 72 hours from when it was incurred.\nIt is retained for the past 15 months."
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create a service account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"<string>\",\n            \"service_account\": \"<boolean>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/service_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"service_accounts"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a service account for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"service_account\": true,\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1960-10-21T04:32:59.450Z\",\n   \"disabled\": false,\n   \"email\": \"elit qui aute sit proident\",\n   \"handle\": \"dolore dolore consectetur\",\n   \"icon\": \"officia cupidatat\",\n   \"modified_at\": \"2018-12-28T07:17:38.893Z\",\n   \"name\": \"minim cillum do ipsum\",\n   \"service_account\": true,\n   \"status\": \"culpa nostrud\",\n   \"title\": \"mollit \",\n   \"verified\": true\n  },\n  \"id\": \"officia\",\n  \"relationships\": {\n   \"org\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"orgs\"\n    }\n   },\n   \"other_orgs\": {\n    \"data\": []\n   },\n   \"other_users\": {\n    \"data\": []\n   },\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"users\"\n },\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2001-04-13T08:46:21.337Z\",\n    \"description\": \"fugiat\",\n    \"disabled\": true,\n    \"modified_at\": \"2005-02-22T01:47:58.921Z\",\n    \"name\": \"eu\",\n    \"public_id\": \"laborum eiusmod irure\",\n    \"sharing\": \"esse ullamco incididunt anim\",\n    \"url\": \"tempor adipisicing occaec\"\n   },\n   \"id\": \"quis amet irure non veniam\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2003-04-23T07:45:33.114Z\",\n    \"description\": \"reprehenderit culpa\",\n    \"disabled\": true,\n    \"modified_at\": \"1975-12-13T15:04:12.898Z\",\n    \"name\": \"in magna occaecat incididunt\",\n    \"public_id\": \"sunt dolor nisi adi\",\n    \"sharing\": \"Ut proident\",\n    \"url\": \"fugiat laborum incididunt\"\n   },\n   \"id\": \"deserunt\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"service_account\": true,\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"service_account\": true,\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/service_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"service_accounts"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Send invitation emails",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": [\n        {\n            \"type\": \"user_invitations\",\n            \"relationships\": {\n                \"user\": {\n                    \"data\": {\n                        \"id\": \"<string>\",\n                        \"type\": \"users\"\n                    }\n                }\n            }\n        },\n        {\n            \"type\": \"user_invitations\",\n            \"relationships\": {\n                \"user\": {\n                    \"data\": {\n                        \"id\": \"<string>\",\n                        \"type\": \"users\"\n                    }\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/user_invitations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Sends emails to one or more users inviting them to join the organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"2014-05-04T20:49:10.395Z\",\n    \"expires_at\": \"1979-11-21T09:20:15.579Z\",\n    \"invite_type\": \"veniam dolore\",\n    \"uuid\": \"ipsum ut ullamco\"\n   },\n   \"id\": \"sit et proident qui deserunt\",\n   \"type\": \"user_invitations\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"1963-03-19T20:25:34.330Z\",\n    \"expires_at\": \"1973-05-13T02:53:08.708Z\",\n    \"invite_type\": \"incididunt proident\",\n    \"uuid\": \"sed qui sunt\"\n   },\n   \"id\": \"Excepteur fugiat ut non cupidatat\",\n   \"type\": \"user_invitations\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": []\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a user invitation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"user_invitations",
								":user_invitation_uuid"
							],
							"variable": [
								{
									"key": "user_invitation_uuid",
									"value": "<string>",
									"description": "(Required) The UUID of the user invitation."
								}
							]
						},
						"description": "Returns a single user invitation by its UUID."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1945-07-30T19:21:27.186Z\",\n   \"expires_at\": \"1984-02-27T14:48:46.230Z\",\n   \"invite_type\": \"veniam amet dolor\",\n   \"uuid\": \"anim sint voluptate\"\n  },\n  \"id\": \"eu\",\n  \"type\": \"user_invitations\"\n }\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/user_invitations/:user_invitation_uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"user_invitations",
										":user_invitation_uuid"
									],
									"variable": [
										{
											"key": "user_invitation_uuid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							],
							"query": [
								{
									"key": "page[size]",
									"value": "10",
									"description": "Size for a given page."
								},
								{
									"key": "page[number]",
									"value": "0",
									"description": "Specific page number to return."
								},
								{
									"key": "sort",
									"value": "name",
									"description": "User attribute to order results by. Sort order is ascending by default.\nSort order is descending if the field\nis prefixed by a negative sign, for example `sort=-name`. Options: `name`,\n`modified_at`, `user_count`."
								},
								{
									"key": "sort_dir",
									"value": "desc",
									"description": "Direction of sort. Options: `asc`, `desc`."
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "Filter all users by the given string. Defaults to no filtering."
								},
								{
									"key": "filter[status]",
									"value": "<string>",
									"description": "Filter on status attribute.\nComma separated list, with possible values `Active`, `Pending`, and `Disabled`.\nDefaults to no filtering."
								}
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Get the list of all users in the organization. This list includes\nall users even if they are deactivated or unverified."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=Active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[status]",
											"value": "Active"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"attributes\": {\n    \"created_at\": \"1955-07-17T04:08:09.746Z\",\n    \"disabled\": false,\n    \"email\": \"laborum\",\n    \"handle\": \"ad dolor sint anim pariatur\",\n    \"icon\": \"aliqua sed nostrud mollit\",\n    \"modified_at\": \"1989-07-19T07:21:56.986Z\",\n    \"name\": \"ut Lorem magna et enim\",\n    \"service_account\": true,\n    \"status\": \"esse\",\n    \"title\": \"veniam id aliquip\",\n    \"verified\": false\n   },\n   \"id\": \"velit cillum nulla officia\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  },\n  {\n   \"attributes\": {\n    \"created_at\": \"2005-01-14T11:17:16.656Z\",\n    \"disabled\": false,\n    \"email\": \"minim nostrud non sit\",\n    \"handle\": \"reprehenderit nisi\",\n    \"icon\": \"voluptate n\",\n    \"modified_at\": \"1974-02-23T08:27:26.053Z\",\n    \"name\": \"non laboris\",\n    \"service_account\": false,\n    \"status\": \"dolor\",\n    \"title\": \"nulla ex pariatur\",\n    \"verified\": true\n   },\n   \"id\": \"commodo dolor do ad labore\",\n   \"relationships\": {\n    \"org\": {\n     \"data\": {\n      \"id\": \"00000000-0000-0000-0000-000000000000\",\n      \"type\": \"orgs\"\n     }\n    },\n    \"other_orgs\": {\n     \"data\": []\n    },\n    \"other_users\": {\n     \"data\": []\n    },\n    \"roles\": {\n     \"data\": [\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      },\n      {\n       \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n       \"type\": \"roles\"\n      }\n     ]\n    }\n   },\n   \"type\": \"users\"\n  }\n ],\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1964-03-23T17:28:03.615Z\",\n    \"description\": \"laborum id sed\",\n    \"disabled\": true,\n    \"modified_at\": \"1963-06-01T22:13:11.780Z\",\n    \"name\": \"cupidatat fugiat\",\n    \"public_id\": \"eu mollit et dolor\",\n    \"sharing\": \"ut amet nisi ut\",\n    \"url\": \"cupidatat dolor qui amet\"\n   },\n   \"id\": \"proident molli\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"1948-01-12T02:59:02.337Z\",\n    \"description\": \"occaecat\",\n    \"disabled\": true,\n    \"modified_at\": \"1948-09-15T23:25:59.744Z\",\n    \"name\": \"eu irure Duis nis\",\n    \"public_id\": \"Excepteur\",\n    \"sharing\": \"et aute dolore ipsum\",\n    \"url\": \"Excepteur dolore\"\n   },\n   \"id\": \"ut\"\n  }\n ],\n \"meta\": {\n  \"page\": {\n   \"total_count\": -12086852,\n   \"total_filtered_count\": -5748609\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=Active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[status]",
											"value": "Active"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users?page[size]=10&page[number]=0&sort=name&sort_dir=desc&filter=<string>&filter[status]=Active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "page[size]",
											"value": "10"
										},
										{
											"key": "page[number]",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "name"
										},
										{
											"key": "sort_dir",
											"value": "desc"
										},
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "filter[status]",
											"value": "Active"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"<string>\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"<string>\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for our customers. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Create a user for your organization."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1960-10-21T04:32:59.450Z\",\n   \"disabled\": false,\n   \"email\": \"elit qui aute sit proident\",\n   \"handle\": \"dolore dolore consectetur\",\n   \"icon\": \"officia cupidatat\",\n   \"modified_at\": \"2018-12-28T07:17:38.893Z\",\n   \"name\": \"minim cillum do ipsum\",\n   \"service_account\": true,\n   \"status\": \"culpa nostrud\",\n   \"title\": \"mollit \",\n   \"verified\": true\n  },\n  \"id\": \"officia\",\n  \"relationships\": {\n   \"org\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"orgs\"\n    }\n   },\n   \"other_orgs\": {\n    \"data\": []\n   },\n   \"other_users\": {\n    \"data\": []\n   },\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"users\"\n },\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2001-04-13T08:46:21.337Z\",\n    \"description\": \"fugiat\",\n    \"disabled\": true,\n    \"modified_at\": \"2005-02-22T01:47:58.921Z\",\n    \"name\": \"eu\",\n    \"public_id\": \"laborum eiusmod irure\",\n    \"sharing\": \"esse ullamco incididunt anim\",\n    \"url\": \"tempor adipisicing occaec\"\n   },\n   \"id\": \"quis amet irure non veniam\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2003-04-23T07:45:33.114Z\",\n    \"description\": \"reprehenderit culpa\",\n    \"disabled\": true,\n    \"modified_at\": \"1975-12-13T15:04:12.898Z\",\n    \"name\": \"in magna occaecat incididunt\",\n    \"public_id\": \"sunt dolor nisi adi\",\n    \"sharing\": \"Ut proident\",\n    \"url\": \"fugiat laborum incididunt\"\n   },\n   \"id\": \"deserunt\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"email\": \"jane.doe@example.com\",\n            \"name\": \"<string>\",\n            \"title\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"relationships\": {\n            \"roles\": {\n                \"data\": [\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    },\n                    {\n                        \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n                        \"type\": \"roles\"\n                    }\n                ]\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Disable a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Disable a user. Can only be used with an application key belonging\nto an administrator user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get user details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Get a user in the organization specified by the user’s `user_id`."
					},
					"response": [
						{
							"name": "OK for get user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1960-10-21T04:32:59.450Z\",\n   \"disabled\": false,\n   \"email\": \"elit qui aute sit proident\",\n   \"handle\": \"dolore dolore consectetur\",\n   \"icon\": \"officia cupidatat\",\n   \"modified_at\": \"2018-12-28T07:17:38.893Z\",\n   \"name\": \"minim cillum do ipsum\",\n   \"service_account\": true,\n   \"status\": \"culpa nostrud\",\n   \"title\": \"mollit \",\n   \"verified\": true\n  },\n  \"id\": \"officia\",\n  \"relationships\": {\n   \"org\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"orgs\"\n    }\n   },\n   \"other_orgs\": {\n    \"data\": []\n   },\n   \"other_users\": {\n    \"data\": []\n   },\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"users\"\n },\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2001-04-13T08:46:21.337Z\",\n    \"description\": \"fugiat\",\n    \"disabled\": true,\n    \"modified_at\": \"2005-02-22T01:47:58.921Z\",\n    \"name\": \"eu\",\n    \"public_id\": \"laborum eiusmod irure\",\n    \"sharing\": \"esse ullamco incididunt anim\",\n    \"url\": \"tempor adipisicing occaec\"\n   },\n   \"id\": \"quis amet irure non veniam\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2003-04-23T07:45:33.114Z\",\n    \"description\": \"reprehenderit culpa\",\n    \"disabled\": true,\n    \"modified_at\": \"1975-12-13T15:04:12.898Z\",\n    \"name\": \"in magna occaecat incididunt\",\n    \"public_id\": \"sunt dolor nisi adi\",\n    \"sharing\": \"Ut proident\",\n    \"url\": \"fugiat laborum incididunt\"\n   },\n   \"id\": \"deserunt\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Edit a user. Can only be used with an application key belonging\nto an administrator user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1960-10-21T04:32:59.450Z\",\n   \"disabled\": false,\n   \"email\": \"elit qui aute sit proident\",\n   \"handle\": \"dolore dolore consectetur\",\n   \"icon\": \"officia cupidatat\",\n   \"modified_at\": \"2018-12-28T07:17:38.893Z\",\n   \"name\": \"minim cillum do ipsum\",\n   \"service_account\": true,\n   \"status\": \"culpa nostrud\",\n   \"title\": \"mollit \",\n   \"verified\": true\n  },\n  \"id\": \"officia\",\n  \"relationships\": {\n   \"org\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"orgs\"\n    }\n   },\n   \"other_orgs\": {\n    \"data\": []\n   },\n   \"other_users\": {\n    \"data\": []\n   },\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"users\"\n },\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2001-04-13T08:46:21.337Z\",\n    \"description\": \"fugiat\",\n    \"disabled\": true,\n    \"modified_at\": \"2005-02-22T01:47:58.921Z\",\n    \"name\": \"eu\",\n    \"public_id\": \"laborum eiusmod irure\",\n    \"sharing\": \"esse ullamco incididunt anim\",\n    \"url\": \"tempor adipisicing occaec\"\n   },\n   \"id\": \"quis amet irure non veniam\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2003-04-23T07:45:33.114Z\",\n    \"description\": \"reprehenderit culpa\",\n    \"disabled\": true,\n    \"modified_at\": \"1975-12-13T15:04:12.898Z\",\n    \"name\": \"in magna occaecat incididunt\",\n    \"public_id\": \"sunt dolor nisi adi\",\n    \"sharing\": \"Ut proident\",\n    \"url\": \"fugiat laborum incididunt\"\n   },\n   \"id\": \"deserunt\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"attributes\": {\n            \"disabled\": \"<boolean>\",\n            \"email\": \"<string>\",\n            \"name\": \"<string>\"\n        },\n        \"type\": \"users\",\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a user organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id",
								"orgs"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Get a user organization. Returns the user information and all organizations\njoined by this user."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"attributes\": {\n   \"created_at\": \"1960-10-21T04:32:59.450Z\",\n   \"disabled\": false,\n   \"email\": \"elit qui aute sit proident\",\n   \"handle\": \"dolore dolore consectetur\",\n   \"icon\": \"officia cupidatat\",\n   \"modified_at\": \"2018-12-28T07:17:38.893Z\",\n   \"name\": \"minim cillum do ipsum\",\n   \"service_account\": true,\n   \"status\": \"culpa nostrud\",\n   \"title\": \"mollit \",\n   \"verified\": true\n  },\n  \"id\": \"officia\",\n  \"relationships\": {\n   \"org\": {\n    \"data\": {\n     \"id\": \"00000000-0000-0000-0000-000000000000\",\n     \"type\": \"orgs\"\n    }\n   },\n   \"other_orgs\": {\n    \"data\": []\n   },\n   \"other_users\": {\n    \"data\": []\n   },\n   \"roles\": {\n    \"data\": [\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     },\n     {\n      \"id\": \"3653d3c6-0c75-11ea-ad28-fb5701eabc7d\",\n      \"type\": \"roles\"\n     }\n    ]\n   }\n  },\n  \"type\": \"users\"\n },\n \"included\": [\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2001-04-13T08:46:21.337Z\",\n    \"description\": \"fugiat\",\n    \"disabled\": true,\n    \"modified_at\": \"2005-02-22T01:47:58.921Z\",\n    \"name\": \"eu\",\n    \"public_id\": \"laborum eiusmod irure\",\n    \"sharing\": \"esse ullamco incididunt anim\",\n    \"url\": \"tempor adipisicing occaec\"\n   },\n   \"id\": \"quis amet irure non veniam\"\n  },\n  {\n   \"type\": \"orgs\",\n   \"attributes\": {\n    \"created_at\": \"2003-04-23T07:45:33.114Z\",\n    \"description\": \"reprehenderit culpa\",\n    \"disabled\": true,\n    \"modified_at\": \"1975-12-13T15:04:12.898Z\",\n    \"name\": \"in magna occaecat incididunt\",\n    \"public_id\": \"sunt dolor nisi adi\",\n    \"sharing\": \"Ut proident\",\n    \"url\": \"fugiat laborum incididunt\"\n   },\n   \"id\": \"deserunt\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/orgs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"orgs"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a user permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"users",
								":user_id",
								"permissions"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<string>",
									"description": "(Required) The ID of the user."
								}
							]
						},
						"description": "Get a user permission set. Returns a list of the user’s permissions\ngranted by the associated user's roles."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1964-02-28T05:49:09.870Z\",\n    \"description\": \"consequat eu\",\n    \"display_name\": \"id officia consequat minim\",\n    \"display_type\": \"est incididu\",\n    \"group_name\": \"fugiat consecte\",\n    \"name\": \"id consequat consectetur\",\n    \"restricted\": true\n   },\n   \"id\": \"nisi laboris voluptate culpa\"\n  },\n  {\n   \"type\": \"permissions\",\n   \"attributes\": {\n    \"created\": \"1979-06-06T14:36:30.849Z\",\n    \"description\": \"eu \",\n    \"display_name\": \"quis\",\n    \"display_type\": \"aute Ut cillum \",\n    \"group_name\": \"\",\n    \"name\": \"mollit et voluptate\",\n    \"restricted\": false\n   },\n   \"id\": \"labor\"\n  }\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v2/users/:user_id/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"users",
										":user_id",
										"permissions"
									],
									"variable": [
										{
											"key": "user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Create, edit, and disable users."
		},
		{
			"name": "Webhooks Integration",
			"item": [
				{
					"name": "Create a custom variable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\",\n    \"is_secret\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates an endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\",\n    \"is_secret\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"CUSTOM_VARIABLE_NAME\",\n \"is_secret\": true,\n \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\",\n    \"is_secret\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\",\n    \"is_secret\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a custom variable",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "custom_variable_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the custom variable."
								}
							]
						},
						"description": "Deletes the endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a custom variable",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "custom_variable_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the custom variable."
								}
							]
						},
						"description": "Shows the content of the custom variable with the name `<CUSTOM_VARIABLE_NAME>`.\n\nIf the custom variable is secret, the value does not return in the\nresponse payload."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"CUSTOM_VARIABLE_NAME\",\n \"is_secret\": true,\n \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a custom variable",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"is_secret\": true,\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"custom-variables",
								":custom_variable_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "custom_variable_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the custom variable."
								}
							]
						},
						"description": "Updates the endpoint with the name `<CUSTOM_VARIABLE_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_secret\": true,\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"CUSTOM_VARIABLE_NAME\",\n \"is_secret\": true,\n \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_secret\": true,\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_secret\": true,\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_secret\": true,\n    \"name\": \"CUSTOM_VARIABLE_NAME\",\n    \"value\": \"CUSTOM_VARIABLE_VALUE\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/custom-variables/:custom_variable_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"custom-variables",
										":custom_variable_name"
									],
									"variable": [
										{
											"key": "custom_variable_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a webhooks integration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"WEBHOOK_NAME\",\n    \"url\": \"https://example.com/webhook\",\n    \"custom_headers\": \"ex et culpa\",\n    \"encode_as\": \"json\",\n    \"payload\": \"elit est quis laboris\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								}
							]
						},
						"description": "Creates an endpoint with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"WEBHOOK_NAME\",\n    \"url\": \"https://example.com/webhook\",\n    \"custom_headers\": \"ex et culpa\",\n    \"encode_as\": \"json\",\n    \"payload\": \"elit est quis laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"WEBHOOK_NAME\",\n \"url\": \"https://example.com/webhook\",\n \"custom_headers\": \"ex et culpa\",\n \"encode_as\": \"json\",\n \"payload\": \"elit est quis laboris\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"WEBHOOK_NAME\",\n    \"url\": \"https://example.com/webhook\",\n    \"custom_headers\": \"ex et culpa\",\n    \"encode_as\": \"json\",\n    \"payload\": \"elit est quis laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"WEBHOOK_NAME\",\n    \"url\": \"https://example.com/webhook\",\n    \"custom_headers\": \"ex et culpa\",\n    \"encode_as\": \"json\",\n    \"payload\": \"elit est quis laboris\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a webhook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "webhook_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the webhook."
								}
							]
						},
						"description": "Deletes the endpoint with the name `<WEBHOOK NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a webhook integration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "webhook_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the webhook."
								}
							]
						},
						"description": "Gets the content of the webhook with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"WEBHOOK_NAME\",\n \"url\": \"https://example.com/webhook\",\n \"custom_headers\": \"ex et culpa\",\n \"encode_as\": \"json\",\n \"payload\": \"elit est quis laboris\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update a webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"custom_headers\": \"aute commodo\",\n    \"encode_as\": \"json\",\n    \"name\": \"WEBHOOK_NAME\",\n    \"payload\": \"exercitation velit\",\n    \"url\": \"https://example.com/webhook\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"integration",
								"webhooks",
								"configuration",
								"webhooks",
								":webhook_name"
							],
							"variable": [
								{
									"key": "site",
									"value": "{{site}}",
									"description": "The regional site for a Datadog customer. (This can only be one of datadoghq.com,us3.datadoghq.com,datadoghq.eu,ddog-gov.com)"
								},
								{
									"key": "subdomain",
									"value": "{{subdomain}}",
									"description": "The subdomain where the API is deployed."
								},
								{
									"key": "webhook_name",
									"value": "dolor nostrud irure",
									"description": "(Required) The name of the webhook."
								}
							]
						},
						"description": "Updates the endpoint with the name `<WEBHOOK_NAME>`."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"custom_headers\": \"aute commodo\",\n    \"encode_as\": \"json\",\n    \"name\": \"WEBHOOK_NAME\",\n    \"payload\": \"exercitation velit\",\n    \"url\": \"https://example.com/webhook\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"WEBHOOK_NAME\",\n \"url\": \"https://example.com/webhook\",\n \"custom_headers\": \"ex et culpa\",\n \"encode_as\": \"json\",\n \"payload\": \"elit est quis laboris\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"custom_headers\": \"aute commodo\",\n    \"encode_as\": \"json\",\n    \"name\": \"WEBHOOK_NAME\",\n    \"payload\": \"exercitation velit\",\n    \"url\": \"https://example.com/webhook\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Authentication error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"custom_headers\": \"aute commodo\",\n    \"encode_as\": \"json\",\n    \"name\": \"WEBHOOK_NAME\",\n    \"payload\": \"exercitation velit\",\n    \"url\": \"https://example.com/webhook\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						},
						{
							"name": "Item Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "DD-API-KEY",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"custom_headers\": \"aute commodo\",\n    \"encode_as\": \"json\",\n    \"name\": \"WEBHOOK_NAME\",\n    \"payload\": \"exercitation velit\",\n    \"url\": \"https://example.com/webhook\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/integration/webhooks/configuration/webhooks/:webhook_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"integration",
										"webhooks",
										"configuration",
										"webhooks",
										":webhook_name"
									],
									"variable": [
										{
											"key": "webhook_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  \"Bad Request\",\n  \"Bad Request\"\n ]\n}"
						}
					]
				}
			],
			"description": "Configure your Datadog-Webhooks integration directly through the Datadog API.\nFor more information about the Datadog-Webhooks integration,\nsee the [integration page](https://docs.datadoghq.com/integrations/webhooks)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add( { key: 'DD-API-KEY', value: pm.environment.get('api_key') } );",
					"pm.request.headers.add( { key: 'DD-APPLICATION-KEY', value: pm.environment.get('application_key') } );"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "site",
			"value": "datadoghq.com"
		},
		{
			"key": "subdomain",
			"value": "api"
		},
		{
			"key": "baseUrl",
			"value": "https://{{subdomain}}.{{site}}"
		}
	]
}